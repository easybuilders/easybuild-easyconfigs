name: easyconfigs unit tests
on: [pull_request]
jobs:
  test-suite:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        python: [3.6]
        modules_tool: [Lmod-8.1.14]
        module_syntax: [Lua]
      fail-fast: false
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0 # Required for git merge-base to work

    - name: Cache source files in /tmp/sources
      id: cache-sources
      uses: actions/cache@v2
      with:
        path: /tmp/sources
        key: eb-sourcepath

    - name: set up Python
      uses: actions/setup-python@v1
      with:
        python-version: ${{matrix.python}}
        architecture: x64

    - name: install OS & Python packages
      run: |
        # disable apt-get update, we don't really need it,
        # and it does more harm than good (it's fairly expensive, and it results in flaky test runs)
        # sudo apt-get update
        # for modules tool
        sudo apt-get install lua5.2 liblua5.2-dev lua-filesystem lua-posix tcl tcl-dev
        # fix for lua-posix packaging issue, see https://bugs.launchpad.net/ubuntu/+source/lua-posix/+bug/1752082
        # needed for Ubuntu 18.04, but not for Ubuntu 20.04, so skipping symlinking if posix.so already exists
        if [ ! -e /usr/lib/x86_64-linux-gnu/lua/5.2/posix.so ] ; then
            sudo ln -s /usr/lib/x86_64-linux-gnu/lua/5.2/posix_c.so /usr/lib/x86_64-linux-gnu/lua/5.2/posix.so
        fi
        # for testing OpenMPI-system*eb we need to have Open MPI installed
        sudo apt-get install libopenmpi-dev openmpi-bin
        # required for test_dep_graph
        pip install pep8 python-graph-core python-graph-dot

    - name: install EasyBuild framework
      run: |
          cd $HOME
          # first determine which branch of easybuild-framework repo to install
          BRANCH=2021a
          if [ "x$GITHUB_BASE_REF" = 'xmain' ]; then BRANCH=main; fi
          if [ "x$GITHUB_BASE_REF" = 'x4.x' ]; then BRANCH=4.x; fi
          echo "Using easybuild-framework branch $BRANCH (\$GITHUB_BASE_REF $GITHUB_BASE_REF)"

          git clone -b $BRANCH --depth 10 --single-branch https://github.com/bear-rsg/easybuild-framework.git
          cd easybuild-framework; git log -n 1; cd -
          pip install $PWD/easybuild-framework

          git clone -b $BRANCH --depth 10 --single-branch https://github.com/bear-rsg/easybuild-easyblocks.git
          cd easybuild-easyblocks; git log -n 1; cd -
          pip install $PWD/easybuild-easyblocks

    - name: install modules tool
      run: |
          cd $HOME
          # use install_eb_dep.sh script provided with easybuild-framework
          export INSTALL_DEP=$(which install_eb_dep.sh)
          echo "Found install_eb_dep.sh script: $INSTALL_DEP"

          # install modules tool
          source $INSTALL_DEP ${{matrix.modules_tool}} $HOME

          # changes in environment are not passed to other steps, so need to create files...
          echo $MOD_INIT > mod_init
          echo $PATH > path
          if [ ! -z $MODULESHOME ]; then echo $MODULESHOME > moduleshome; fi

    - name: run test suite
      env:
        EB_VERBOSE: 1
        EASYBUILD_MODULE_SYNTAX: ${{matrix.module_syntax}}
      run: |
          # pull in target so we can diff against it to obtain list of touched files
          if [ "x$GITHUB_BASE_REF" != 'xmain' ]; then git fetch -v origin ${GITHUB_BASE_REF}:${GITHUB_BASE_REF}; fi

          # initialize environment for modules tool
          if [ -f $HOME/moduleshome ]; then export MODULESHOME=$(cat $HOME/moduleshome); fi
          source $(cat $HOME/mod_init); type module

          # make sure 'eb' is available via $PATH, and that $PYTHONPATH is set (some tests expect that);
          # also pick up changes to $PATH set by sourcing $MOD_INIT
          WORKDIR=$GITHUB_WORKSPACE/easybuild-easyconfigs
          export PATH=$WORKDIR/test/bin:$(cat $HOME/path)
          export PYTHONPATH=$WORKDIR

          # tell EasyBuild which modules tool is available
          if [[ ${{matrix.modules_tool}} =~ ^modules-tcl- ]]; then
            export EASYBUILD_MODULES_TOOL=EnvironmentModulesTcl
          elif [[ ${{matrix.modules_tool}} =~ ^modules-3 ]]; then
            export EASYBUILD_MODULES_TOOL=EnvironmentModulesC
          elif [[ ${{matrix.modules_tool}} =~ ^modules-4 ]]; then
            export EASYBUILD_MODULES_TOOL=EnvironmentModules
          else
            export EASYBUILD_MODULES_TOOL=Lmod
          fi

          eb --version
          eb --show-config
          # gather some useful info on test system
          eb --show-system-info

          # run test suite
          # if tests failed, print error message that is picked up by boegelbot to determine end of test output
          python -O -m test.easyconfigs.suite || (echo "ERROR: Not all tests were successful" && exit 1)
