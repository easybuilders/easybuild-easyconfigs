easyblock = 'ConfigureMake'
name = 'QuantumESPRESSO'
version = '7.0'
# local_NVHPC_ver = '22.1'
# versionsuffix = '-NVHPC-%s' % local_NVHPC_ver
homepage = 'https://www.quantum-espresso.org'
description = """Untested GPU build of Quantum ESPRESSO. Quantum ESPRESSO  is an integrated suite of computer codes
for electronic-structure calculations and materials modeling at the nanoscale.
It is based on density-functional theory, plane waves, and pseudopotentials
(both norm-conserving and ultrasoft).
"""
local_CUDA_driver_version = '11.0'
local_CUDA_cc = '70'
local_CUDA_rt_version = '11.4.1'

toolchain = {'name': 'NVHPC', 'version': '22.1-CUDA-%s' % local_CUDA_rt_version}

source_urls = [
    'https://github.com/QEF/q-e/releases/download/qe-%(version)s/',
]
sources = [
    'qe-%(version)s-ReleasePack.tgz',
]
checksums = ['268ec506f88c56ba4e9b691c1e81e33a6ad7949f857f1c6c32197f9c2af2a957']

# dependencies = [
# Commenting ELPA and  libxc out for  now as the  toolchain  specific 
# version is not ready. QE will build   successfully witout them, but 
# probably missing  out on some  optimizations. This is only to allow 
# for a gradual support of the buggy NVHPC compilers
#    ('ELPA', '2021.05.001','', True),
#    ('libxc', '5.1.5', '', True)
# ]


# The third party packages like gipaw are disabled for now. To enable,
# one  needs to perhaps customize the quantumespresso.py     easyblock 
# or create their own. Currently, I opted out  of the customized block 
# as it requires work to support more toolchains  due to the way it is 
# written. Now, this builds all QE suite. 
# buildopts = 'all gwl xspectra couple epw gipaw w90'

configopts = 'CC=nvc '
configopts += 'F90=nvfortran '
configopts += 'MPIF90=mpif90 '

# Reset  the  compiler  flags  as  the  ones  set  by easyconfig (thru 
# environment.py)  cause  the  build  to  break  at  some  point.  The 
# configure skips   -Mpreprocess flag if the CFLAGS and   FFLAGS   are 
# preset.  The  consequently  breaks  the  build,  hence,  the   reset
configopts += 'F90FLAGS='' '
configopts += 'CFLAGS='' '
configopts += 'FFLAGS='' '

configopts += '--with-cuda-runtime=%s ' % local_CUDA_driver_version
configopts += '--with-cuda-cc=%s' % local_CUDA_cc

buildopts = 'all'

# parallel build tends to fail
parallel = 1

sanity_check_paths = {
    'files': [],
    'dirs': ['bin'],
}

moduleclass = 'chem'
