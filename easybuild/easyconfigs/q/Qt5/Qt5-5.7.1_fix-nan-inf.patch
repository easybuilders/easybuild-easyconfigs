fix compilation issue with Intel compilers: "error: more than one instance of overloaded function 'isnan' matches the argument list"
author: Kenneth Hoste (HPC-UGent)
--- ./qtbase/src/corelib/global/qnumeric_p.h.orig	2017-01-12 14:07:25.154941190 +0100
+++ ./qtbase/src/corelib/global/qnumeric_p.h	2017-01-12 14:08:03.841376056 +0100
@@ -72,11 +72,11 @@
 QT_BEGIN_NAMESPACE
 namespace qnumeric_std_wrapper {
 // the 'using namespace std' below is cases where the stdlib already put the math.h functions in the std namespace and undefined the macros.
-static inline bool math_h_isnan(double d) { using namespace std; return isnan(d); }
-static inline bool math_h_isinf(double d) { using namespace std; return isinf(d); }
+static inline bool math_h_isnan(double d) { using namespace std; return std::isnan(d); }
+static inline bool math_h_isinf(double d) { using namespace std; return std::isinf(d); }
 static inline bool math_h_isfinite(double d) { using namespace std; return isfinite(d); }
-static inline bool math_h_isnan(float f) { using namespace std; return isnan(f); }
-static inline bool math_h_isinf(float f) { using namespace std; return isinf(f); }
+static inline bool math_h_isnan(float f) { using namespace std; return std::isnan(f); }
+static inline bool math_h_isinf(float f) { using namespace std; return std::isinf(f); }
 static inline bool math_h_isfinite(float f) { using namespace std; return isfinite(f); }
 }
 QT_END_NAMESPACE
