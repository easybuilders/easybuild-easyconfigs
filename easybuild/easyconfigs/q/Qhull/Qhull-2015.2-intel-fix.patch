# they use some weird template thing in pure C code to avoid
# warnings, I think, but only for intel compilers
# We remove the special case for intel and use the general one
# Ward Poelmans <wpoely86@gmail.com>
diff -ru qhull-2012.1.orig/src/libqhull/qhull_a.h qhull-2012.1/src/libqhull/qhull_a.h
--- qhull-2015.2/src/libqhull/qhull_a.h.orig	2016-01-18 14:32:14.000000000 +0100
+++ qhull-2015.2/src/libqhull/qhull_a.h	2016-03-07 10:42:19.223952420 +0100
@@ -101,13 +101,7 @@
 
 */
 
-#if defined(__cplusplus) && defined(__INTEL_COMPILER) && !defined(QHULL_OS_WIN)
-template <typename T>
-inline void qhullUnused(T &x) { (void)x; }
-#  define QHULL_UNUSED(x) qhullUnused(x);
-#else
-#  define QHULL_UNUSED(x) (void)x;
-#endif
+#define QHULL_UNUSED(x) (void)x;
 
 /***** -libqhull.c prototypes (alphabetical after qhull) ********************/
 
--- qhull-2015.2/src/libqhull_r/qhull_ra.h.orig	2016-01-17 17:06:10.000000000 +0100
+++ qhull-2015.2/src/libqhull_r/qhull_ra.h	2016-03-07 14:46:03.846048341 +0100
@@ -101,13 +101,7 @@
 
 */
 
-#if defined(__cplusplus) && defined(__INTEL_COMPILER) && !defined(QHULL_OS_WIN)
-template <typename T>
-inline void qhullUnused(T &x) { (void)x; }
-#  define QHULL_UNUSED(x) qhullUnused(x);
-#else
-#  define QHULL_UNUSED(x) (void)x;
-#endif
+#define QHULL_UNUSED(x) (void)x;
 
 /***** -libqhull_r.c prototypes (alphabetical after qhull) ********************/
 
