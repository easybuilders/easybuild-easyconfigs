easyblock = 'CMakeMake'

name = 'QCA'
version = '2.1.0'
pyver = '2.7.12'
pyshortver = '2.7'
pysubver = '-bare'
versionsuffix = '-Python-%s%s' % (pyver, pysubver)

homepage = 'http://delta.affinix.com/qca/'

description = """
 Taking a hint from the similarly-named Java Cryptography Architecture, 
 QCA aims to provide a straightforward and cross-platform crypto API, using
 Qt datatypes and conventions. QCA separates the API from the implementation,
 using plugins known as Providers. The advantage of this model is to allow
 applications to avoid linking to or explicitly depending on any particular
 cryptographic library. This allows one to easily change or upgrade crypto
 implementations without even needing to recompile the application! QCA
 should work everywhere Qt does, including Windows/Unix/MacOSX.
"""

toolchain = {'name': 'GCCcore', 'version': '6.3.0'}

source_urls = ['http://delta.affinix.com/download/qca/2.0/']
sources = ['%(namelower)s-%(version)s.tar.gz']

configopts = "-DQT4_BUILD=true"

dependencies = [
    ('Qt', '4.8.7', versionsuffix),
]

osdependencies = [
    ('binutils'),
    ('cmake'),
]

moduleclass = 'devel'
