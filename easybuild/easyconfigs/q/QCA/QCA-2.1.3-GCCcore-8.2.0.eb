# Author: Pavel Grochal (INUITS)
# License: GPLv2

easyblock = 'CMakeMake'

name = 'QCA'
version = '2.1.3'

homepage = 'http://delta.affinix.com/qca/'
description = """Taking a hint from the similarly-named Java Cryptography Architecture,
 QCA aims to provide a straightforward and cross-platform crypto API, using Qt datatypes
 and conventions. QCA separates the API from the implementation, using plugins known as
 Providers. The advantage of this model is to allow applications to avoid linking to or
 explicitly depending on any particular cryptographic library. This allows one to easily
 change or upgrade crypto implementations without even needing to recompile the
 application! QCA should work everywhere Qt does, including Windows/Unix/MacOSX."""

toolchain = {'name': 'GCCcore', 'version': '8.2.0'}

source_urls = ['http://download.kde.org/stable/qca/%(version)s/src/']
sources = ['%(namelower)s-%(version)s.tar.xz']
checksums = ['003fd86a32421057a03b18a8168db52e2940978f9db5ebbb6a08882f8ab1e353']

builddependencies = [
    ('binutils', '2.31.1'),
    ('CMake', '3.13.3')
]
dependencies = [
    ('Qt5', '5.12.3')
]

configopts = "-DQT5_BUILD=true"

sanity_check_paths = {
    'files': ['bin/qcatool-qt5', 'lib/libqca-qt5.%s' % SHLIB_EXT, 'lib/pkgconfig/qca2-qt5.pc'],
    'dirs': ['include/Qca-qt5', 'lib/cmake/Qca-qt5', 'share/man'],
}

moduleclass = 'devel'
