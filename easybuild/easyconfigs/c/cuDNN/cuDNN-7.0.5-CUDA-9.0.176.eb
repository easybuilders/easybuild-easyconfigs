##
# This file is an EasyBuild reciPY as per https://github.com/easybuilders/easybuild
#
# Author:    Stephane Thiell <sthiell@stanford.edu>
##
easyblock = 'Tarball'

name = 'cuDNN'
version = '7.0.5'  # the version of the libcudnn.so provided
local_cuda_version = '9.0.176'  # the latest matching CUDA
local_cuda_version_major_minor = '.'.join(local_cuda_version.split('.')[:2])
versionsuffix = '-CUDA-%s' % local_cuda_version

homepage = 'https://developer.nvidia.com/cudnn'

description = """
 The NVIDIA CUDA Deep Neural Network library (cuDNN) is a GPU-accelerated
 library of primitives for deep neural networks.
"""

toolchain = SYSTEM

# Nvidia developer registration required.
# Download link: https://developer.nvidia.com/rdp/cudnn-download
# Download as cudnn-9.0-linux-x64-v7.tgz, rename to cudnn-9.0-linux-x64-v%(version)s.tgz
# Note, NVIDIA may release another cudnn-9.0-linux-x64-v7.tgz with different %(version)s libraries
# so use the checksum to verify and modify as needed.
sources = ['%%(namelower)s-%s-linux-x64-v%%(version)s.tgz' % local_cuda_version_major_minor]
checksums = ['1a3e076447d5b9860c73d9bebe7087ffcb7b0c8814fd1e506096435a2ad9ab0e']

dependencies = [('CUDA', local_cuda_version)]

postinstallcmds = [
    # toss duplicates and create symlinks instead
    'cd %%(installdir)s/lib64 && rm -vf libcudnn.%s.%s libcudnn.%s' % (SHLIB_EXT, version[0:1], SHLIB_EXT),
    'cd %%(installdir)s/lib64 && ln -vs libcudnn.%s.%s libcudnn.%s' % (SHLIB_EXT, version, SHLIB_EXT),
    'cd %%(installdir)s/lib64 && ln -vs libcudnn.%s.%s libcudnn.%s.%s' % (SHLIB_EXT, version, SHLIB_EXT, version[0:1]),
    'cd %%(installdir)s/lib64 && ln -vs libcudnn.%s.%s libcudnn.%s.%s' % (SHLIB_EXT, version, SHLIB_EXT, version[0:3]),
]

sanity_check_paths = {
    'files': ['include/cudnn.h', 'lib64/libcudnn_static.a', 'lib64/libcudnn.%s.%%(version)s' % SHLIB_EXT],
    'dirs': [],
}

moduleclass = 'numlib'
