import os as _os

name = 'CP2K'
version = '8.1'

homepage = 'https://www.cp2k.org/'
description = """CP2K is a freely available (GPL) program, written in Fortran 95, to perform atomistic and molecular
 simulations of solid state, liquid, molecular and biological systems. It provides a general framework for different
 methods such as e.g. density functional theory (DFT) using a mixed Gaussian and plane waves approach (GPW), and
 classical pair and many-body potentials. """

toolchain = {'name': 'fosscuda', 'version': '2020b'}
toolchainopts = {'pic': True, 'openmp': True}

source_urls = ['https://github.com/cp2k/cp2k/releases/download/v%(version)s.0/']
sources = [SOURCELOWER_TAR_BZ2]
checksums = ['7f37aead120730234a60b2989d0547ae5e5498d93b1e9b5eb548c041ee8e7772']

dependencies = [
    ('Libint', '2.6.0', '-lmax-6-cp2k'),
    ('libxc', '4.3.4'),
    ('libxsmm', {'arch=x86_64': '1.16.1', 'arch=POWER': False}),
    ('FFTW', '3.3.8'),
    ('PLUMED', '2.6.2'),
]

builddependencies = [
    ('flex', '2.6.4'),
    ('Bison', '3.7.1'),
]

type = 'psmp'

# regression test reports handful of failures,
# we're assuming those are OK to ignore...
ignore_regtest_fails = True

# Note: if multiple CUDA compute capabilities are specified, only the highest value is used
_cpu = _os.environ.get('BB_CPU')
if _cpu == 'haswell':
    cuda_compute_capabilities = ['6.0']
elif _cpu == 'power9':
    cuda_compute_capabilities = ['7.0']
else:
    cuda_compute_capabilities = ['8.0']

moduleclass = 'chem'
