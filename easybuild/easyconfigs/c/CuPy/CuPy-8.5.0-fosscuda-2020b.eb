easyblock = 'PythonBundle'

name = 'CuPy'
version = '8.5.0'

homepage = 'https://cupy.dev'
description = "CuPy is an open-source array library accelerated with NVIDIA CUDA."

toolchain = {'name': 'fosscuda', 'version': '2020b'}
# setup.py requirement Cython>=0.29.22. Build fails with 0.29.21
# after patching setup.py
builddependencies = [('Cython', '0.29.22')]
dependencies = [
    ('Python', '3.8.6'),
    ('SciPy-bundle', '2020.11'),
    ('cuDNN', '8.0.4.30', '-CUDA-%(cudaver)s', SYSTEM),
    ('NCCL', '2.8.3', '-CUDA-%(cudaver)s'),
    ('cuTENSOR', '1.2.2.5', '-CUDA-%(cudaver)s', SYSTEM),
]

use_pip = True

exts_default_options = {'source_urls': [PYPI_LOWER_SOURCE]}
postinstallcmds = [
    # req for sanity check on build nodes without libcuda.so.
    # will be removed my patched __init__.py at sanity check import.
    'cp $EBROOTCUDA/./targets/*-linux/lib/stubs/libcuda.* %(installdir)s/lib && ls %(installdir)s/lib'
]
exts_list = [
    ('fastrlock', '0.5', {
        'checksums': ['9ae1a31f6e069b5f0f28ba63c594d0c952065de0a375f7b491d21ebaccc5166f'],
    }),
    ('cupy', version, {
        'patches': ['CuPy-8.5.0_sanitycheck_fix.patch'],
        'checksums': [
            'fb3f8d3b3454beb249b9880502a45fe493c5a44efacc4c72914cbe1a5dbdf803',  # cupy-8.5.0.tar.gz
            'c0acecccec1bfcc0697b9840228fe71813d0ea98cc975f627c106b48c6c02710',  # CuPy-8.5.0_sanitycheck_fix.patch
        ],
    }),
]

sanity_pip_check = True

moduleclass = 'lib'
