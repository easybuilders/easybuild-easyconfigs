##
# This file is an EasyBuild reciPY as per https://github.com/easybuilders/easybuild
#
# Copyright:: Copyright 2013-2015 Dmitri Gribenko, Ward Poelmans
# Authors:: Dmitri Gribenko <gribozavr@gmail.com>
# Authors:: Ward Poelmans <wpoely86@gmail.com>
# License:: GPLv2 or later, MIT, three-clause BSD.
# $Id$
##

name = 'Clang'
version = '17.0.0_20230515'
versionsuffix = '-CUDA-%(cudaver)s'
_commit = 'c5dede880d17'

homepage = 'https://clang.llvm.org/'
description = """C, C++, Objective-C compiler, based on LLVM.  Does not
 include C++ standard library -- use libstdc++ from GCC."""

# Clang also depends on libstdc++ during runtime, but this dependency is
# already specified as the toolchain.
toolchain = {'name': 'GCCcore', 'version': '13.2.0'}

sources = [{
    'source_urls': ["https://github.com/llvm/llvm-project/archive"],
    'download_filename': '%s.tar.gz' % _commit,
    'filename': 'llvm-project-%s.tar.gz' % version,
}]
checksums = ['6f371f9ac208b8e9dc57fc117b1a9c8565d7ea2bbb49a2768cb9c3c0fee0291d']

builddependencies = [
    ('CMake', '3.27.6'),
    ('Perl', '5.38.0'),
    # Including Python bindings would require this as a runtime dep
    ('Python', '3.11.5'),
]
dependencies = [
    # since Clang is a compiler, binutils is a runtime dependency too
    ('binutils', '2.40'),
    ('hwloc', '2.9.2'),
    ('libxml2', '2.11.5'),
    ('ncurses', '6.4'),
    ('GMP', '6.3.0'),
    ('Z3', '4.13.0'),
    ('CUDA', '12.4.0', '', SYSTEM),
]

# enabling RTTI makes the flang compiler need to link to libc++ so instead of
#   flang-new -flang-experimental-exec -fopenmp hello_openmp.f90
# you would need
#   flang-new -flang-experimental-exec -fopenmp hello_openmp.f90 -l c++
enable_rtti = False

assertions = True
python_bindings = False
skip_all_tests = True

llvm_runtimes = ['libunwind', 'libcxx', 'libcxxabi']
llvm_projects = ['polly', 'lld', 'lldb', 'clang-tools-extra', 'flang']

moduleclass = 'compiler'
