easyblock = 'PythonBundle'
# update 1.5.5: Thomas Hoffmann, EMBL Heidelberg

name = 'ColabFold'
version = '1.5.5'
versionsuffix = '-CUDA-%(cudaver)s'

_sokrypton_commit = '7c09316f71893e532bc15528cce4c1d3cb705f8f'
_colab_suffix = '-ColabFold'

homepage = 'https://github.com/sokrypton/ColabFold'
description = """Making protein folding accessible to all. Predict proteins structures both in
google colab and on your machine."""
github_account = 'sokrypton'

toolchain = {'name': 'foss', 'version': '2023a'}

builddependencies = [
    ('poetry', '1.5.1'),
]

dependencies = [
    ('CUDA', '12.1.1', '', SYSTEM),
    ('Python', '3.11.3'),
    ('SciPy-bundle', '2023.07'),
    ('matplotlib', '3.7.2'),
    ('tqdm', '4.66.1'),
    ('py3Dmol', '2.1.0'),


    ('PyYAML', '6.0'),
    ('TensorFlow', '2.13.0'),
    ('Biopython', '1.83'),
    ('HH-suite', '3.3.0'),
    ('HMMER', '3.4'),
    ('Kalign', '3.4.0'),
    ('jax', '0.4.25', versionsuffix),
    ('UCX-CUDA', '1.14.1', versionsuffix),
    ('cuDNN', '8.9.2.26', versionsuffix, SYSTEM),
    ('NCCL', '2.18.3', versionsuffix),
    ('OpenMM', '8.0.0', versionsuffix),
    ('dm-haiku', '0.0.12', versionsuffix),
    ('dm-tree', '0.1.8'),
]

local_scp_commit = '7102c6'

components = [
    ('stereo_chemical_props', '', {
        'easyblock': 'Binary',
        'source_urls': [
            'https://git.scicore.unibas.ch/schwede/openstructure/-/raw/%s/modules/mol/alg/src/' % local_scp_commit,
        ],
        'sources': [{
            'download_filename': 'stereo_chemical_props.txt',
            'filename': 'stereo_chemical_props-%s.txt' % local_scp_commit,
            'extract_cmd': "cp %s .",
        }],
        'checksums': ['24510899eeb49167cffedec8fa45363a4d08279c0c637a403b452f7d0ac09451'],
    })
]


use_pip = True

exts_list = [
    ('PDBFixer', '1.9', {
        'source_urls': ['https://github.com/openmm/pdbfixer/archive/refs/tags/'],
        'sources': [{'download_filename': '%(version)s.tar.gz', 'filename': '%(name)s-%(version)s.tar.gz'}],
        'checksums': ['88b9a77e50655f89d0eb2075093773e82c27a4cef842cb7d735c877b20cd39fb'],
    }),
    ('tabulate', '0.9.0', {
        'checksums': ['0095b12bf5966de529c0feb1fa08671671b3368eec77d7ef7ab114be2c068b3c'],
    }),
    ('websocket-client', '1.5.1', {
        'modulename': 'websocket',
        'checksums': ['3f09e6d8230892547132177f575a4e3e73cfdf06526e20cc02aa1c3b47184d40'],
    }),
    ('docker', '7.0.0', {
        'checksums': ['323736fb92cd9418fc5e7133bc953e11a9da04f4483f828b527db553f1e7e5a3'],
    }),
    ('immutabledict', '4.1.0', {
        'checksums': ['93d100ccd2cd09a1fd3f136b9328c6e59529ba341de8bb499437f6819159fe8a'],
    }),
    ('contextlib2', '21.6.0', {
        'checksums': ['ab1e2bfe1d01d968e1b7e8d9023bc51ef3509bba217bb730cee3827e1ee82869'],
    }),
    ('ml_collections', '0.1.1', {
        'preinstallopts': "touch requirements.txt && touch requirements-test.txt && ",
        'checksums': ['3fefcc72ec433aa1e5d32307a3e474bbb67f405be814ea52a2166bfc9dbe68cc'],
    }),
    ('AlphaFold', '20230725-%s' % _sokrypton_commit, {
        'patches': [
            'AlphaFold-2.3.2_data-dep-paths-shebang-UniRef30.patch',
            'AlphaFold-2.0.0_n-cpu.patch',
            'AlphaFold-2.0.1_setup_rm_tfcpu.patch',
            'AlphaFold-2.3.2_BioPythonPDBData.patch',
        ],
        'preinstallopts': " cp %(builddir)s/stereo_chemical_props-7102c6.txt " +
                          "alphafold/common/stereo_chemical_props.txt &&",
        'runtest': "python ./run_alphafold_test.py",
        'source_urls': [
            'https://github.com/sokrypton/alphafold/archive/',
        ],
        'sources': [{
            'download_filename': '%s.tar.gz' % _sokrypton_commit,
            'filename': '%(name)s-colabfold-%(version)s.tar.gz'}],
        'testinstall': True,
        'checksums': [
            {'AlphaFold-colabfold-2.3.6.tar.gz': 'a12868525e568091acc5d8e15e9fc389125199786b750243b567ad1c4f89779b'},
            {'AlphaFold-2.3.2_data-dep-paths-shebang-UniRef30.patch':
             '58cd0ce4094afe76909649abe68034c4fbdb500967f5c818f49b530356dc012b'},
            {'AlphaFold-2.0.0_n-cpu.patch': 'dfda4dd5f9aba19fe2b6eb9a0ec583d12dcefdfee8ab8803fc57ad48d582db04'},
            {'AlphaFold-2.0.1_setup_rm_tfcpu.patch':
             '1a2e4e843bd9a4d15ee39e6c37cc63ba281311cc7a0a5610f0e43b52ef93faac'},
            {'AlphaFold-2.3.2_BioPythonPDBData.patch':
             'e4483a525ae5c4dc5a5f633bed8cf5337c329e64b603ab7b684a9d18cd26a22f'},
        ],
    }),
    ('colabfold', version, {
        'patches': ['%(name)s-%(version)s_relax_requirements.patch'],
        'preinstallopts': """sed -i 's/^\\(python =.*\\)<=3.10"$/,<=%(pyshortver)s"/;""" +
                          """s/flow-cpu/flow/' pyproject.toml &&""",
        'source_urls': ['https://github.com/%(github_account)s/%(name)s/archive'],
        'sources': [{'download_filename': 'v%(version)s.tar.gz', 'filename': '%(name)s-%(version)s.tar.gz'}],
        'use_pip_extras': 'alphafold',
        'checksums': [
            {'colabfold-1.5.5.tar.gz': '7fb0ad263c24ec00d46f2dff1611989234bc1351d71653dd06006f2c88f83dcb'},
            {'colabfold-1.5.5_relax_requirements.patch':
             'bcbcd7f403fea2e98ea04568d6ef358c72ad4beab762e701903473abf1883d03'},
        ],
    }),
]

_alphafold_buildir = '%%(builddir)s/AlphaFold/alphafold-%s' % _sokrypton_commit
postinstallcmds = [
    "mkdir -p %(installdir)s/bin",
    "cp %s/run_alphafold.py %%(installdir)s/bin/run_alphafold.py" % _alphafold_buildir,
    "chmod a+x %(installdir)s/bin/run_alphafold*.py",
    "cd %(installdir)s/bin && ln -s run_alphafold.py alphafold",
    "cp -a %s/scripts %%(installdir)s/" % _alphafold_buildir,
    # Copy notebooks to installation directory
    "mkdir %(installdir)s/notebooks",
    "cp AlphaFold2.ipynb ESMFold.ipynb RoseTTAFold.ipynb %(installdir)s/notebooks/",
]

sanity_check_paths = {
    'files': [
        'bin/run_alphafold.py', 'bin/colabfold_batch', 'bin/colabfold_search', 'bin/colabfold_split_msas',
        'lib/python%(pyshortver)s/site-packages/alphafold/common/stereo_chemical_props.txt'
    ],
    'dirs': ['lib/python%(pyshortver)s/site-packages', 'notebooks'],
}

sanity_check_commands = [
    "pdbfixer --help",
    "run_alphafold.py --help 2>&1 | grep 'Full AlphaFold protein structure prediction script'",
    "colabfold_batch --help",
]

sanity_pip_check = True

modextravars = {
    'TF_FORCE_UNIFIED_MEMORY': '1',
    'XLA_PYTHON_CLIENT_MEM_FRACTION': '3',
    # 'ALPHAFOLD_DATA_DIR': '/path/to/AlphaFold_DBs/2.3.2',  # please adapt
    'OPENMM_RELAX': 'CUDA',  # unset or set to 'CPU' in order not to run the energy minimization on GPU; PR#189
    # Adapt in order to use a different version of UniRef30 by default,
    # e.g.,  v2023_02 from https://wwwuser.gwdg.de/~compbiol/uniclust/2023_02/UniRef30_2023_02_hhsuite.tar.gz:
    'ALPHAFOLD_UNIREF30_VER': '2021_03',
}

modloadmsg = """
%(name)s notebooks are located in $EBROOTCOLABFOLD/notebooks
"""

postinstallmsgs = [
    "A newer version of UniRef30 (2023_02) is available at: "
    "https://wwwuser.gwdg.de/~compbiol/uniclust/2023_02/UniRef30_2023_02_hhsuite.tar.gz. "
    "Untar to $ALPHAFOLD_DATA_DIR/uniref30/ and set the default version accordingly by changing "
    "modextravars:ALPHAFOLD_UNIREF30_VER."
]

moduleclass = 'bio'
