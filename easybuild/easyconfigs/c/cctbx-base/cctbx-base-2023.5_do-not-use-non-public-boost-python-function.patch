strip out optional code that relies on non-public cxxabi_cxa_demangle_is_broken function in Boost.Python;
fix for missing symbol _ZN5boost6python29cxxabi_cxa_demangle_is_brokenEv
author: Simon Branford (University of Birmingham)
--- cctbx-2023.5.orig/modules/cctbx_project/boost_adaptbx/meta_ext.cpp.orig   2023-06-27 09:10:15.541028000 +0100
+++ cctbx-2023.5/modules/cctbx_project/boost_adaptbx/meta_ext.cpp    2023-06-27 09:11:30.755613353 +0100
@@ -298,12 +298,6 @@
 #if defined(__llvm__)
     result += "__llvm__\n";
 #endif
-#if defined(BOOST_PYTHON_HAVE_CXXABI_CXA_DEMANGLE_IS_BROKEN) \
-    && !defined(USE_CONDA) \
-    && !defined(__MINGW32__) // workaround for MinGW linking problem
-    result += "boost::python::cxxabi_cxa_demangle_is_broken(): "
-            + to_str(boost::python::cxxabi_cxa_demangle_is_broken()) + nl;
-#endif
 #if defined(__GXX_WEAK__)
     result += "__GXX_WEAK__ = " + to_str(__GXX_WEAK__) + nl;
 #endif
