easyblock = "PythonPackage"

name = 'GPAW'
version = '19.8.1'
local_aseversion = '3.18.0'
local_pythonsuffix = '-Python-%(pyver)s'
versionsuffix = '-ASE-' + local_aseversion + local_pythonsuffix

homepage = 'https://wiki.fysik.dtu.dk/gpaw/'
description = """GPAW is a density-functional theory (DFT) Python code based on the projector-augmented wave (PAW)
 method and the atomic simulation environment (ASE). It uses real-space uniform grids and multigrid methods or
 atom-centered basis-functions."""

toolchain = {'name': 'intel', 'version': '2018b'}

source_urls = [PYPI_LOWER_SOURCE]
sources = [SOURCELOWER_TAR_GZ]
patches = [
    ('GPAW-19.8.1-customize-intel.patch', 0),
]
checksums = [
    '79dee367d695d68409c4d69edcbad5c8679137d6715da403f6c2500cb2178c2a',  # gpaw-19.8.1.tar.gz
    'fd3668ae52683d4e36e9c8b4e3e69faa93d949601d1128662dc31be61876610c',  # GPAW-19.8.1-customize-intel.patch
]

# Note: The intel toolchain version does not use libvdwxc as libvdwxc is not compatible with MKL.
dependencies = [
    ('Python', '3.6.6'),
    ('ASE', local_aseversion, local_pythonsuffix),
    ('libxc', '3.0.1'),    # Old version to maintain consistency with AtomPAW and ABINIT.
    ('GPAW-setups', '0.9.20000', '', True),
]

buildcmd = 'build --customize=eb_customize.py'
install_target = 'install --customize=eb_customize.py'

download_dep_fail = True
use_pip = False

sanity_check_paths = {
    'files': ['bin/gpaw%s' % x for x in ['', '-analyse-basis', '-basis', '-mpisim', '-plot-parallel-timings',
                                         '-python', '-runscript', '-setup', '-upfplot']],
    'dirs': ['lib/python%(pyshortver)s/site-packages/%(namelower)s']
}

moduleclass = 'chem'
