easyblock = 'ConfigureMake'

name = 'gc'
version = '7.6.10'

homepage = 'https://hboehm.info/gc/'

description = """
 The Boehm-Demers-Weiser conservative garbage collector can be used as a
 garbage collecting replacement for C malloc or C++ new.
"""

toolchain = {'name': 'GCCcore', 'version': '8.2.0'}

source_urls = [
    'https://github.com/ivmai/bdwgc/releases/download/v%(version)s/',  # preferred for gc-%(version)s.tar.gz
    'https://hboehm.info/gc/gc_source/',  # alternate for gc-%(version)s.tar.gz
    'https://github.com/ivmai/libatomic_ops/releases/download/v%(version)s/',
]
sources = [
    SOURCE_TAR_GZ,
    'libatomic_ops-%(version)s.tar.gz',
]
checksums = [
    '4fc766749a974700c576bbfb71b4a73b2ed746082e2fc8388bfb0b54b636af14',  # gc-7.6.10.tar.gz
    '587edf60817f56daf1e1ab38a4b3c729b8e846ff67b4f62a6157183708f099af',  # libatomic_ops-7.6.10.tar.gz
]

builddependencies = [
    ('binutils', '2.31.1'),
]

preconfigopts = 'ln -s %(builddir)s/libatomic_ops*/ libatomic_ops && '

sanity_check_paths = {
    'files': ['include/gc.h', 'lib/libcord.a', 'lib/libcord.%s' % SHLIB_EXT,
              'lib/libgc.a', 'lib/libgc.%s' % SHLIB_EXT],
    'dirs': ['include/gc', 'share'],
}

moduleclass = 'lib'
