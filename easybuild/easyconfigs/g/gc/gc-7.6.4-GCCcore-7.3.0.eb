easyblock = 'ConfigureMake'

name = 'gc'
version = '7.6.4'

homepage = 'https://hboehm.info/gc/'

description = """
 The Boehm-Demers-Weiser conservative garbage collector can be used as a
 garbage collecting replacement for C malloc or C++ new.
"""

toolchain = {'name': 'GCCcore', 'version': '7.3.0'}

source_urls = [
    'https://github.com/ivmai/bdwgc/releases/download/v%(version)s/',  # preferred for gc-%(version)s.tar.gz
    'https://hboehm.info/gc/gc_source/',  # alternate for gc-%(version)s.tar.gz
    'https://github.com/ivmai/libatomic_ops/releases/download/v%(version)s/',
]
sources = [
    SOURCE_TAR_GZ,
    'libatomic_ops-%(version)s.tar.gz',
]
checksums = [
    'b94c1f2535f98354811ee644dccab6e84a0cf73e477ca03fb5a3758fb1fecd1c',  # gc-7.6.4.tar.gz
    '5b823d5a685dd70caeef8fc50da7d763ba7f6167fe746abca7762e2835b3dd4e',  # libatomic_ops-7.6.4.tar.gz
]

builddependencies = [
    ('binutils', '2.30'),
]

preconfigopts = 'ln -s %(builddir)s/libatomic_ops*/ libatomic_ops && '

sanity_check_paths = {
    'files': ['include/gc.h', 'lib/libcord.a', 'lib/libcord.%s' % SHLIB_EXT,
              'lib/libgc.a', 'lib/libgc.%s' % SHLIB_EXT],
    'dirs': ['include/gc', 'share'],
}

moduleclass = 'lib'
