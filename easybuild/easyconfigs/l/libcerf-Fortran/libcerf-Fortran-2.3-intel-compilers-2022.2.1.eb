easyblock = 'ConfigureMake'

name = 'libcerf-Fortran'
version = '2.3'

homepage = 'https://jugit.fz-juelich.de/mlz/libcerf'
description = """
 libcerf is a self-contained numeric library that provides an efficient and
 accurate implementation of complex error functions, along with Dawson,
 Faddeeva, and Voigt functions.
"""

toolchain = {'name': 'intel-compilers', 'version': '2022.2.1'}
toolchainopts = {'pic': True}

#patches = ["libcerf-Fortran-Makefile.patch"]
source_urls = ['https://jugit.fz-juelich.de/mlz/libcerf/-/archive/v%(version)s/']
sources = ['libcerf-v%(version)s.tar.gz']
checksums = ['cceefee46e84ce88d075103390b4f9d04c34e4bc3b96d733292c36836d4f7065']

builddependencies = [
    ('libcerf', version),
]

skipsteps = ['configure']
start_dir = 'fortran/ccerflib_f95_interface'
build_cmd = '$FC $FFLAGS -c use_libcerf_mod.f90 && $FC -shared use_libcerf_mod.o -o libcerf-Fortran.so && ar rc use_libcerf_mod.a use_libcerf_mod.o && echo ""'
install_cmd = "mkdir -p %(installdir)s/{include,lib} && cp %(name)s.so use_libcerf_mod.o use_libcerf_mod.a %(installdir)s/lib && cp use_libcerf.mod %(installdir)s/include"

sanity_check_paths = {
    'files': ['include/use_libcerf.mod', 'lib/libcerf-Fortran.so', 'lib/use_libcerf_mod.a'],
    'dirs': ['include']
}

moduleclass = 'math'
