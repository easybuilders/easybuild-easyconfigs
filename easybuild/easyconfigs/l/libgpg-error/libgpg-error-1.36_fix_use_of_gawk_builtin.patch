This patch does the same thing as is done in 1.38 to avoid
the use of a gawk builtin as a variable.

Ã…ke Sandgren, 2021-04-22
diff -ru libgpg-error-1.36.orig/src/Makefile.in libgpg-error-1.36/src/Makefile.in
--- libgpg-error-1.36.orig/src/Makefile.in	2019-03-19 09:58:04.000000000 +0100
+++ libgpg-error-1.36/src/Makefile.in	2021-04-22 13:53:19.443779131 +0200
@@ -1615,7 +1615,7 @@
 
 errnos-sym.h: Makefile mkstrtable.awk errnos.in
 	$(AWK) -f $(srcdir)/mkstrtable.awk -v textidx=2 -v nogettext=1 \
-		-v prefix=GPG_ERR_ -v namespace=errnos_ \
+		-v prefix=GPG_ERR_ -v pkg_namespace=errnos_ \
 		$(srcdir)/errnos.in >$@
 
 mkheader$(EXEEXT_FOR_BUILD): mkheader.c Makefile
diff -ru libgpg-error-1.36.orig/src/mkstrtable.awk libgpg-error-1.36/src/mkstrtable.awk
--- libgpg-error-1.36.orig/src/mkstrtable.awk	2013-03-15 20:24:25.000000000 +0100
+++ libgpg-error-1.36/src/mkstrtable.awk	2021-04-22 13:53:16.195791803 +0200
@@ -77,7 +77,7 @@
 #
 # The variable prefix can be used to prepend a string to each message.
 #
-# The variable namespace can be used to prepend a string to each
+# The variable pkg_namespace can be used to prepend a string to each
 # variable and macro name.
 
 BEGIN {
@@ -102,7 +102,7 @@
       print "/* The purpose of this complex string table is to produce";
       print "   optimal code with a minimum of relocations.  */";
       print "";
-      print "static const char " namespace "msgstr[] = ";
+      print "static const char " pkg_namespace "msgstr[] = ";
       header = 0;
     }
   else
@@ -150,7 +150,7 @@
   else
     print "  gettext_noop (\"" last_msgstr "\");";
   print "";
-  print "static const int " namespace "msgidx[] =";
+  print "static const int " pkg_namespace "msgidx[] =";
   print "  {";
   for (i = 0; i < coded_msgs; i++)
     print "    " pos[i] ",";
@@ -158,7 +158,7 @@
   print "  };";
   print "";
   print "static GPG_ERR_INLINE int";
-  print namespace "msgidxof (int code)";
+  print pkg_namespace "msgidxof (int code)";
   print "{";
   print "  return (0 ? 0";
 
