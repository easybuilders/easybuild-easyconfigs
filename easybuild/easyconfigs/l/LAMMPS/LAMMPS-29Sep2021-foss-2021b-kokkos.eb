# Based on PR #14653 with some additional modules and some which were 
# not building moved to user_packages (see below). 
# HDF5 needs to be version 1.10.x to build
# YAFF. As that is pulled in by netCDF it is not added again.
# Authors:
# Arkadiy (Univeristy of Warwick/UK)
# J. Sassmannshausen (Imperial College London/UK)

name = 'LAMMPS'
version = '29Sep2021'
versionsuffix = '-kokkos'
local_hdf5vers = '1.10.8'

homepage = 'https://www.lammps.org'
description = """LAMMPS is a classical molecular dynamics code, and an acronym
for Large-scale Atomic/Molecular Massively Parallel Simulator. LAMMPS has
potentials for solid-state materials (metals, semiconductors) and soft matter
(biomolecules, polymers) and coarse-grained or mesoscopic systems. It can be
used to model atoms or, more generically, as a parallel particle simulator at
the atomic, meso, or continuum scale. LAMMPS runs on single processors or in
parallel using message-passing techniques and a spatial-decomposition of the
simulation domain. The code is designed to be easy to modify or extend with new
functionality.
"""

toolchain = {'name': 'foss', 'version': '2021b'}
toolchainopts = {'openmp': True, 'usempi': True, 'cstd': 'c++14'}

# 'https://github.com/lammps/lammps/archive/'
source_urls = [GITHUB_LOWER_SOURCE]
sources = [
    'stable_%(version)s.tar.gz',
    {'filename': 'lammps_vs_yaff_test_single_point_energy.py', 'extract_cmd': "cp %s %(builddir)s"},
]
checksums = [
    '2dff656cb21fd9a6d46c818741c99d400cfb1b12102604844663b655fb2f893d',  # stable_29Sep2021.tar.gz
    'c28fa5a1ea9608e4fd8686937be501c3bed8cc03ce1956f1cf0a1efce2c75349',  # lammps_vs_yaff_test_single_point_energy.py
]

builddependencies = [
    ('CMake', '3.22.1'),
    ('pkg-config', '0.29.2'),
    ('archspec', '0.1.3'),
    ('Doxygen', '1.9.1'),
]

dependencies = [
    ('Python', '3.9.6'),
    ('libpng', '1.6.37'),
    ('libjpeg-turbo', '2.0.6'),
    ('netCDF', '4.8.1', '-HDF5-%s' % local_hdf5vers),
    ('GSL', '2.7'),
    ('zlib', '1.2.11'),
    ('gzip', '1.10'),
    ('cURL', '7.78.0'),
    ('tbb', '2020.3'),
    ('PCRE', '8.45'),
    ('libxml2', '2.9.10'),
    ('FFmpeg', '4.3.2'),
    ('Voro++', '0.4.6'),
    ('kim-api', '2.3.0'),
    ('Eigen', '3.4.0'),
    ('yaff', '1.6.0'),
    ('PLUMED', '2.8.0'),
    ('ScaFaCoS', '1.0.1'),
]

# To use additional custom configuration options, use the 'configopts' easyconfig parameter
# See docs and lammps easyblock for more information.
# This links seems to be broken though.
# https://github.com/lammps/lammps/blob/master/cmake/README.md#lammps-configuration-options

# OpenMP-Kokkos build is default in the current easyblock. One can switch to serial backend of Kokkos,
# which is claimed to be faster in pure MPI calculations
# configopts  = "-DKokkos_ENABLE_SERIAL=yes "

# Disabling building the documents as it is downloading files on the fly
configopts = "-DBUILD_DOC=no "

# auto-enabled by easyblock
# 'GPU'    - if cuda package is present and kokkos is disabled
# 'KOKKOS' - if kokkos is enabled (by default)
#
# not enabled (yet), needs more work/additional dependencies:
# 'ADIOS',  -  https://docs.lammps.org/Build_extras.html#adios
# 'AWPMD',  - https://docs.lammps.org/Build_extras.html#awpmd
# 'LATTE',  - https://docs.lammps.org/Build_extras.html#latte
# 'ML-QUIP',- https://docs.lammps.org/Build_extras.html#ml-quip
# 'MSCG',   - https://docs.lammps.org/Build_extras.html#mscg-package
# 'QMMM',   - https://docs.lammps.org/Build_extras.html#qmmm
# 'VTK',    - https://docs.lammps.org/Build_extras.html#vtk
# These ones from the original PR (#14653) were moved to user_packages but do not build right now:
# 'USER-CGDNA', 'USER-CGSDK', 'USER-DPD', 'USER-LB', 'USER-MEAMC', 'USER-MESO', 
# 'USER-REAXC', 'USER-SDPD', 'USER-SMD', 'USER-SNAP'

general_packages = [
    'ASPHERE',
    'ATC',
    'BOCS',
    'BODY',
    'CLASS2',
    'COLLOID',
    'COLVARS',
    'COMPRESS',
    'CORESHELL',
    'DIFFRACTION',
    'DIPOLE',
    'DRUDE',
    'EFF',
    'EXTRA-MOLECULE',
    'EXTRA-PAIR',
    'FEP',
    'GRANULAR',
    'H5MD',
    'KIM',
    'KSPACE',
    'MANIFOLD',
    'MANYBODY',
    'MC',
    'MESSAGE',
    'MGPT',
    'MISC',
    'MOFFF',
    'MOLECULE',
    'MOLFILE',
    'MPIIO',
    'NETCDF',
    'OPENMP',
    'PERI',
    'PHONON',
    'PLUMED',
    'POEMS',
    'PTM',
    'PYTHON',
    'QEQ',
    'QTB',
    'REAXFF',
    'REPLICA',
    'RIGID',
    'SCAFACOS',
    'SHOCK',
    'SMTBQ',
    'SPH',
    'SPIN',
    'SRD',
    'TALLY',
    'UEF',
    'VORONOI',
    'YAFF',
]

user_packages = [
    'CGDNA',
    'CGSDK',
    'DPD',
    'LB',
    'MEAMC',
    'MESO',
    'REAXC',
    'SDPD',
    'SMD',
    'SNAP'
]

enhance_sanity_check = True

# run short test case to make sure installation doesn't produce blatently incorrect results;
# this catches a problem where having the USER-INTEL package enabled causes trouble when installing with intel/2019b
sanity_check_commands = ["cd %(builddir)s && python lammps_vs_yaff_test_single_point_energy.py"]

moduleclass = 'chem'
