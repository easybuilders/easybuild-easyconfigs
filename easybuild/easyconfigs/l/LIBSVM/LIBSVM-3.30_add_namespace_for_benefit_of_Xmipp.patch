Taken from https://github.com/cossorzano/libsvm which Xmipp uses.

Also added "using namespace libsvm" to svm-train.c and svm-predict.c

Ã…ke Sandgren 2022-10-19

commit 2a0db2ec1330db8cd45bf5ba7d55d850ce5c8318
Author: Carlos Oscar Sorzano <coss@cnb.csic.es>
Date:   Fri Nov 5 13:37:31 2021 +0100

    Namespace added

diff --git a/svm.cpp b/svm.cpp
index fa44818..814b1b6 100644
--- a/svm.cpp
+++ b/svm.cpp
@@ -1,3 +1,7 @@
+/* This file has been taken from LibSVM 3.25 */
+/* Authors: Chih-Chung Chang and Chih-Jen Lin, LIBSVM :*/
+/* Software available at http://www.csie.ntu.edu.tw/~cjlin/libsvm */
+
 #include <math.h>
 #include <stdio.h>
 #include <stdlib.h>
@@ -8,6 +12,8 @@
 #include <limits.h>
 #include <locale.h>
 #include "svm.h"
+using namespace libsvm;
+
 int libsvm_version = LIBSVM_VERSION;
 typedef float Qfloat;
 typedef signed char schar;
diff --git a/svm.h b/svm.h
index 5dfc1f7..ba47063 100644
--- a/svm.h
+++ b/svm.h
@@ -1,3 +1,7 @@
+/* This file has been taken from LibSVM 3.25 */
+/* Authors: Chih-Chung Chang and Chih-Jen Lin, LIBSVM : */
+/* Software available at http://www.csie.ntu.edu.tw/~cjlin/libsvm */
+
 #ifndef _LIBSVM_H
 #define _LIBSVM_H
 
@@ -22,8 +26,10 @@ struct svm_problem
 	struct svm_node **x;
 };
 
-enum { C_SVC, NU_SVC, ONE_CLASS, EPSILON_SVR, NU_SVR };	/* svm_type */
-enum { LINEAR, POLY, RBF, SIGMOID, PRECOMPUTED }; /* kernel_type */
+namespace libsvm {
+	enum { C_SVC, NU_SVC, ONE_CLASS, EPSILON_SVR, NU_SVR };	/* svm_type */
+	enum { LINEAR, POLY, RBF, SIGMOID, PRECOMPUTED }; /* kernel_type */
+}
 
 struct svm_parameter
 {
diff --git a/svm-train.c b/svm-train.c
index b6ce987..064c29b 100644
--- a/svm-train.c
+++ b/svm-train.c
@@ -4,6 +4,8 @@
 #include <ctype.h>
 #include <errno.h>
 #include "svm.h"
+using namespace libsvm;
+
 #define Malloc(type,n) (type *)malloc((n)*sizeof(type))
 
 void print_null(const char *s) {}
diff --git a/svm-predict.c b/svm-predict.c
index 7a0fa15..328f815 100644
--- a/svm-predict.c
+++ b/svm-predict.c
@@ -4,6 +4,7 @@
 #include <string.h>
 #include <errno.h>
 #include "svm.h"
+using namespace libsvm;
 
 int print_null(const char *s,...) {return 0;}
 
