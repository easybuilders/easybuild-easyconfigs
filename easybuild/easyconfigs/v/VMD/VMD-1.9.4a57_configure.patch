Update hardcoded configurations to be compatible with EB
Author: Last updated micketeer@gmail.com
--- configure.orig	2022-10-03 21:19:36.313951477 +0000
+++ configure	2022-10-03 21:44:36.664710705 +0000
@@ -498,17 +498,17 @@
 
 $arch_cc          = "cc";
 $arch_ccpp        = "CC";
-$arch_nvcc        = "/usr/local/cuda-10.2/bin/nvcc";
+$arch_nvcc        = "nvcc";
 $arch_nvccflags   = "-lineinfo --ptxas-options=-v " . 
-                    "-gencode arch=compute_30,code=compute_30 " .
-                    "-gencode arch=compute_30,code=sm_35 " .
-                    "-gencode arch=compute_30,code=sm_37 " .
                     "-gencode arch=compute_50,code=compute_50 " .
                     "-gencode arch=compute_50,code=sm_50 " .
                     "-gencode arch=compute_60,code=compute_60 " .
                     "-gencode arch=compute_60,code=sm_60 " .
                     "-gencode arch=compute_70,code=compute_70 " .
                     "-gencode arch=compute_70,code=sm_70 " .
+                    "-gencode arch=compute_75,code=sm_75 " .
+                    "-gencode arch=compute_80,code=sm_80 " .
+                    "-gencode arch=compute_86,code=sm_86 " .
                     "--ftz=true ";
 #                    "-gencode arch=compute_75,code=sm_75 " .
 $arch_gcc         = "gcc";
@@ -634,17 +634,17 @@
 # location of Mesa library and include files; basically does the same
 # as OpenGL.  This is based on the default instructions from the Mesa
 # README; the include files should by default be in /usr/local/include/GL.
-$mesa_dir         = "$vmd_library_dir/Mesa";
+$mesa_dir         = "$ENV{'EBROOTMESA'}";
 $mesa_include     = "-I$mesa_dir/include";
 $mesa_library     = "-L$mesa_dir/lib_$config_arch";
 #$mesa_libs        = "-lMesaGL -lMesaGLU"; 
-$mesa_libs        = "-lMesaGL"; 
+$mesa_libs        = "-lGL -lGLU"; 
 $mesa_defines     = "-DUSELINEAXES -DVMDMESA -DVMDOPENGL";
 @mesa_cc          = ();
 @mesa_cu          = ();
-@mesa_ccpp        = @opengl_ccpp;
-@mesa_h           = @opengl_h;
-@mesa_extra       = @opengl_extra;
+@mesa_ccpp        = ();
+@mesa_h           = ();
+@mesa_extra       = ();
 
 
 #
@@ -720,10 +720,10 @@
 
 ################ FLTK GUI
 $fltk_defines     = "-DVMDGUI -DVMDFLTK";
-$fltk_dir         = "$vmd_library_dir/fltk";
+$fltk_dir         = "$ENV{'EBROOTFLTK'}";
 $fltk_include     = "-I$fltk_dir/include";
 $fltk_library     = "-L$fltk_dir/$config_arch";
-$fltk_libs        = "-lfltk -lX11";
+$fltk_libs        = "-lfltk -lX11 -lXfixes -lXcursor -lXinerama";
 #@fltk_cc          = ('forms_ui.c');
 @fltk_cu          = ();
 @fltk_ccpp        = ( 'ColorFltkMenu.C',
@@ -783,8 +783,8 @@
 if ($config_tk) { $tcl_include .= " -I$stock_tk_include_dir"; }
 $tcl_library      = "-L$stock_tcl_library_dir";
 if ($config_tk) { $tcl_library .= " -L$stock_tk_library_dir"; }
-$tcl_libs         = "-ltcl8.5";  
-if ($config_tk) { $tcl_libs = "-ltk8.5 -lX11 " . $tcl_libs; }
+$tcl_libs         = "-ltcl8.6";  
+if ($config_tk) { $tcl_libs = "-ltk8.6 -lX11 " . $tcl_libs; }
 
 @tcl_cc           = ();
 @tcl_cu           = ();
@@ -1006,7 +1006,7 @@
 #   This option enables the use of CUDA GPU acceleration functions.
 #######################
 $cuda_defines     = "-DVMDCUDA -DMSMPOT_CUDA";
-$cuda_dir         = "/usr/local/cuda-10.2";
+$cuda_dir         = "$ENV{'CUDA_HOME'}";
 $cuda_include     = "";
 $cuda_library     = "";
 $cuda_libs        = "-Wl,-rpath -Wl,\$\$ORIGIN/ -lcudart_static -lrt";
@@ -1215,7 +1215,7 @@
 # $liboptix_dir         = "/usr/local/encap/NVIDIA-OptiX-SDK-5.0.1-linux64";
 # $liboptix_dir         = "/usr/local/encap/NVIDIA-OptiX-SDK-5.1.0-linux64";
 # $liboptix_dir         = "/usr/local/encap/NVIDIA-OptiX-SDK-6.0.0-linux64";
-$liboptix_dir         = "/usr/local/encap/NVIDIA-OptiX-SDK-6.5.0-linux64";
+$liboptix_dir         = "$ENV{'EBROOTOPTIX'}";
 # $liboptix_dir         = "/usr/local/encap/NVIDIA-OptiX-SDK-7.0.0-linux64";
 
 # NCSA Blue Waters
@@ -1370,7 +1370,7 @@
   die "LIBPNG option requires ZLIB!";
 }
 $libpng_defines     = "-DVMDLIBPNG";
-$libpng_dir         = "/Projects/vmd/vmd/lib/libpng";
+$libpng_dir         = "$ENV{'EBROOTLIBPNG'}";
 $libpng_include     = "-I$libpng_dir/include";
 $libpng_library     = "-L$libpng_dir/lib_$config_arch";
 $libpng_libs        = "-lpng16";
@@ -1398,7 +1398,7 @@
 # OPTIONAL COMPONENT: Data compresssion library 
 # This may be commented out if not required.
 $zlib_defines     = "-DVMDZLIB";
-$zlib_dir         = "/Projects/vmd/vmd/lib/zlib";
+$zlib_dir         = "$ENV{'EBROOTZLIB'}";
 $zlib_include     = "-I$zlib_dir/include";
 $zlib_library     = "-L$zlib_dir/lib_$config_arch";
 $zlib_libs        = "-lz";
@@ -1589,7 +1589,7 @@
 #   primitives.
 #######################
 $actc_defines     = "-DVMDACTC";
-$actc_dir         = "$vmd_library_dir/actc";
+$actc_dir         = "$ENV{'EBROOTACTC'}";
 $actc_include     = "-I$actc_dir/include";
 $actc_library     = "-L$actc_dir/lib_$config_arch";
 $actc_libs        = "-lactc";
@@ -1604,7 +1604,7 @@
 # OPTIONAL COMPONENT: NetCDF I/O Library (Used by cdfplugin)
 #######################
 $netcdf_defines     = "";
-$netcdf_dir         = "$vmd_library_dir/netcdf";
+$netcdf_dir         = "$ENV{'EBROOTNETCDF'}";
 $netcdf_include     = "-I$netcdf_dir/include";
 $netcdf_library     = "-L$netcdf_dir/lib_$config_arch";
 $netcdf_libs        = "-lnetcdf";
@@ -1662,7 +1662,7 @@
   $stock_python_library_dir=$ENV{"PYTHON_LIBRARY_DIR"} || "$conda_root/lib/python3.7/config-3.7m-x86_64-linux-gnu";
   $stock_numpy_include_dir=$ENV{"NUMPY_INCLUDE_DIR"} || "$conda_root/lib/python3.7/site-packages/numpy/core/include/numpy";
   $stock_numpy_library_dir=$ENV{"NUMPY_LIBRARY_DIR"} || "$conda_root/lib/python-3.7/site-packages/numpy/core/include";
-  $python_libs        = "-fno-lto -lpython3.7m -lpthread";
+  $python_libs        = "$ENV{'PYTHON_LIBRARIES'}" || "-fno-lto -lpython3.7m -lpthread";
 } else {
 #  $stock_python_include_dir=$ENV{"PYTHON_INCLUDE_DIR"} || "/usr/local/include";
 #  $stock_python_library_dir=$ENV{"PYTHON_LIBRARY_DIR"} || "/usr/local/lib";
@@ -1673,7 +1673,7 @@
 #  $stock_numpy_library_dir=$ENV{"NUMPY_LIBRARY_DIR"} || "/usr/local/lib";
   $stock_numpy_include_dir=$ENV{"NUMPY_INCLUDE_DIR"} || "$vmd_library_dir/numpy/lib_$config_arch/include";
   $stock_numpy_library_dir=$ENV{"NUMPY_LIBRARY_DIR"} || "$vmd_library_dir/python/lib_$config_arch/lib/python2.5/site-packages/numpy/core/include";
-  $python_libs        = "-lpython2.5 -lpthread";
+  $python_libs        = "$ENV{'PYTHON_LIBRARIES'}" || "-lpython2.5 -lpthread";
 }
 
 $python_defines     = "-DVMDPYTHON";
@@ -2593,7 +2593,7 @@
 
     if ($config_cuda) {
       $arch_nvccflags   .= " --machine 64 -O3 $cuda_include";
-      $cuda_library     = "-L/usr/local/cuda-10.2/lib64";
+      $cuda_library     = "-L$ENV{'EBROOTCUDA'}/lib64";
     }
 
     $arch_lex		= "flex"; # has problems with vendor lex
@@ -2602,8 +2602,8 @@
     # override code probably date back to RHEL4.x or earlier, and
     # they likely serve no useful purpose going forward.
     if (!$config_opengl_dispatch) {
-      $opengl_dep_libs	= "-L/usr/X11R6/lib64 -lGL -lX11";
-      $mesa_libs          = "-lMesaGL -L/usr/X11R6/lib64 -lXext -lX11";
+      $opengl_dep_libs	= " -lGL -lX11";
+      $mesa_libs          = "-lGL -lGLU -lXext -lX11";
     }
 
     # this is to make tcl happy
@@ -3789,7 +3789,7 @@
 
 .cu.ptx:
 	\$(ECHO) "Compiling " \$< " --> " \$*.ptx " ..."; \\
-	\$(NVCC) \$(DEFINES) --use_fast_math $liboptix_include -gencode arch=compute_50,code=compute_50 -ptx \$< $arch_coptout$vmd_arch_dir/\$\@
+	\$(NVCC) \$(DEFINES) --use_fast_math $liboptix_include -gencode arch=compute_80,code=compute_80 -ptx \$< $arch_coptout$vmd_arch_dir/\$\@
 
 .y.o:
 
