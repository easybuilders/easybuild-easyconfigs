--- src/pot.F.orig	2024-09-23 14:25:24.000000000 -0700
+++ src/pot.F	2024-09-23 14:11:26.000000000 -0700
@@ -393,6 +393,12 @@
       IF (LBEXTERNAL()) CALL BEXT_ADDV(CVTOT,GRIDC,SIZE(CVTOT,2))
 ! bexternal__
       CALL POT_FLIP(CVTOT, GRIDC,WDES%NCDIJ )
+! solvation__
+! vaclevel
+      IF (LSOL) CALL GET_FERMISHIFT(LATT_CUR, T_INFO, GRIDC, WDES, CWORK, CHTOT)
+! vaclevel
+! solvation__
+
 !=======================================================================
 ! if overlap is used :
 ! copy CVTOT to SV and set contribution of unbalanced lattice-vectors

--- src/mpi.F.orig	2024-09-24 18:23:29.058777851 -0700
+++ src/mpi.F	2024-09-24 18:24:46.591850200 -0700
@@ -2022,7 +2022,34 @@
       RETURN
       END
 #endif
+! Subroutine for VASPsol - Added by D. Gaissmaier
+!----------------------------------------------------------------------
+!
+! Global sum function - required for VASPsol
+!
+!----------------------------------------------------------------------
+
+      SUBROUTINE M_sum_1(COMM, v1)
+      USE mpimy
+      IMPLICIT NONE
+
+      TYPE(communic) COMM
+      REAL(q) vec(1),v1
+
+      vec(1)=v1
 
+      CALL M_sumb_d(COMM, vec, 1)
+
+      v1=vec(1)
+
+      RETURN
+      END SUBROUTINE
+! End of VASPsol subroutine
+
+!----------------------------------------------------------------------
+!
+! to make live easier, a global sum for 2 scalars
+ 
 !----------------------------------------------------------------------
 !
 ! to make live easier, a global sum for 2 scalars
