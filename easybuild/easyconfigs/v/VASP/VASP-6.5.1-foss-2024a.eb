# This build enables both HDF5 and Wannier-90, both are optional but recommended
# Furthermore, it sets the vdw_kernel as an external file (courtesy of Mikael Öhman)
# Author: J. Saßmannshausen (Imperial College London/UK)

easyblock = 'MakeCp'

name = 'VASP'
version = '6.5.1'

homepage = 'http://www.vasp.at'
description = """The Vienna Ab initio Simulation Package (VASP) is a
computer program for atomic scale materials modelling, e.g. electronic
structure calculations and quantum-mechanical molecular dynamics,
from first principles.

This build includes HDF5 and the Wannier-90 functions."""

toolchain = {'name': 'foss', 'version': '2024a'}
toolchainopts = {'usempi': True}

download_instructions = """VASP is proprietary software, see http://www.vasp.at/index.php/faqs
on how to obtain a license for the software."""
sources = [
    '%(namelower)s.%(version)s.tgz',
    # rename vdw_kernel.bindat.gz to keep it unique
    'vdw_kernel.bindat.%(version)s.gz',
]
patches = [
    'VASP-6.5.0_enable_hdf5_wannier90.patch',
    'VASP-6.5.0_external_vdwkernel.patch',
]
checksums = [
    {'vasp.6.5.1.tgz':
     'a53fd9dd2a66472a4aa30074dbda44634fc663ea2628377fc01d870e37136f61'},
    {'vdw_kernel.bindat.6.5.1.gz':
     '1040863aef474223bd8bb9ec6185e09f42808de936476dfea48ecedecb7bd6a1'},
    {'VASP-6.5.0_enable_hdf5_wannier90.patch':
     '3b4701f669da8b9e63e46f4fcaa31e2ec17de8045495af802181ae2f2ecd7636'},
    {'VASP-6.5.0_external_vdwkernel.patch':
     '1533ab6e045e4028f9e7d0de6b026654b9079569be81353bb460991657e48f0c'},
]

dependencies = [
    ('HDF5', '1.14.5'),
    ('Wannier90', '3.1.0'),
]

prebuildopts = 'cp arch/makefile.include.gnu ./makefile.include && '

# VASP uses LIBS as a list of folders
prebuildopts += 'unset LIBS && '

buildopts = 'all '  # building std gam and ncl
buildopts += 'DEPS=1 '  # required for VASP parallel builds

# Testing, can take a long time!
# This section has been taken from VASP-6.3.2-nvofbf-2022.07.eb
# The important bit seems to be to set ulimit -s to unlimited, as else segfaults
# will occure during some of the tests.
# https://www.vasp.at/wiki/index.php/Validation_tests

# it is recommended to run the testsuite with 4 MPI processes,
# but it's also recommended to use only 1 MPI process per GPU,
# so running the test on GPUs requires 4 GPUs?
_vasp_test_mpirun = "mpirun -np 4"

# skip tests that are too long
_vasp_test_skip = 'HEG_333_LW '

_vasp_test_env = [
    "export OMP_NUM_THREADS=1",
    "export OMP_STACKSIZE=512m",
    "ulimit -s unlimited",
    f"export VASP_TESTSUITE_EXE_STD='{_vasp_test_mpirun} %(builddir)s/vasp.%(version)s/bin/vasp_std'",
    f"export VASP_TESTSUITE_EXE_NCL='{_vasp_test_mpirun} %(builddir)s/vasp.%(version)s/bin/vasp_ncl'",
    f"export VASP_TESTSUITE_EXE_GAM='{_vasp_test_mpirun} %(builddir)s/vasp.%(version)s/bin/vasp_gam'",
    f"export VASP_TESTSUITE_SKIP_TESTS='{_vasp_test_skip}'",
    "",
]

pretestopts = " && ".join(_vasp_test_env)
runtest = 'test'

files_to_copy = [
    (['bin/vasp_std', 'bin/vasp_gam', 'bin/vasp_ncl'], 'bin'),
    (['../vdw_kernel.bindat.6.5.1'], '.'),
]

postinstallcmds = ['mv %(installdir)s/vdw_kernel.bindat.6.5.1 %(installdir)s/vdw_kernel.bindat']

sanity_check_paths = {
    'files': ['bin/vasp_std', 'bin/vasp_gam', 'bin/vasp_ncl'],
    'dirs': [],
}

# This environment variable works together with the vasp-6.4.3_vdw_kernel_file-HDF5-Wannier.patch
# so that it can be used without having to copy this file around.
modextravars = {
    'VDW_KERNEL': '%(installdir)s/vdw_kernel.bindat',
}

moduleclass = 'phys'
