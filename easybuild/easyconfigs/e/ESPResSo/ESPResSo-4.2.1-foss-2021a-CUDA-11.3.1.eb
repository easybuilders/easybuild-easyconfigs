easyblock = 'CMakeMake'

name = 'ESPResSo'
version = '4.2.1'
versionsuffix = '-CUDA-%(cudaver)s'

homepage = 'https://espressomd.org/wordpress'
description = """A software package for performing and analyzing scientific Molecular Dynamics simulations."""

source_urls = ['https://github.com/espressomd/espresso/archive/refs/tags/']
sources = ['%(version)s.tar.gz']
checksums = ['f7264d78fe1fd7774b89972fe10d5b15d2e9d620d406158dab90df5df0b9f255']

toolchain = {'name': 'foss', 'version': '2021a'}
toolchainopts = {'usempi': True, 'pic': True}

builddependencies = [('CMake', '3.20.1')]

dependencies = [
    ('Python', '3.9.5'),
    ('CUDA', '11.3.1', '', SYSTEM),
    ('SciPy-bundle', '2021.05'),
    ('Boost.MPI', '1.76.0'),
    ('HDF5', '1.10.7'),
    ('Mesa', '21.1.1'),
    ('GSL', '2.7'),
    ('IPython', '7.25.0'),
    ('Pint', '0.20.1'),
]

configopts = ' -DCMAKE_SKIP_RPATH=OFF -DWITH_TESTS=ON -DWITH_CUDA=ON '
configopts += '-DCTEST_ARGS:STRING=-j%(parallel)s -DTEST_TIMEOUT=1200 '
configopts += '-DINSIDE_DOCKER '

# Avoid that ESPResSo tests all get bound to the first core
# see https://github.com/easybuilders/easybuild-easyconfigs/pull/18517#issuecomment-1674612814
local_OMPI_test_vars = 'OMPI_MCA_hwloc_base_binding_policy=none '
pretestopts = local_OMPI_test_vars
runtest = '-j%(parallel)s check_unit_tests '
runtest += '&& %s make check_python' % local_OMPI_test_vars

modextrapaths = {'PYTHONPATH': ['lib/python%(pyshortver)s/site-packages']}

_binaries = ['ipypresso',  'pypresso']
_libs = [
    'Espresso_config', 'Espresso_core', 'Espresso_script_interface', 'Espresso_shapes',
    '_init', 'analyze', 'code_info', 'cuda_init', 'electrokinetics', 'galilei',
    'integrate', 'interactions', 'lb', 'particle_data', 'polymer', 'profiler',
    'script_interface', 'system', 'thermostat', 'utils', 'version',
]

_lib_path = 'lib/python%(pyshortver)s/site-packages/espressomd'

sanity_check_paths = {
    'files': ['bin/%s' % x for x in _binaries] +
             [_lib_path + '/%s.' % x + SHLIB_EXT for x in _libs],
    'dirs': ['bin', 'lib']
}

sanity_check_commands = ['pypresso -h', 'ipypresso -h']

moduleclass = 'chem'
