easyblock = 'Binary'

name = 'KofamScan'
version = '1.3.0'

homepage = 'https://www.genome.jp/tools/kofamkoala/'
description = """KofamKOALA assigns K numbers to the user's sequence data by 
HMMER/HMMSEARCH against KOfam (a customized HMM database of KEGG Orthologs 
(KOs)).  K number assignments with scores above the predefined thresholds 
for individual KOs are more reliable than other proposed assignments.  Such 
high score assignments are highlighted with asterisks '*' in the output.  
The K number assignments facilitate the interpretation of the annotation 
results by linking the user's sequence data to the KEGG pathways and EC 
numbers.  [code only: libraries and external binaries but no data]."""
# software_license = 'MIT'

toolchain = {'name': 'gompi', 'version': '2021b'}

source_urls = [
    'https://www.genome.jp/ftp/tools/kofam_scan/',
    'https://www.genome.jp/ftp/tools/kofam_scan/archives/kofam_scan-%(version)s/',
]
sources = [
    'kofam_scan-%(version)s.tar.gz',
]
checksums = [
    'c50434f9d72d4958549d5f4433a294ec4d55391e295eedff4c4db8d642fca1f6',  # kofam_scan-1.3.0.tar.gz
]

dependencies = [
    ('Ruby',     '3.0.1',),
    ('Perl',     '5.34.0'),
    ('parallel', '20210722'),
    ('HMMER',    '3.3.2'),
]

extract_sources = False

# NOTE The database files can be added manually afterwards. A few possible ways:
# 1. Download KofamScan database files and place them in some shared directory so that
# users can specify database files either in command line or in personal config.yml file
# 2. Or, write the default config.yml in %(installdir)s that pointing "profile" and
# "ko_list" to the downloaded database files.
install_cmd = 'tar xfz kofam_scan-%(version)s.tar.gz && '
install_cmd += 'cd kofam_scan-%(version)s/ && '
install_cmd += 'cp -r * %(installdir)s/ && cd .. && '
install_cmd += 'echo "cpu: 2" > %(installdir)s/config.yml '

modloadmsg = """To execute KofamScan run: exec_annotation
Also check %(installdir)s/config-template.yml for template config file."""

sanity_check_paths = {
    'files': ['exec_annotation'],
    'dirs': ['lib'],
}

sanity_check_commands = ["exec_annotation --version 2>&1 | grep '%(version)s'"]

moduleclass = 'bio'
