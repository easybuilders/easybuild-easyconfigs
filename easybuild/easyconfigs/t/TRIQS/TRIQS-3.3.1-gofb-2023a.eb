easyblock = 'CMakeMake'

name = 'TRIQS'
version = '3.3.1'

homepage = 'https://triqs.github.io/triqs'
description = """
 TRIQS (Toolbox for Research on Interacting Quantum Systems) is a
 scientific project providing a set of C++ and Python libraries to
 develop new tools for the study of interacting quantum systems.
"""

docurls = ['https://triqs.github.io/triqs/%(version_major_minor)s.x/']
software_license = 'LicenseGPLv3'

toolchain = {'name': 'gofb', 'version': '2023a'}
toolchainopts = {'pic': True, 'usempi': True}

source_urls = ['https://github.com/TRIQS/triqs/releases/download/%(version)s/']
sources = ['triqs-%(version)s.tar.gz']
checksums = ['740efb57c9af39f4086115f8167a55833e84558261e0564c7179d8c17f911539']

dependencies = [
    ('Boost', '1.85.0'),
    ('Clang', '17.0.6'),
    ('FFTW', '3.3.10'),
    ('HDF5', '1.14.5'),
    ('mpi4py', '4.0.0'),
    ('SciPy-Stack', '2024a'),
]

builddependencies = [
    ('CMake', '3.27.7'),
    ('pytest', '8.2.2'),
]

multi_deps = {'Python': ['3.10','3.11']}

#install Python package Mako needed for configure step
preconfigopts = ' && '.join([
    'PYTHONPATH=$PYTHONPATH:%(builddir)s/lib/python%(pyshortver)s/site-packages',
    'pip install mako==1.3.5 --prefix=%(builddir)s/ && '
])

installopts = ' && '.join([
#reinstall mako needed for TRIQS extension 
#don't use keeppreviousinstall=True as we need manually to delete the installdir during rebuild
    " && pip install --prefix=%(installdir)s mako==1.3.5 --no-index",
#TRIQS set LD_LIBRARY_PATH for its Python extension to find its lib
#However, we don't not use LD_LIBRARY_PATH and to avoid sourcing triqsvar.sh
#each time, we add installdir/lib to the RPATH
    "/cvmfs/soft.computecanada.ca/easybuild/bin/setrpaths.sh --path %(installdir)s/lib --any_interpreter --add_path %(installdir)s/lib64"
])

separate_build_dir = True

#runtest = 'test'

exts_defaultclass = "CMakePythonPackage"
exts_list = [
    ('triqs_maxent', '3.3.0', {
        'configopts': "-DBuild_Documentation=OFF -DMeasureG2=ON -DHybridisation_is_complex=ON -DLocal_hamiltonian_is_complex=ON",
        'source_urls': ['https://github.com/TRIQS/maxent/releases/download/%(version)s/'],
        'sources': ['maxent-%(version)s.tar.gz'],
        'checksums': ['e28507093a9a51466d64a83ccc2686b35b78091fe44616d4d1f66a54fbd841c1'],
    }),
    ('triqs_cthyb', '3.3.0', {
        'source_urls': ['https://github.com/TRIQS/cthyb/releases/download/%(version)s/'],
        'sources': ['cthyb-%(version)s.tar.gz'],
        'checksums': ['96635f2e2b6016a5f99e372aefc6bd7c5af7ef2ebe26c429bb1b479bc49b67ef'],
    }),
    ('triqs_hubbardI', '3.3.0', {
        'modulename': 'triqs_hubbardI',
        'source_urls': ['https://github.com/TRIQS/hubbardI/releases/download/%(version)s/'],
        'sources': ['hubbardI-%(version)s.tar.gz'],
        'checksums': ['374fb0d7c5a52f9bda3763cb6910a9bdeb8f2e3d1494dfe1024f3e0be098edf6'],
    }),
    ('triqs_tprf', version, {
        'source_urls': ['https://github.com/TRIQS/tprf/releases/download/%(version)s/'],
        'sources': ['tprf-%(version)s.tar.gz'],
        'checksums': ['4a39648629888ec07c1a5c333ae5aa85ac04a46a7ec3b5d5d588cfe5246b7572'],
    }),
    ('triqs_dft_tools', version, {
        'source_urls': ['https://github.com/TRIQS/dft_tools/releases/download/%(version)s/'],
        'sources': ['dft_tools-%(version)s.tar.gz'],
        'checksums': ['f4a9b9d44769fb7fe06892640217a915d133845169eae2fe450a41974c4b47c3'],
    }),
    ('solid_dmft', version, {
        'source_urls': ['https://github.com/flatironinstitute/solid_dmft/archive/refs/tags/'],
        'sources': ['%(version)s.tar.gz'],
        'checksums': ['e1ea4ffa6fab2e294c7c4aec5eb0766b01edc26e67d180f275f3aa94cba50a29'],
    }),
]

sanity_check_paths = {
    'files': ['lib/libtriqs.%s' % SHLIB_EXT],
    'dirs': ['include/triqs', 'include/itertools', 'include/mpi', 'include/cpp2py',
             'lib/python%(pyshortver)s/site-packages', 'share'],
}

sanity_check_commands = [
    "triqs++ --help",
    "c++2py --help",
    "python -c 'import triqs'"
]

modextrapaths = {
    'EBPYTHONPREFIXES': [''],
}

moduleclass = 'phys'
