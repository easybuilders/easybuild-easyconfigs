name = 'TensorFlow'
version = '1.8.0'
versionsuffix = '-Python-%(pyver)s'

homepage = 'https://www.tensorflow.org/'
description = "An open-source software library for Machine Intelligence"

toolchain = {'name': 'fosscuda', 'version': '2018a'}

source_urls = ['https://github.com/tensorflow/tensorflow/archive/']
sources = ['v%(version)s.tar.gz']
patches = [
    'TensorFlow-1.5.0_swig-env.patch',
    'TensorFlow-%(version)s_remove-msse-hardcoding.patch',
    'TensorFlow-%(version)s_lrt-flag.patch',
    'TensorFlow-1.6.0_use_64b_alignment.patch',
    'TensorFlow-1.8.0_dont_expand_cuda_cudnn_path.patch',
    'TensorFlow-%(version)s_no_grpc.patch',
    'TensorFlow-%(version)s_no_boringssl.patch',
    'TensorFlow-%(version)s_use_mklddn_0.14.patch',
    'TensorFlow-%(version)s_GetVersion_tuple_2_struct.patch',
]
checksums = [
    '47646952590fd213b747247e6870d89bb4a368a95ae3561513d6c76e44f92a75',  # v1.8.0.tar.gz
    '53807290f1acb6a0f2a84f1a0ad9f917ee131c304b3e08679f3cbd335b22c7ef',  # TensorFlow-1.5.0_swig-env.patch
    '4d043bba84d19aa38e402ef4ddaa89df936ae792f82693a49ce8ae4a1d091f6d',  # TensorFlow-1.8.0_remove-msse-hardcoding.patch
    '3c499788266800c71fa9874d411df79f7331320b3a86bc7c79c74763ae04c143',  # TensorFlow-1.8.0_lrt-flag.patch
    'bcff66b5cc7a98e2ae894df6940aac5e3dcec3700773d24a6c3a5a69128ef66f',  # TensorFlow-1.6.0_use_64b_alignment.patch
    # TensorFlow-1.8.0_dont_expand_cuda_cudnn_path.patch
    '37ba1f77f42252b7484b32b8309f9acf1f910612623581a98fd39c9f94e9b285',
    '7cb51ce3b4619320cb1c6ef4ff1d4e1afcc5b41254c7031fccf51e3e7ce34844',  # TensorFlow-1.8.0_no_grpc.patch
    'ca2338e189496711bc8798070d63255c3ff77ed616d1d2775abbef6f984db7ad',  # TensorFlow-1.8.0_no_boringssl.patch
    '8303273a037f6f90f496783b67bde66d0f5cc826c61e5ad6d7e37290db029644',  # TensorFlow-1.8.0_use_mklddn_0.14.patch
    # TensorFlow-1.8.0_GetVersion_tuple_2_struct.patch
    '6ab6ca0179265a20892b1f03b0fa13d2f197254b8a941c2e0050824491b9a678',

]

builddependencies = [
    ('Bazel', '0.12.0'),
    ('wheel', '0.31.0', versionsuffix),
]

dependencies = [
    ('Python', '3.6.4'),
    ('cuDNN', '7.0.5.15'),
]

preconfigopts = 'export CC_OPT_FLAGS="$CC_OPT_FLAGS -mno-avx512f" && '

cuda_compute_capabilities = ['3.0', '3.2', '3.5', '3.7', '5.0', '6.0', '7.0']

moduleclass = 'lib'
