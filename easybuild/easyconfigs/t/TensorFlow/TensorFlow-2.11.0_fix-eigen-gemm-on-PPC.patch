Fix a SIGSEGV in e.g. //tensorflow/core/grappler/optimizers:arithmetic_optimizer_test_cpu
See https://gitlab.com/libeigen/eigen/-/issues/2608

fix-ppc-gemm.patch based on https://gitlab.com/libeigen/eigen/-/merge_requests/1208

Author: Alexander Grund (TU Dresden)

diff --git a/third_party/eigen3/fix-ppc-gemm.patch b/third_party/eigen3/fix-ppc-gemm.patch
new file mode 100644
index 00000000000..c674c4b590e
--- /dev/null
+++ b/third_party/eigen3/fix-ppc-gemm.patch
@@ -0,0 +1,46 @@
+diff --git a/Eigen/src/Core/arch/AltiVec/MatrixProduct.h b/Eigen/src/Core/arch/AltiVec/MatrixProduct.h
+index 3b3b558..44f9e16 100644
+--- a/Eigen/src/Core/arch/AltiVec/MatrixProduct.h
++++ b/Eigen/src/Core/arch/AltiVec/MatrixProduct.h
+@@ -1760,7 +1760,7 @@ EIGEN_ALWAYS_INLINE void gemm_cols(
+   gemm_cols<Scalar, Packet, DataMapper, N, accCols>(res, blockA, blockB, depth, strideA, offsetA, strideB, offsetB, col, rows, remaining_rows, pAlpha, pMask);
+ 
+ template<typename Scalar, typename Packet, typename DataMapper, const Index accCols>
+-EIGEN_STRONG_INLINE void gemm_extra_cols(
++EIGEN_ALWAYS_INLINE void gemm_extra_cols(
+   const DataMapper& res,
+   const Scalar* blockA,
+   const Scalar* blockB,
+@@ -2194,7 +2194,7 @@ EIGEN_ALWAYS_INLINE void gemm_complex_cols(
+   gemm_complex_cols<Scalar, Packet, Packetc, DataMapper, N, accCols, ConjugateLhs, ConjugateRhs, LhsIsReal, RhsIsReal>(res, blockA, blockB, depth, strideA, offsetA, strideB, offsetB, col, rows, remaining_rows, pAlphaReal, pAlphaImag, pMask);
+ 
+ template<typename Scalar, typename Packet, typename Packetc, typename DataMapper, const Index accCols, bool ConjugateLhs, bool ConjugateRhs, bool LhsIsReal, bool RhsIsReal>
+-EIGEN_STRONG_INLINE void gemm_complex_extra_cols(
++EIGEN_ALWAYS_INLINE void gemm_complex_extra_cols(
+   const DataMapper& res,
+   const Scalar* blockA,
+   const Scalar* blockB,
+diff --git a/Eigen/src/Core/arch/AltiVec/MatrixProductCommon.h b/Eigen/src/Core/arch/AltiVec/MatrixProductCommon.h
+index 28868ca..1ac6629 100644
+--- a/Eigen/src/Core/arch/AltiVec/MatrixProductCommon.h
++++ b/Eigen/src/Core/arch/AltiVec/MatrixProductCommon.h
+@@ -30,8 +30,8 @@ EIGEN_ALWAYS_INLINE void gemm_extra_row(
+   const Packet& pAlpha,
+   const Packet& pMask);
+ 
+-template<typename Scalar, typename Packet, typename DataMapper, const Index accCols, bool ConjugateLhs, bool ConjugateRhs, bool LhsIsReal, bool RhsIsReal>
+-EIGEN_STRONG_INLINE void gemm_extra_cols(
++template<typename Scalar, typename Packet, typename DataMapper, const Index accCols>
++EIGEN_ALWAYS_INLINE void gemm_extra_cols(
+   const DataMapper& res,
+   const Scalar* blockA,
+   const Scalar* blockB,
+@@ -67,7 +67,7 @@ EIGEN_ALWAYS_INLINE void gemm_complex_extra_row(
+   const Packet& pMask);
+ 
+ template<typename Scalar, typename Packet, typename Packetc, typename DataMapper, const Index accCols, bool ConjugateLhs, bool ConjugateRhs, bool LhsIsReal, bool RhsIsReal>
+-EIGEN_STRONG_INLINE void gemm_complex_extra_cols(
++EIGEN_ALWAYS_INLINE void gemm_complex_extra_cols(
+   const DataMapper& res,
+   const Scalar* blockA,
+   const Scalar* blockB,
diff --git a/third_party/eigen3/workspace.bzl b/third_party/eigen3/workspace.bzl
index 6c8744aeec4..2a2a7b474c9 100644
--- a/third_party/eigen3/workspace.bzl
+++ b/third_party/eigen3/workspace.bzl
@@ -14,7 +14,7 @@ def repo():
     tf_http_archive(
         name = "eigen_archive",
         build_file = "//third_party/eigen3:eigen_archive.BUILD",
-        patch_file = ["//third_party/eigen3:disable-atan-on-ppc.patch"],
+        patch_file = ["//third_party/eigen3:disable-atan-on-ppc.patch", "//third_party/eigen3:fix-ppc-gemm.patch"],
         sha256 = EIGEN_SHA256,
         strip_prefix = "eigen-{commit}".format(commit = EIGEN_COMMIT),
         urls = tf_mirror_urls("https://gitlab.com/libeigen/eigen/-/archive/{commit}/eigen-{commit}.tar.gz".format(commit = EIGEN_COMMIT)),
