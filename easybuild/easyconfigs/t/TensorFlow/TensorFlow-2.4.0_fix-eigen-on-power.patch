TF adds some code in the Eigen::internal namespace which causes ambiguous template instantiation errors
See https://github.com/tensorflow/tensorflow/issues/44626
Workaround: Conditionally remove the offending code from TF when it is added in Eigen

Author: Alexander Grund (TU Dresden)

diff --git a/tensorflow/core/kernels/eigen_cuboid_convolution.h b/tensorflow/core/kernels/eigen_cuboid_convolution.h
index 76bdc509c24..19ce77bc0ed 100644
--- a/tensorflow/core/kernels/eigen_cuboid_convolution.h
+++ b/tensorflow/core/kernels/eigen_cuboid_convolution.h
@@ -25,10 +25,17 @@ limitations under the License.
 
 #include "tensorflow/core/kernels/eigen_convolution_helpers.h"
 
+#if defined(EIGEN_VECTORIZE_ALTIVEC) || defined(EIGEN_VECTORIZE_VSX)
+#define TF_USE_CUSTOM_EIGEN_PACK 0
+#else
+#define TF_USE_CUSTOM_EIGEN_PACK 1
+#endif
+
 namespace Eigen {
 
 namespace internal {
 
+#if TF_USE_CUSTOM_EIGEN_PACK
 // WARNING: Most of the code here implicitly assumes that the matrix is in
 // ColMajor layout. This is guaranteed by the tensor contraction (see
 // TensorContraction.h).
@@ -1625,6 +1632,7 @@ struct gemm_pack_rhs<
     }
   }
 };
+#endif
 
 #if defined(TENSORFLOW_USE_CUSTOM_CONTRACTION_KERNEL)
 // Pack a block of the right input matrix (in our case it's always a "virtual
diff --git a/tensorflow/core/kernels/eigen_spatial_convolutions-inl.h b/tensorflow/core/kernels/eigen_spatial_convolutions-inl.h
index c8e7c6147aa..1fb30f6dec3 100644
--- a/tensorflow/core/kernels/eigen_spatial_convolutions-inl.h
+++ b/tensorflow/core/kernels/eigen_spatial_convolutions-inl.h
@@ -18,11 +18,18 @@ limitations under the License.
 
 #include "tensorflow/core/kernels/eigen_convolution_helpers.h"
 
+#if defined(EIGEN_VECTORIZE_ALTIVEC) || defined(EIGEN_VECTORIZE_VSX)
+#define TF_USE_CUSTOM_EIGEN_PACK 0
+#else
+#define TF_USE_CUSTOM_EIGEN_PACK 1
+#endif
+
 // Note this header is used in both TF and TFLite.
 namespace Eigen {
 
 namespace internal {
 
+#if TF_USE_CUSTOM_EIGEN_PACK
 // WARNING: Most of the code here implicitly assumes that the matrix is in
 // ColMajor layout. This is guaranteed by the tensor contraction (see
 // TensorContraction.h).
@@ -1532,6 +1539,7 @@ struct gemm_pack_rhs<
     }
   }
 };
+#endif
 }  // end namespace internal
 
 /** SpatialConvolution
