fix build on top of LLVM 11.x,
see also https://github.com/numba/llvmlite/issues/639
diff --git a/ffi/custom_passes.cpp b/ffi/custom_passes.cpp
index 5758aad..860df2d 100644
--- a/ffi/custom_passes.cpp
+++ b/ffi/custom_passes.cpp
@@ -400,7 +400,7 @@ struct RefPrunePass : public FunctionPass {
                 // LLVM 9 postdomtree.dominates takes basic blocks
                 if ( domtree.dominates(incref, decref)
                         && postdomtree.dominates(decref->getParent(), incref->getParent()) ){
-#elif LLVM_VERSION_MAJOR == 10
+#elif LLVM_VERSION_MAJOR == 11
                 // LLVM 10 postdomtree.dominates can handle instructions
                 if ( domtree.dominates(incref, decref)
                         && postdomtree.dominates(decref, incref) ){
diff --git a/ffi/transforms.cpp b/ffi/transforms.cpp
index 23bfd72..2eac2e9 100644
--- a/ffi/transforms.cpp
+++ b/ffi/transforms.cpp
@@ -6,6 +6,7 @@
 
 extern "C" {
 
+  /*
 namespace llvm {
     inline PassManagerBuilder *unwrap(LLVMPassManagerBuilderRef P) {
         return reinterpret_cast<PassManagerBuilder*>(P);
@@ -15,7 +16,7 @@ namespace llvm {
         return reinterpret_cast<LLVMPassManagerBuilderRef>(P);
     }
 }
-
+  */
 
 API_EXPORT(LLVMPassManagerBuilderRef)
 LLVMPY_PassManagerBuilderCreate()
