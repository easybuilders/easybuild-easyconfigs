easyblock = 'PythonPackage'

name = 'nbclassic'
version = "1.0.0"

homepage = 'https://jupyter.org/'
description = """NbClassic provides a backwards compatible Jupyter Notebook interface
 that you can install side-by-side with the latest versions: That way, you can fearlessly
 upgrade without worrying about your classic extensions and customizations breaking."""

toolchain = {'name': 'GCCcore', 'version': '12.3.0'}

builddependencies = [
    ('binutils', '2.40'),
    ('maturin', '1.1.0'),
]
dependencies = [
    ('Python', '3.11.3'),
    ('jupyter-server', '2.7.2'),
]

sources = [SOURCE_TAR_GZ]
patches = ['nbclassic-1.0.0_fix_setup_version.patch']
checksums = [
    {'nbclassic-1.0.0.tar.gz': '0ae11eb2319455d805596bf320336cda9554b41d99ab9a3c31bf8180bffa30e3'},
    {'nbclassic-1.0.0_fix_setup_version.patch': 'c26d91ac1d0cea2b361b2619076acdaf5fcd5ff2363d9e5f5e1bd737b4b50736'},
]

download_dep_fail = True
sanity_pip_check = True
use_pip = True

local_binaries = [
    'jupyter-nbclassic',
    'jupyter-nbclassic-bundlerextension',
    'jupyter-nbclassic-extension',
    'jupyter-nbclassic-serverextension',
]
sanity_check_paths = {
    'files': ['bin/%s' % x for x in local_binaries],
    'dirs': [],
}

sanity_check_commands = ['jupyter nbclassic --help']

modextrapaths = {
    'JUPYTER_CONFIG_PATH': 'etc/jupyter',
    'JUPYTER_PATH': 'share/jupyter',
}

moduleclass = 'tools'
