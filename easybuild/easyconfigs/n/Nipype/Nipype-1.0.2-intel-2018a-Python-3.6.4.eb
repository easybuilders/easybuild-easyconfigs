easyblock = 'Bundle'

name = 'Nipype'
version = '1.0.2'
versionsuffix = '-Python-%(pyver)s'

homepage = 'http://nipy.org/nipype'
description = """Nipype is a Python project that provides a uniform interface to existing neuroimaging software and
 facilitates interaction between these packages within a single workflow."""

toolchain = {'name': 'intel', 'version': '2018a'}

dependencies = [
    ('Python', '3.6.4'),
    ('libxml2', '2.9.7'),
    ('libxslt', '1.1.32'),
    ('NiBabel', '2.2.1', versionsuffix),
]

# raise an error when auto-downloading of dependency packages is detected
download_dep_fail = True

exts_defaultclass = 'PythonPackage'
exts_list = [
    ('networkx', '2.1', {
        'source_tmpl': '%(name)s-%(version)s.zip',
        'source_urls': ['https://pypi.python.org/packages/source/n/networkx'],
        'checksums': ['64272ca418972b70a196cb15d9c85a5a6041f09a2f32e0d30c0255f25d458bb1'],
    }),
    ('traits', '4.6.0', {
        'source_urls': ['https://pypi.python.org/packages/source/t/traits'],
        'checksums': ['5d82345e0a34b88e394964eea1be47419530027aef7f0b20ad315b6ec6c68370'],
    }),
    ('future', '0.16.0', {
        'source_urls': ['https://pypi.python.org/packages/source/f/future'],
        'checksums': ['e39ced1ab767b5936646cedba8bcce582398233d6a627067d4c6a454c90cfedb'],
    }),
    ('nipype', version, {
        'source_urls': ['https://pypi.python.org/packages/source/n/nipype'],
        'checksums': ['1ed65f3e97fd0f82c418ad48af2107050e86d9e39eea4d22381ad7df932bf1ec'],
    }),
]

# specify that Bundle easyblock should run a full sanity check, rather than just trying to load the module
full_sanity_check = True

sanity_check_paths = {
    'files': ['bin/nipypecli'],
    'dirs': ['lib/python%(pyshortver)s/site-packages'],
}

sanity_check_commands = ["python -c 'import nipype.interfaces'"]

modextrapaths = {'PYTHONPATH': ['lib/python%(pyshortver)s/site-packages']}

moduleclass = 'vis'
