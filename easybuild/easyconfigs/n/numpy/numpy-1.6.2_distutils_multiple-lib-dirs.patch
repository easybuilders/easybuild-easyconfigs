diff -ru numpy-1.6.2.orig/numpy/distutils/fcompiler/__init__.py numpy-1.6.2/numpy/distutils/fcompiler/__init__.py
--- numpy-1.6.2.orig/numpy/distutils/fcompiler/__init__.py	2012-05-19 15:51:54.000000000 +0200
+++ numpy-1.6.2/numpy/distutils/fcompiler/__init__.py	2013-01-14 17:07:50.121110586 +0100
@@ -626,7 +626,11 @@
         return options
 
     def library_option(self, lib):
-        return "-l" + lib
+        if lib[0]=='-':
+            return lib
+        else:
+            return "-l" + lib
+
     def library_dir_option(self, dir):
         return "-L" + dir
 
Only in numpy-1.6.2/numpy/distutils/fcompiler: __init__.py.orig
diff -ru numpy-1.6.2.orig/numpy/distutils/system_info.py numpy-1.6.2/numpy/distutils/system_info.py
--- numpy-1.6.2.orig/numpy/distutils/system_info.py	2012-05-19 15:51:55.000000000 +0200
+++ numpy-1.6.2/numpy/distutils/system_info.py	2013-01-14 17:07:50.122110599 +0100
@@ -562,7 +562,7 @@
             if is_string(default):
                 return [default]
             return default
-        return [b for b in [a.strip() for a in libs.split(',')] if b]
+        return [b for b in [a.strip().replace(':',',') for a in libs.split(',')] if b]
 
     def get_libraries(self, key='libraries'):
         return self.get_libs(key,'')
@@ -615,6 +615,18 @@
             log.info('  libraries %s not found in %s', ','.join(libs), lib_dir)
         return info
 
+    def check_libs2_all(self, lib_dirs, libs, opt_libs =[]):
+        """If static or shared libraries are available then return
+        their info dictionary.
+
+        Checks each library for shared or static.
+        """
+        exts = self.library_extensions()
+        info = self._check_libs_all(lib_dirs,libs,opt_libs,exts)
+        if not info:
+            log.info('  libraries %s not found in %s', ','.join(libs), os.pathsep.join(lib_dirs))
+        return info
+
     def _lib_list(self, lib_dir, libs, exts):
         assert is_string(lib_dir)
         liblist = []
@@ -625,6 +637,9 @@
             lib_prefixes = ['lib']
         # for each library name, see if we can find a file for it.
         for l in libs:
+            if l[0]=='-':
+                liblist.append(l)
+                continue
             for ext in exts:
                 for prefix in lib_prefixes:
                     p = self.combine_paths(lib_dir, prefix+l+ext)
@@ -640,6 +655,19 @@
                     break
         return liblist
 
+    def _lib_list_all(self, lib_dirs, libs, exts):
+        assert (type(lib_dirs)==list)
+        if lib_dirs:
+           assert is_string(lib_dirs[0])
+        liblist=[]
+        for lib_dir in lib_dirs:
+           ls=self._lib_list(lib_dir,libs,exts)
+           for l in ls:
+               log.info("(_lib_list_all) Found %s in %s"%(l,lib_dir))
+               if l not in liblist:
+                   liblist.append(l)
+        return liblist
+
     def _check_libs(self, lib_dir, libs, opt_libs, exts):
         found_libs = self._lib_list(lib_dir, libs, exts)
         if len(found_libs) == len(libs):
@@ -651,6 +679,22 @@
         else:
             return None
 
+    def _check_libs_all(self, lib_dirs, libs, opt_libs, exts):
+        found_libs_unordered = self._lib_list_all(lib_dirs, libs, exts)
+        # ensure same order as in lib_dirs
+        found_libs = []
+        for lib_dir in libs:
+            if lib_dir in found_libs_unordered:
+                found_libs.append(lib_dir)
+        if len(found_libs) == len(libs):
+            info = {'libraries' : found_libs, 'library_dirs' : lib_dirs}
+            opt_found_libs = self._lib_list_all(lib_dirs, opt_libs, exts)
+            if len(opt_found_libs) == len(opt_libs):
+                info['libraries'].extend(opt_found_libs)
+            return info
+        else:
+            return
+
     def combine_paths(self,*args):
         """Return a list of existing paths composed by all combinations
         of items from the arguments.
@@ -880,10 +924,7 @@
         incl_dirs = self.get_include_dirs()
         mkl_libs = self.get_libs('mkl_libs',self._lib_mkl)
         mkl = None
-        for d in lib_dirs:
-            mkl = self.check_libs2(d,mkl_libs)
-            if mkl is not None:
-                break
+        mkl = self.check_libs2_all(lib_dirs,mkl_libs)
         if mkl is None:
             return
         info = {}
Only in numpy-1.6.2/numpy/distutils: system_info.py.orig
diff -ru numpy-1.6.2.orig/numpy/distutils/unixccompiler.py numpy-1.6.2/numpy/distutils/unixccompiler.py
--- numpy-1.6.2.orig/numpy/distutils/unixccompiler.py	2012-05-04 21:46:10.000000000 +0200
+++ numpy-1.6.2/numpy/distutils/unixccompiler.py	2013-01-14 17:07:50.129110688 +0100
@@ -109,3 +109,12 @@
 
 replace_method(UnixCCompiler, 'create_static_lib',
                UnixCCompiler_create_static_lib)
+
+def UnixCCompiler_library_option(self, lib):
+    if lib[0]=='-':
+        return lib
+    else:
+        return "-l" + lib
+
+replace_method(UnixCCompiler, 'library_option',
+               UnixCCompiler_library_option)
Only in numpy-1.6.2/numpy/distutils: unixccompiler.py.orig
