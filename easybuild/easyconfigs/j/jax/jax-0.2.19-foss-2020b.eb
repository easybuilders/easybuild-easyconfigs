# This file is an EasyBuild reciPY as per https://github.com/easybuilders/easybuild
# Author: Denis Kristak
easyblock = 'PythonBundle'

name = 'jax'
version = '0.2.19'
local_jaxlib_ver = '0.1.70'
homepage = 'https://pypi.python.org/pypi/jax'
description = """Composable transformations of Python+NumPy programs: differentiate, vectorize, JIT to GPU/TPU, and
more"""

toolchain = {'name': 'foss', 'version': '2020b'}

builddependencies = [
    ('Bazel', '3.7.2'),
    ('pytest-xdist', '2.3.0'),
    ('pytest-benchmark', '3.4.1'),
]

dependencies = [
    ('Python', '3.8.6'),
    ('SciPy-bundle', '2020.11'),
    ('Cython', '0.29.22'),
    ('flatbuffers-python', '1.12'),
]

# downloading TensorFlow tarball to avoid that Bazel downloads it during the build
# note: this *must* be the exact same commit as used in jaxlib-*/WORKSPACE
local_tf_commit = '4039feeb743bc42cd0a3d8146ce63fc05d23eb8d'

local_tf_builddir = "%%(builddir)s/tensorflow-%s" % local_tf_commit

local_jax_prebuildopts = "sed -i -e 's$pathToSed$%s$g' WORKSPACE && " % local_tf_builddir

local_jax_build_cmd = 'python build/build.py '
local_jax_build_cmd += '--target_cpu_features=native '
local_jax_build_cmd += '--bazel_startup_options="--output_user_root=%(builddir)s" '
local_jax_build_cmd += '--bazel_path="$EBROOTBAZEL/bin/bazel" '
local_jax_build_cmd += '--bazel_options=--subcommands '
local_jax_build_cmd += '--bazel_options=--jobs=%(parallel)s --bazel_options=--action_env=PYTHONPATH '
local_jax_build_cmd += '--bazel_options=--action_env=EBPYTHONPREFIXES'

use_pip = True

default_component_specs = {
    'sources': [SOURCE_TAR_GZ],
    'source_urls': [PYPI_SOURCE],
    'start_dir': '%(name)s-%(version)s',
}

components = [
    ('absl-py', '0.13.0', {
        'options': {'modulename': 'absl'},
        'easyblock': 'PythonPackage',
        'checksums': ['6953272383486044699fd0e9f00aad167a27e08ce19aae66c6c4b10e7e767793'],
        'use_pip': True,
    }),
    ('jaxlib', local_jaxlib_ver, {
        'easyblock': 'PythonPackage',
        'sources': [
            'jaxlib-v%s.zip' % local_jaxlib_ver,
            {
                'download_filename': '%s.tar.gz' % local_tf_commit,
                'filename': 'tensorflow-%s.tar.gz' % local_tf_commit,
            }
        ],
        'source_urls': [
            'https://github.com/google/jax/archive/',
            'https://github.com/tensorflow/tensorflow/archive/'
        ],
        'patches': [
            ('jaxlib-%s_no-tensorflow-download.patch' % local_jaxlib_ver, 1),
            ('TensorFlow-%s_mlir-build-env.patch' % local_tf_commit, '../tensorflow-%s' % local_tf_commit),
        ],
        'checksums': [
            # jaxlib-v0.1.70.zip
            '1205b180de70c98899d842f75bb589599c10a3c7a1c6099475c3a7d39b2e44ac',
            # tensorflow-4039feeb743bc42cd0a3d8146ce63fc05d23eb8d.tar.gz
            '0f13410284b9186e436350e9617b3bed2d65f1dc1a220fd37ad9ef43c2035663',
            # jaxlib-0.1.70_no-tensorflow-download.patch
            '1496c6be9336fb563b997f8da83d690a9b3a0a6e29fdd87fac60409300a2fd95',
            # TensorFlow-4039feeb743bc42cd0a3d8146ce63fc05d23eb8d-build-env.patch
            'd067836b1d18d66a8c69fb3db311855c8a56c0106d42a11299a1733c385e9c22',
        ],
        'start_dir': 'jax-jaxlib-v%s' % local_jaxlib_ver,
        'prebuildopts': local_jax_prebuildopts,
        'use_pip': True,
        'sanity_pip_check': True,
        'download_dep_fail': True,
        'buildcmd': local_jax_build_cmd,
        'install_src': 'dist/*.whl',
    }),
]

exts_list = [
    ('opt_einsum', '3.3.0', {
        'checksums': ['59f6475f77bbc37dcf7cd748519c0ec60722e91e63ca114e68821c0c54a46549'],
    }),
    (name, version, {
        'checksums': ['e55534680a05b6ced92dadde307bd3b2207efd1aaaec304e96197b00ad7560d3'],
    }),
]

# can't run tests in sanity check step, because build dependencies must be available
postinstallcmds = [
    "cd %%(builddir)s/jax-jaxlib-v%s && "
    "PYTHONPATH=%%(installdir)s/lib/python%%(pyshortver)s/site-packages:$PYTHONPATH "
    "pytest -n auto tests" % local_jaxlib_ver,
]

sanity_pip_check = True

moduleclass = 'tools'
