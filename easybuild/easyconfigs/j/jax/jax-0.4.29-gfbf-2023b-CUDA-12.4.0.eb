# This file is an EasyBuild reciPY as per https://github.com/easybuilders/easybuild
# Author: Denis Kristak
# Updated by: Alex Domingo (Vrije Universiteit Brussel)
# Updated by: Thomas Hoffmann (EMBL Heidelberg)
easyblock = 'PythonBundle'

name = 'jax'
version = '0.4.29'
versionsuffix = '-CUDA-%(cudaver)s'

homepage = 'https://pypi.python.org/pypi/jax'
description = """Composable transformations of Python+NumPy programs:
differentiate, vectorize, JIT to GPU/TPU, and more"""

toolchain = {'name': 'gfbf', 'version': '2023b'}
cuda_compute_capabilities = ["5.0", "6.0", "6.1", "7.0", "7.5", "8.0", "8.6", "9.0"]

builddependencies = [
    ('Bazel', '6.3.1'),
    ('pytest-xdist', '3.6.1'),
    # git 2.x required to fetch repository 'io_bazel_rules_docker'
    ('git', '2.42.0'),
    ('matplotlib', '3.8.2'),  # required for tests/lobpcg_test.py
    ('poetry', '1.6.1'),
    ('pybind11', '2.11.1'),
]

dependencies = [
    ('CUDA', '12.4.0', '', SYSTEM),
    ('cuDNN', '9.2.0.82', versionsuffix, SYSTEM),
    ('NCCL', '2.20.5', versionsuffix),
    ('zlib', '1.2.13'),
    ('Python', '3.11.5'),
    ('SciPy-bundle', '2023.11'),
    ('flatbuffers-python', '23.5.26'),
    ('ml_dtypes', '0.4.0'),
]

# downloading xla and other tarballs to avoid that Bazel downloads it during the build
# note: this *must* be the exact same commit as used in third_party/{xla,"other"}/workspace.bzl
local_xla_commit = '32ba408c0e2b7ef5f5821c0781601ba17d467076'
#local_tfrt_commit = '0aeefb1660d7e37964b2bb71b1f518096bda9a25'

local_extract_cmd = 'mkdir -p %(builddir)s/archives && cp %s %(builddir)s/archives'
local_repo_opt = '--bazel_options="--distdir=%(builddir)s/archives" '
local_repo_opt += '--bazel_options="--action_env=TF_SYSTEM_LIBS=pybind11" '
local_repo_opt += '--bazel_options="--action_env=CPATH=$EBROOTPYBIND11/include" '


# Some tests require an isolated run:
local_isolated_tests = [
    'tests/host_callback_test.py::HostCallbackTapTest::test_tap_scan_custom_jvp',
    'tests/host_callback_test.py::HostCallbackTapTest::test_tap_transforms_doc',
    'tests/lax_scipy_special_functions_test.py::LaxScipySpcialFunctionsTest' +
    '::testScipySpecialFun_gammainc_s_2x1x4_float32_float32',
]
# deliberately not testing in parallel, as that results in (additional) failing tests;
# use XLA_PYTHON_CLIENT_ALLOCATOR=platform to allocate and deallocate GPU memory during testing,
# see https://github.com/google/jax/issues/7323 and
# https://github.com/google/jax/blob/main/docs/gpu_memory_allocation.rst;
# use CUDA_VISIBLE_DEVICES=0 to avoid failing tests on systems with multiple GPUs;
# use NVIDIA_TF32_OVERRIDE=0 to avoid loosing numerical precision by disabling TF32 Tensor Cores;
local_test_exports = [
    "NVIDIA_TF32_OVERRIDE=0",
    "CUDA_VISIBLE_DEVICES=0",
    "XLA_PYTHON_CLIENT_ALLOCATOR=platform",
    "JAX_ENABLE_X64=true",
]
local_test = ''.join(['export %s;' % x for x in local_test_exports])
# run all tests at once except for local_isolated_tests:
local_test += "pytest -vv tests %s && " % ' '.join(['--deselect %s' % x for x in local_isolated_tests])
# run remaining local_isolated_tests separately: 
local_test += ' && '.join(['pytest -vv %s' % x for x in local_isolated_tests])

use_pip = True

default_easyblock = 'PythonPackage'
default_component_specs = {
    'sources': [SOURCE_TAR_GZ],
    'source_urls': [PYPI_SOURCE],
    'start_dir': '%(name)s-%(version)s',
    'use_pip': True,
    'sanity_pip_check': True,
    'download_dep_fail': True,
}

components = [
    ('absl-py', '2.1.0', {
        'options': {'modulename': 'absl'},
    }),
    ('jaxlib', version, {
        'sources': [
            '%(name)s-v%(version)s.tar.gz',
            {
                'download_filename': '%s.tar.gz' % local_xla_commit,
                'filename': 'xla-%s.tar.gz' % local_xla_commit,
                'extract_cmd': local_extract_cmd,
            },
#            {
#                'download_filename': '%s.tar.gz' % local_tfrt_commit,
#                'filename': 'tf_runtime-%s.tar.gz' % local_tfrt_commit,
#                'extract_cmd': local_extract_cmd,
#            },
        ],
        'source_urls': [
            'https://github.com/google/jax/archive/',
#            'https://github.com/tensorflow/runtime/archive',
            'https://github.com/openxla/xla/archive'
        ],
        'patches': ['jax-0.4.25_fix-pybind11-systemlib.patch'],
        'start_dir': 'jax-jaxlib-v%(version)s',
        # Avoid warning (treated as error) in upb/table.c
        'buildopts': local_repo_opt + ' --bazel_options="--copt=-Wno-maybe-uninitialized"'
    }),
]

exts_list = [
    (name, version, {
        'runtest': local_test,
        'source_tmpl': '%(name)s-v%(version)s.tar.gz',
        'source_urls': ['https://github.com/google/jax/archive/'],
        'patches': ['jax-0.4.29_disable_mosaic_test_print.patch'],
        'checksums': [
            {'jax-v0.4.29.tar.gz': 'bbabbba40f9d87dcedf999cc179b67326f1f0fa135ce7b19fb1101f841d23b5f'},
            {'jax-0.4.29_disable_mosaic_test_print.patch':
             'f170786578d2682b04e3c2d657e66b2c289d67596043587ce1295898f5165b0b'},
        ],
    }),
]

sanity_pip_check = True

moduleclass = 'tools'
