prepend to $PATH rather than append, to avoid picking up system compiler (g++);
see also https://bitbucket.org/berkeleylab/metabat/issues/52

also disable static linking and add missing link options required by libhts.a via pkg-config (-llzma -lbz2 -lcurl & co)

author: Kenneth Hoste (HPC-UGent)
--- berkeleylab-metabat-37db58fe3fda/SConstruct.orig	2017-09-01 07:28:02.000000000 +0200
+++ berkeleylab-metabat-37db58fe3fda/SConstruct	2019-11-26 15:22:10.881115082 +0100
@@ -7,7 +7,7 @@
 def ENV_update(tgt_ENV, src_ENV):
     for K in src_ENV.keys():
         if K in tgt_ENV.keys() and K in [ 'PATH', 'LD_LIBRARY_PATH', 'LIB', 'INCLUDE' ]:
-            tgt_ENV[K]=SCons.Util.AppendPath(tgt_ENV[K], src_ENV[K])
+            tgt_ENV[K]=SCons.Util.PrependPath(tgt_ENV[K], src_ENV[K])
         else:
             tgt_ENV[K]=src_ENV[K]

@@ -27,7 +27,7 @@
 link_flags = ['-lstdc++', '-lm', '-fopenmp']

 if platform.platform(True, True).find('Darwin') == -1:
-    link_flags.extend(['-static', '-static-libgcc', '-static-libstdc++'])
+    link_flags.extend(['-static-libgcc', '-static-libstdc++'])

 if debug is None:
     build_flags.extend(['-O3', '-DNDEBUG', '-Wno-unknown-pragmas', '-Wno-deprecated-declarations', '-Wno-overflow', '-Wno-unused-variable'])
@@ -178,13 +178,17 @@
 if not isOldSamtools:
     findStaticOrShared('hts', hts_lib, sources, linkflags)

+env.ParseConfig("pkg-config --libs --static liblzma")
+env.ParseConfig("pkg-config --libs --static bzip2")
+env.ParseConfig("pkg-config --libs --static libcurl")
+
 ccflags = build_flags
 ccflags.append(hts_flag)
 jgi_summarize_bam_contig_depths = env.Program("jgi_summarize_bam_contig_depths",
                 sources,
                 CCFLAGS=ccflags,
                 CPPPATH=[hts_inc, boost_inc],
-                LIBS=['pthread', 'z'],
+                #LIBS=['pthread', 'z'],
                 LINKFLAGS=linkflags
                 )

@@ -204,7 +208,7 @@
                 CPPPATH=[hts_inc, boost_inc],
                 LINKPATH=[hts_lib, boost_lib],
                 LINKFLAGS=linkflags,
-                LIBS=['z']
+                #LIBS=['z'],
                 )

 test_sum = env.Alias('test_sum', [jgi_summarize_bam_contig_depths],  ' '.join([jgi_summarize_bam_contig_depths[0].abspath, '--outputDepth', test_depth, test_bam]) )
