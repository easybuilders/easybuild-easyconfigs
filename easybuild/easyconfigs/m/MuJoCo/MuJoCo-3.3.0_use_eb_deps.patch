Use "System packages" aka our installed modules

Author: Alexander Grund (TU Dresden)

diff -ur mujoco-orig/cmake/MujocoDependencies.cmake mujoco-3.3.0/cmake/MujocoDependencies.cmake
--- mujoco-orig/cmake/MujocoDependencies.cmake	2025-03-18 17:34:53.241471506 +0100
+++ mujoco-3.3.0/cmake/MujocoDependencies.cmake	2025-03-18 17:36:46.337021313 +0100
@@ -128,9 +128,9 @@
 
 findorfetch(
   USE_SYSTEM_PACKAGE
-  OFF
+  ON
   PACKAGE_NAME
-  qhull
+  Qhull
   LIBRARY_NAME
   qhull
   GIT_REPO
@@ -138,21 +138,26 @@
   GIT_TAG
   ${MUJOCO_DEP_VERSION_qhull}
   TARGETS
-  qhull
+  Qhull::qhull
   EXCLUDE_FROM_ALL
 )
 # MuJoCo includes a file from libqhull_r which is not exported by the qhull include directories.
 # Add it to the target.
-target_include_directories(
-  qhullstatic_r INTERFACE $<BUILD_INTERFACE:${qhull_SOURCE_DIR}/src/libqhull_r>
-)
-target_compile_options(qhullstatic_r PRIVATE ${MUJOCO_MACOS_COMPILE_OPTIONS})
-target_link_options(qhullstatic_r PRIVATE ${MUJOCO_MACOS_LINK_OPTIONS})
+    add_library(qhullstatic_r INTERFACE)
+    set_target_properties(qhullstatic_r PROPERTIES INTERFACE_LINK_LIBRARIES Qhull::qhull_r)
+
+    # Workaround as headers are installed in <prefix>/include/libqhull_r/something.h
+    # but mujoco include them as #include <something.h>
+    get_property(qhull_include_dirs TARGET Qhull::qhull_r PROPERTY INTERFACE_INCLUDE_DIRECTORIES)
+    foreach(qhull_include_dir IN LISTS qhull_include_dirs)
+      target_include_directories(qhullstatic_r INTERFACE ${qhull_include_dirs}/libqhull_r)
+    endforeach()
+    target_include_directories(qhullstatic_r INTERFACE )
 
 set(tinyxml2_BUILD_TESTING OFF)
 findorfetch(
   USE_SYSTEM_PACKAGE
-  OFF
+  ON
   PACKAGE_NAME
   tinyxml2
   LIBRARY_NAME
@@ -162,15 +167,13 @@
   GIT_TAG
   ${MUJOCO_DEP_VERSION_tinyxml2}
   TARGETS
-  tinyxml2
+  tinyxml2::tinyxml2
   EXCLUDE_FROM_ALL
 )
-target_compile_options(tinyxml2 PRIVATE ${MUJOCO_MACOS_COMPILE_OPTIONS})
-target_link_options(tinyxml2 PRIVATE ${MUJOCO_MACOS_LINK_OPTIONS})
 
 findorfetch(
   USE_SYSTEM_PACKAGE
-  OFF
+  ON
   PACKAGE_NAME
   tinyobjloader
   LIBRARY_NAME
@@ -183,15 +186,16 @@
   tinyobjloader
   EXCLUDE_FROM_ALL
 )
+add_library(tinyobjloader ALIAS tinyobjloader::tinyobjloader)
 
 option(SDFLIB_USE_ASSIMP OFF)
 option(SDFLIB_USE_OPENMP OFF)
 option(SDFLIB_USE_ENOKI OFF)
 findorfetch(
   USE_SYSTEM_PACKAGE
-  OFF
+  ON
   PACKAGE_NAME
-  sdflib
+  SdfLib
   LIBRARY_NAME
   sdflib
   GIT_REPO
@@ -202,8 +206,7 @@
   SdfLib
   EXCLUDE_FROM_ALL
 )
-target_compile_options(SdfLib PRIVATE ${MUJOCO_MACOS_COMPILE_OPTIONS})
-target_link_options(SdfLib PRIVATE ${MUJOCO_MACOS_LINK_OPTIONS})
+add_library(SdfLib ALIAS SdfLib::SdfLib)
 
 set(ENABLE_DOUBLE_PRECISION ON)
 set(CCD_HIDE_ALL_SYMBOLS ON)
@@ -249,7 +252,7 @@
   set(ABSL_BUILD_TESTING OFF)
   findorfetch(
     USE_SYSTEM_PACKAGE
-    OFF
+    ON
     PACKAGE_NAME
     absl
     LIBRARY_NAME
@@ -276,7 +279,7 @@
 
   findorfetch(
     USE_SYSTEM_PACKAGE
-    OFF
+    ON
     PACKAGE_NAME
     GTest
     LIBRARY_NAME
@@ -310,7 +313,7 @@
 
   findorfetch(
     USE_SYSTEM_PACKAGE
-    OFF
+    ON
     PACKAGE_NAME
     benchmark
     LIBRARY_NAME
