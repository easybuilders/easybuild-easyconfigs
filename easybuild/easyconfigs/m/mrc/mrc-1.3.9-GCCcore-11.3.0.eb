# Thomas Hoffmann, EMBL Heidelberg, structures-it@embl.de, 2023/07
easyblock = 'CMakeMake'

name = 'mrc'
version = '1.3.9'

homepage = 'https://github.com/mhekkel/mrc'
description = """A long, long time ago there existed an operating system that did things
differently. One of the cool features of this OS was that applications were self
contained. A single file was everything you needed to copy in order to install
a new application instead of having to use installers or install scripts that
put dozens of files at the most obscure locations on your disk.

One of the technical features of this OS to make this possible was what they
called resources. In fact, resources were stored as some kind of database in one
of the two forks of a file, the other fork being the data fork.

Resources were mildly popular, other OS'es copied the concept in one way or
another. The company that invented them abandoned the whole concept though, they
thought they had something better....

Anyway, I still like being able to provide a single executable to the users of
my software. And given the usefulness of resources I decided to create a
compiler for them that works with the ELF executable format. Since using
resource forks is not an option I decided to store the data in the static data
section of an executable. The data is then available through global variables.
"""

toolchain = {'name': 'GCCcore', 'version': '11.3.0'}

source_urls = [GITHUB_SOURCE]
sources = ['v%(version)s.tar.gz']
checksums = ['aed0e2c866f70909eb07f64b4ea49591a291525a278b2c23f1f153a1558cfe0f']

github_account = 'mhekkel'

builddependencies = [
    ('binutils', '2.38'),
    ('CMake', '3.24.3'),
    ('libmcfp', '1.2.4'),
]

sanity_check_paths = {
    'files': ['bin/mrc'],
    'dirs': [],
}

sanity_check_commands = ['mrc -h']

moduleclass = 'tools'
