easyblock = 'CMakeMake'

name = 'Mmg'
version = '5.8.0'

homepage = 'https://www.mmgtools.org/'
description = """
Mmg is an open source software for simplicial remeshing. It provides 3 applications and 4 libraries:
the mmg2d application and the libmmg2d library: adaptation and optimization of a two-dimensional
triangulation and generation of a triangulation from a set of points or from given boundary edges
the mmgs application and the libmmgs library: adaptation and optimization of a surface triangulation
and isovalue discretization the mmg3d application and the libmmg3d library: adaptation and optimization
of a tetrahedral mesh and implicit domain meshing the libmmg library gathering the libmmg2d,
libmmgs and libmmg3d libraries."""

toolchain = {'name': 'gompi', 'version': '2024a'}

source_urls = ['https://github.com/MmgTools/mmg/archive']
sources = ['v%(version)s.tar.gz']
patches = ['%(name)s-5.7.2_fix-test-fail.patch']
checksums = [
    {'v5.8.0.tar.gz': '686eaab84de79c072f3aedf26cd11ced44c84b435d51ce34e016ad203172922f'},
    {'Mmg-5.7.2_fix-test-fail.patch': 'c01cbfadad8c70a8eb3766cc73ab09edd331dda1f445e14c547f28d839c973e6'},
]

builddependencies = [
    ('CMake', '3.29.3'),
    ('Perl', '5.38.2'),
]

dependencies = [('SCOTCH', '7.0.6')]

# common configopts for static, shared library builds
_base_configopts = ' '.join([
    '-DUSE_SCOTCH=ON -DBUILD_TESTING=ON -DONLY_VERY_SHORT_TESTS=ON ',
    '-DTEST_LIBMMG2D=ON -DTEST_LIBMMG3D=ON -DTEST_LIBMMGS=ON ',
    # ensure position independent code generation for static libs
    '-DCMAKE_C_FLAGS="-fPIC ${CMAKE_C_FLAGS}" -DCMAKE_CXX_FLAGS="-fPIC ${CMAKE_CXX_FLAGS}" ',
])

# iterative build for both static and shared libraries
configopts = [' '.join([_base_configopts, x]) for x in ['-DBUILD_SHARED_LIBS=OFF', '-DBUILD_SHARED_LIBS=ON']]

pretestopts = 'export CTEST_PARALLEL_LEVEL=%(parallel)s &&'
runtest = 'test'

sanity_check_paths = {
    'files': [f'bin/{x}_O3' for x in ['mmg2d', 'mmg3d', 'mmgs']] +
             [f'lib/lib{x}.{y}' for x in ['mmg2d', 'mmg3d', 'mmgs', 'mmg'] for y in ['a', SHLIB_EXT]],
    'dirs': [f'include/mmg/{x}' for x in ['mmg2d', 'mmg3d', 'mmgs']]
}

moduleclass = 'math'
