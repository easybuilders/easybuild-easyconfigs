easyblock = 'CMakeMake'

name = 'pod5-file-format'
version = '0.3.10'

homepage = 'https://github.com/nanoporetech/pod5-file-format'
description = """POD5 is a file format for storing nanopore dna data in an easily accessible way.
 The format is able to be written in a streaming manner which allows a sequencing
 instrument to directly write the format."""

toolchain = {'name': 'foss', 'version': '2023a'}

source_urls = ['https://github.com/nanoporetech/%(name)s/archive/']
sources = [{'download_filename': '%(version)s.tar.gz', 'filename': SOURCE_TAR_GZ}]
patches = ['pod5-file-format-0.3.10_dep_fix.patch']
checksums = [
    {'pod5-file-format-0.3.10.tar.gz': 'eb177018b310e508f7ad6b5d486cc29166404dd5f82879d0c26aceaff51d3768'},
    {'pod5-file-format-0.3.10_dep_fix.patch': '20dc87ab82d4b52ff7fb769d17c2478daf95f787b2a184c9d985e33e03038e31'},
]

builddependencies = [
    ('poetry', '1.5.1'),
    ('CMake', '3.26.3'),
    ('pkgconfig', '1.5.5', '-python'),
]

dependencies = [
    ('Python', '3.11.3'),
    ('Python-bundle-PyPI', '2023.06'),
    ('Arrow', '14.0.1'),
    ('SciPy-bundle', '2023.07'),
    ('zstd', '1.5.5'),
    ('flatbuffers', '23.5.26'),
    ('pybind11', '2.11.1'),
    ('Boost', '1.82.0'),
    ('build', '1.0.3'),
    ('HDF5', '1.14.0'),
    ('h5py', '3.9.0'),
    ('tqdm', '4.66.1'),
    ('polars', '0.20.2'),
]

exts_defaultclass = 'PythonPackage'
exts_default_options = {
    'source_urls': [PYPI_SOURCE],
    'download_dep_fail': True,
    'use_pip': True,
    'sanity_pip_check': True,
    'installopts': '',
}

# unpin polars and h5py versions in pod5
local_preinstallopts = (
    "sed -i"
    " -e 's/polars~=0.19/polars/'"
    " -e 's/h5py~=3.10.0/h5py/'"
    " pyproject.toml && "
)

exts_list = [
    ('vbz_h5py_plugin', '1.0.1', {
        'checksums': ['c784458bb0aad6303474cb2f10956179116b35555803fd1154eb4ef362519341'],
    }),
    ('iso8601', '2.1.0', {
        'checksums': ['6b1d3829ee8921c4301998c909f7829fa9ed3cbdac0d3b16af2d743aed1ba8df'],
    }),
    ('pod5', version, {
        'preinstallopts': local_preinstallopts,
        'checksums': ['f2dcb1938fcf51c725393345e480c1d12711089d542a27446fb92fbe2e18ae60'],
    }),
]

# create POD5Version.cmake
# python -m setuptools_scm && python -m pod5_make_version shows wrong version
local_ver_sub_minor = version.split('.')[2]
preconfigopts = (
    'cd %%(builddir)s/%%(name)s-%%(version)s/cmake && '
    'touch POD5Version.cmake && '
    'echo "set(POD5_VERSION_MAJOR %%(version_major)s)">POD5Version.cmake && '
    'echo "set(POD5_VERSION_MINOR %%(version_minor)s)">>POD5Version.cmake && '
    'echo "set(POD5_VERSION_REV %s)">>POD5Version.cmake && '
    'echo "set(POD5_NUMERIC_VERSION %%(version)s)">>POD5Version.cmake && '
    'echo "set(POD5_FULL_VERSION %%(version)s)">>POD5Version.cmake && ' % local_ver_sub_minor
)

# delete add_subdirectory(third_party/pybind11) from CMakeLists.txt
preconfigopts += "cd %(builddir)s/%(name)s-%(version)s && sed -i '/add_subdirectory(third_party/d' CMakeLists.txt && "
preconfigopts += 'cd %(builddir)s/easybuild_obj && '

configopts = ' -DBUILD_PYTHON_WHEEL=ON -DZSTD_LIB="$EBROOTZSTD/lib" -DZSTD_INCLUDE_DIR="$EBROOTZSTD/include"'

# install lib_pod5 from wheel - dependency of pod5
installopts = ' && export XDG_CACHE_HOME=%(builddir)s && cd %(installdir)s'
installopts += ' && pip install --no-deps --ignore-installed --prefix %(installdir)s lib_pod5-%(version)s-*.whl'

postinstallcmds = ['rm %(installdir)s/lib_pod5-%(version)s-*.whl']

sanity_check_paths = {
    'files': ['bin/pod5', 'lib/libpod5_format.a'],
    'dirs': ['include/pod5_format', 'lib/python%(pyshortver)s/site-packages'],
}

sanity_check_commands = [
    "pod5 subset --help",
    "python -c 'import lib_pod5'",
]

modextrapaths = {'PYTHONPATH': 'lib/python%(pyshortver)s/site-packages'}

moduleclass = 'bio'
