# Thomas Hoffmann, EMBL Heidelberg, structures-it@embl.de, 2023/11
easyblock = 'PythonBundle'

name = 'pytorch-3dunet'
version = '1.6.0'
versionsuffix = '-CUDA-%(cudaver)s'

homepage = 'https://github.com/wolny/pytorch-3dunet'
description = """
PyTorch implementation of 3D U-Net and its variants:
 - UNet3D: Standard 3D U-Net based on 3D U-Net: Learning Dense Volumetric          Segmentation from Sparse Annotation 
 - ResidualUNet3D: Residual 3D U-Net based on Superhuman Accuracy on the SNEMI3D
   Connectomics Challenge 
 - ResidualUNetSE3D: Similar to ResidualUNet3D with the addition of Squeeze and 
   Excitation blocks based on Deep Learning Semantic Segmentation for High-     
   Resolution Medical Volumes. Original squeeze and excite paper: Squeeze-and-  
   Excitation Networks
The code allows for training the U-Net for both: semantic segmentation (binary  
and multi-class) and regression problems (e.g. de-noising, learning             
deconvolutions).
"""
toolchain = {'name': 'foss', 'version': '2022a'}

builddependencies = [
    ('pkgconf', '1.8.0'),
    ('cppy', '1.2.1')
]

dependencies = [
    ('Python', '3.10.4'),
    ('SciPy-bundle', '2022.05'),
    ('CUDA', '11.7.0', '', SYSTEM),
    ('PyTorch', '1.12.0', versionsuffix),
    ('h5py', '3.7.0'),
    ('tensorboard', '2.10.0'),
    ('scikit-image', '0.19.3'),
]

use_pip = True
sanity_pip_check = True

github_account = 'wolny'
exts_list = [
    (name, version, {
        'modulename': 'pytorch3dunet',
        'source_urls': [GITHUB_SOURCE],
        'sources': ['%(version)s.tar.gz'],
        'checksums': ['5323eb8a31ad95c17a3e3d83e3de08b0d3cdd0841b28687aa41039355706b659'],
    }),
]

sanity_check_commands = [
    "train3dunet --help",
    "predict3dunet --help"
]

moduleclass = 'ai'
