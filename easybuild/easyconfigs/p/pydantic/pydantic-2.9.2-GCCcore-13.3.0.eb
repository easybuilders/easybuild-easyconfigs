easyblock = 'CargoPythonBundle'

name = 'pydantic'
version = '2.9.2'

homepage = 'https://github.com/samuelcolvin/pydantic'
description = """Data validation and settings management using Python type hinting."""

toolchain = {'name': 'GCCcore', 'version': '13.3.0'}

builddependencies = [
    ('binutils', '2.42'),
    ('Rust', '1.78.0'),
    ('maturin', '1.6.0'),
    ('hatchling', '1.24.2'),
]

dependencies = [
    ('Python', '3.12.3'),
    ('typing-extensions', '4.12.2'),
]

use_pip = True
sanity_pip_check = True

crates = [
    ('ahash', '0.8.11'),
    ('aho-corasick', '1.1.3'),
    ('autocfg', '1.3.0'),
    ('base64', '0.22.1'),
    ('bitflags', '1.3.2'),
    ('bitvec', '1.0.1'),
    ('cc', '1.0.101'),
    ('cfg-if', '1.0.0'),
	('displaydoc', '0.2.5'),
    ('enum_dispatch', '0.3.13'),
    ('equivalent', '1.0.1'),
    ('form_urlencoded', '1.2.1'),
    ('funty', '2.0.0'),
    ('getrandom', '0.2.15'),
    ('hashbrown', '0.14.5'),
    ('heck', '0.5.0'),
	('hex', '0.4.3'),
	('icu_collections', '1.5.0'),
	('icu_locid', '1.5.0'),
	('icu_locid_transform', '1.5.0'),
	('icu_locid_transform_data', '1.5.0'),
	('icu_normalizer', '1.5.0'),
	('icu_normalizer_data', '1.5.0'),
	('icu_properties', '1.5.1'),
	('icu_properties_data', '1.5.0'),
	('icu_provider', '1.5.0'),
	('icu_provider_macros', '1.5.0'),
    ('idna', '0.5.0'),
    ('idna', '1.0.2'),
    ('indexmap', '2.2.6'),
    ('indoc', '2.0.5'),
    ('itoa', '1.0.11'),
    ('jiter', '0.5.0'),
    ('lexical-parse-float', '0.8.5'),
    ('lexical-parse-integer', '0.8.6'),
    ('lexical-util', '0.8.5'),
    ('libc', '0.2.155'),
	('litemap', '0.7.3'),
    ('lock_api', '0.4.10'),
    ('memchr', '2.7.4'),
    ('memoffset', '0.9.1'),
    ('num-bigint', '0.4.6'),
    ('num-integer', '0.1.46'),
    ('num-traits', '0.2.19'),
    ('once_cell', '1.19.0'),
    ('parking_lot', '0.12.1'),
    ('parking_lot_core', '0.9.8'),
    ('percent-encoding', '2.3.1'),
    ('portable-atomic', '1.6.0'),
    ('proc-macro2', '1.0.86'),
    ('pyo3', '0.22.2'),
    ('pyo3-build-config', '0.22.2'),
    ('pyo3-ffi', '0.22.2'),
    ('pyo3-macros', '0.22.2'),
    ('pyo3-macros-backend', '0.22.2'),
    ('python3-dll-a', '0.2.10'),
    ('quote', '1.0.36'),
    ('radium', '0.7.0'),
    ('redox_syscall', '0.3.5'),
    ('regex', '1.10.6'),
    ('regex-automata', '0.4.7'),
    ('regex-syntax', '0.8.4'),
    ('rustversion', '1.0.17'),
    ('ryu', '1.0.18'),
    ('scopeguard', '1.1.0'),
    ('serde', '1.0.209'),
    ('serde_derive', '1.0.209'),
    ('serde_json', '1.0.128'),
    ('smallvec', '1.13.2'),
    ('speedate', '0.14.4'),
    ('stable_deref_trait', '1.2.0'),
    ('static_assertions', '1.1.0'),
    ('strum', '0.26.3'),
    ('strum_macros', '0.26.4'),
    ('syn', '2.0.68'),
	('synstructure', '0.13.1'),
    ('tap', '1.0.1'),
    ('target-lexicon', '0.12.14'),
    ('tinystr', '0.7.6'),
    ('tinyvec', '1.6.1'),
    ('tinyvec_macros', '0.1.1'),
    ('unicode-bidi', '0.3.15'),
    ('unicode-ident', '1.0.12'),
    ('unicode-normalization', '0.1.23'),
    ('unindent', '0.2.3'),
    ('url', '2.5.2'),
	('utf8_iter', '1.0.4'),
	('utf16_iter', '1.0.5'),
    ('uuid', '1.10.0'),
    ('version_check', '0.9.5'),
    ('wasi', '0.11.0+wasi-snapshot-preview1'),
    ('windows-targets', '0.48.1'),
    ('windows_aarch64_gnullvm', '0.48.0'),
    ('windows_aarch64_msvc', '0.48.0'),
    ('windows_i686_gnu', '0.48.0'),
    ('windows_i686_msvc', '0.48.0'),
    ('windows_x86_64_gnu', '0.48.0'),
    ('windows_x86_64_gnullvm', '0.48.0'),
    ('windows_x86_64_msvc', '0.48.0'),
	('write16', '1.0.0'),
	('writeable', '0.5.5'),
    ('wyz', '0.5.1'),
	('yoke', '0.7.4'),
	('yoke-derive', '0.7.4'),
    ('zerocopy', '0.7.34'),
    ('zerocopy-derive', '0.7.34'),
	('zerofrom', '0.1.4'),
	('zerofrom-derive', '0.1.4'),
	('zerovec', '0.10.4'),
	('zerovec-derive', '0.10.3'),
]

exts_list = [
    ('annotated_types', '0.6.0', {
        'checksums': ['563339e807e53ffd9c267e99fc6d9ea23eb8443c08f112651963e24e22f84a5d'],
    }),
    ('pydantic_core', '2.23.4', {
        'checksums': ['2584f7cf844ac4d970fba483a717dbe10c1c1c96a969bf65d61ffe94df1b2863'],
    }),
    (name, version, {
        'preinstallopts': "sed -i '/Framework :: Pydantic/d' pyproject.toml && ",
        'checksums': ['d155cef71265d1e9807ed1c32b4c8deec042a44a50a4188b25ac67ecd81a9c0f'],
    }),
]

moduleclass = 'devel'
