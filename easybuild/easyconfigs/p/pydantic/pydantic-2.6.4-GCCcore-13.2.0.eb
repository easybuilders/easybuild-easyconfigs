easyblock = 'CargoPythonBundle'

name = 'pydantic'
version = '2.6.4'

homepage = 'https://github.com/samuelcolvin/pydantic'
description = """Data validation and settings management using Python type hinting."""

toolchain = {'name': 'GCCcore', 'version': '13.2.0'}

builddependencies = [
    ('binutils', '2.40'),
    ('Rust', '1.76.0'),
    ('maturin', '1.5.0', '-Rust-1.76.0'),
    ('hatchling', '1.18.0'),
]

dependencies = [
    ('Python', '3.11.5'),
    ('typing-extensions', '4.10.0'),
]

use_pip = True
sanity_pip_check = True

crates = [
    ('ahash', '0.8.7'),
    ('aho-corasick', '1.0.2'),
    ('allocator-api2', '0.2.16'),
    ('autocfg', '1.1.0'),
    ('base64', '0.21.7'),
    ('bitflags', '1.3.2'),
    ('cc', '1.0.79'),
    ('cfg-if', '1.0.0'),
    ('enum_dispatch', '0.3.12'),
    ('equivalent', '1.0.1'),
    ('form_urlencoded', '1.2.1'),
    ('getrandom', '0.2.10'),
    ('hashbrown', '0.14.3'),
    ('heck', '0.4.1'),
    ('idna', '0.5.0'),
    ('indexmap', '2.0.0'),
    ('indoc', '2.0.4'),
    ('itoa', '1.0.8'),
    ('jiter', '0.0.6'),
    ('lexical-core', '0.8.5'),
    ('lexical-parse-float', '0.8.5'),
    ('lexical-parse-integer', '0.8.6'),
    ('lexical-util', '0.8.5'),
    ('lexical-write-float', '0.8.5'),
    ('lexical-write-integer', '0.8.5'),
    ('libc', '0.2.147'),
    ('lock_api', '0.4.10'),
    ('memchr', '2.6.3'),
    ('memoffset', '0.9.0'),
    ('num-bigint', '0.4.4'),
    ('num-integer', '0.1.45'),
    ('num-traits', '0.2.16'),
    ('once_cell', '1.18.0'),
    ('parking_lot', '0.12.1'),
    ('parking_lot_core', '0.9.8'),
    ('percent-encoding', '2.3.1'),
    ('proc-macro2', '1.0.76'),
    ('pyo3', '0.20.2'),
    ('pyo3-build-config', '0.20.2'),
    ('pyo3-ffi', '0.20.2'),
    ('pyo3-macros', '0.20.2'),
    ('pyo3-macros-backend', '0.20.2'),
    ('python3-dll-a', '0.2.9'),
    ('quote', '1.0.35'),
    ('redox_syscall', '0.3.5'),
    ('regex', '1.10.2'),
    ('regex-automata', '0.4.3'),
    ('regex-syntax', '0.8.2'),
    ('rustversion', '1.0.13'),
    ('ryu', '1.0.14'),
    ('scopeguard', '1.1.0'),
    ('serde', '1.0.195'),
    ('serde_derive', '1.0.195'),
    ('serde_json', '1.0.109'),
    ('smallvec', '1.11.2'),
    ('speedate', '0.13.0'),
    ('static_assertions', '1.1.0'),
    ('strum', '0.25.0'),
    ('strum_macros', '0.25.3'),
    ('syn', '2.0.48'),
    ('target-lexicon', '0.12.9'),
    ('tinyvec', '1.6.0'),
    ('tinyvec_macros', '0.1.1'),
    ('unicode-bidi', '0.3.13'),
    ('unicode-ident', '1.0.10'),
    ('unicode-normalization', '0.1.22'),
    ('unindent', '0.2.3'),
    ('url', '2.5.0'),
    ('uuid', '1.6.1'),
    ('version_check', '0.9.4'),
    ('wasi', '0.11.0+wasi-snapshot-preview1'),
    ('windows-targets', '0.48.1'),
    ('windows_aarch64_gnullvm', '0.48.0'),
    ('windows_aarch64_msvc', '0.48.0'),
    ('windows_i686_gnu', '0.48.0'),
    ('windows_i686_msvc', '0.48.0'),
    ('windows_x86_64_gnu', '0.48.0'),
    ('windows_x86_64_gnullvm', '0.48.0'),
    ('windows_x86_64_msvc', '0.48.0'),
    ('zerocopy', '0.7.32'),
    ('zerocopy-derive', '0.7.32'),
]

exts_list = [
    ('annotated_types', '0.6.0', {
        'checksums': ['563339e807e53ffd9c267e99fc6d9ea23eb8443c08f112651963e24e22f84a5d'],
    }),
    ('pydantic_core', '2.16.3', {
        'checksums': ['1cac689f80a3abab2d3c0048b29eea5751114054f032a941a32de4c852c59cad'],
    }),
    (name, version, {
        'preinstallopts': "sed -i '/Framework :: Pydantic/d' pyproject.toml && ",
        'checksums': ['b1704e0847db01817624a6b86766967f552dd9dbf3afba4004409f908dcc84e6'],
    }),
]

moduleclass = 'devel'
