easyblock = 'PythonBundle'

name = 'pyMBE'
version = '0.8.0'

homepage = ''
description = """pyMBE: the Python-based Molecule Builder for ESPResSo

pyMBE provides tools to facilitate building up molecules with complex architectures
in the Molecular Dynamics software ESPResSo."""

toolchain = {'name': 'foss', 'version': '2023b'}

builddependencies = [('hatchling', '1.18.0')]

dependencies = [
    ('Python', '3.11.5'),
    ('SciPy-bundle', '2023.11'),
    ('Pint', '0.24'),
    ('tqdm', '4.66.2'),
    ('matplotlib', '3.8.2'),
    ('ESPResSo', '4.2.2'),
]

use_pip = True
# pyMBE is not installable and should just be copied to the installation directory
exts_classmap = {'pyMBE': 'Tarball'}

# pyMBE itself should be the first one in the list,
# otherwise the Tarball easyblock will copy the sources of all extensions to the installation directory
exts_list = [
    (name, version, {
        'source_urls': ['https://github.com/pyMBE-dev/pyMBE/archive/'],
        'sources': [{'download_filename': '%(version)s.tar.gz', 'filename': '%(name)s-%(version)s.tar.gz'}],
        'checksums': ['f143ae655b477d6d2ab6d97190a387fa9c7e854502a38c72c24eac48e37ea663'],
    }),
    ('looseversion', '1.1.2', {
        'checksums': ['94d80bdbd0b6d57c11b886147ba1601f7d1531571621b81933b34537cbe469ad'],
    }),
    ('mmtf-python', '1.1.3', {
        'modulename': 'mmtf',
        'checksums': ['12a02fe1b7131f0a2b8ce45b46f1e0cdd28b9818fe4499554c26884987ea0c32'],
    }),
    ('Pint-Pandas', '0.5', {
        'checksums': ['48ec96d457f802a347763dee1d3e1a273f11f90e4e595df17fd44613dd14a61c'],
    }),
    ('biopandas', '0.5.1.dev0', {
        'checksums': ['6dc9de631babf8221c1ac60230133717039e08911f15e8ac48498c787022de12'],
    }),
]

sanity_pip_check = True

sanity_check_paths = {
    'files': ['pyMBE.py'],
    'dirs': ['figs', 'lib', 'maintainer', 'parameters', 'refs', 'samples', 'testsuite', 'tutorials', 'visualization'],
}

sanity_check_commands = [
    'python -c "import pyMBE"',
    # running the full test suite takes a long time, so just stick to the unit tests
    'cd %(installdir)s && make unit_tests'
]

modextrapaths = {'PYTHONPATH': ['.']}

moduleclass = 'chem'
