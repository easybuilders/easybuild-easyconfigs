test_wrap_bad in distributed/elastic/multiprocessing/api_test fails fails when executed with pytest,
e.g. when running via run_test.py.
Skip it.
See https://github.com/pytorch/pytorch/issues/115069

Author: Alexander Grund (TU Dresden)

diff --git a/test/distributed/elastic/multiprocessing/api_test.py b/test/distributed/elastic/multiprocessing/api_test.py
index 3b44169ae38..b9b9206a528 100644
--- a/test/distributed/elastic/multiprocessing/api_test.py
+++ b/test/distributed/elastic/multiprocessing/api_test.py
@@ -42,6 +42,7 @@ from torch.testing._internal.common_utils import (
     TestCase,
     run_tests,
     sandcastle_skip_if,
+    skip_if_pytest,
 )
 
 
@@ -661,6 +662,7 @@ if not (TEST_WITH_DEV_DBG_ASAN or IS_WINDOWS or IS_MACOS):
 if not (TEST_WITH_DEV_DBG_ASAN or IS_WINDOWS or IS_MACOS or IS_CI):
 
     class StartProcessesNotCITest(StartProcessesTest):
+        @skip_if_pytest
         def test_wrap_bad(self):
             none = ""
             stdout_log = os.path.join(self.test_dir, "stdout.log")
diff --git a/torch/testing/_internal/common_utils.py b/torch/testing/_internal/common_utils.py
index e32850908d4..4087e95fede 100644
--- a/torch/testing/_internal/common_utils.py
+++ b/torch/testing/_internal/common_utils.py
@@ -1277,6 +1277,16 @@ def skipIfTBB(message="This test makes TBB sad"):
     return dec_fn
 
 
+def skip_if_pytest(fn):
+    @functools.wraps(fn)
+    def wrapped(*args, **kwargs):
+        if "PYTEST_CURRENT_TEST" in os.environ:
+            raise unittest.SkipTest("does not work under pytest")
+        return fn(*args, **kwargs)
+
+    return wrapped
+
+
 def slowTest(fn):
     @wraps(fn)
     def wrapper(*args, **kwargs):
