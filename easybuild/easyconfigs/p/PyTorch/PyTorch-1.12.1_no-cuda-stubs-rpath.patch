# PyTorch's CMAKE configuration by default sets RUNPATH on libraries if they link other libraries
# that are outside the build tree, which is done because of the CMAKE config on 
# https://github.com/pytorch/pytorch/blob/v1.10.0/cmake/Dependencies.cmake#L10.
# This provides problems, since the cuda stubs library path then also gets added to the RUNPATH.
# As a result, at runtime, the stub version of things like libcuda.so.1 gets picked up, instead of the real drivers
# See https://github.com/easybuilders/easybuild-easyconfigs/issues/14359
# This line https://github.com/pytorch/pytorch/blob/v1.10.0/cmake/Dependencies.cmake#L16
# Makes sure that any path that is linked, is also added to the RUNPATH.
# This has been reported upstream in https://github.com/pytorch/pytorch/issues/35418
# and a fix was attempted in https://github.com/pytorch/pytorch/pull/37737 but it was reverted
#
# This EasyBuild patch changes behavior for the libraries that were failing, i.e. the ones in this list:
# https://github.com/easybuilders/easybuild-easyconfigs/issues/14359#issuecomment-970479904
# This is done by setting INSTALL_RPATH_USE_LINK_PATH to false, and instead, specifying the RPATH
# explicitely by defining INSTALL_RPATH, but only adding directories that do not match to the "stubs" regex
#
# Original patch: Caspar van Leeuwen
# Updated: Alexander Grund (TU Dresden)
#
# See https://github.com/pytorch/pytorch/pull/87593

diff --git a/caffe2/CMakeLists.txt b/caffe2/CMakeLists.txt
index 328210c978..f06ee0bb4e 100644
--- a/caffe2/CMakeLists.txt
+++ b/caffe2/CMakeLists.txt
@@ -643,13 +643,12 @@ if(NOT INTERN_BUILD_MOBILE OR NOT BUILD_CAFFE2_MOBILE)
   if(USE_CUDA)
     list(APPEND Caffe2_GPU_CU_SRCS ${Caffe2_GPU_HIP_JIT_FUSERS_SRCS})
     add_library(caffe2_nvrtc SHARED ${ATen_NVRTC_STUB_SRCS})
+    include(${Torch_SOURCE_DIR}/cmake/LinkCudaLibraries.cmake)
+    link_cuda_libraries(caffe2_nvrtc ${CUDA_NVRTC} ${CUDA_CUDA_LIB} ${CUDA_NVRTC_LIB})
     if(MSVC)
       # Delay load nvcuda.dll so we can import torch compiled with cuda on a CPU-only machine
-      set(DELAY_LOAD_FLAGS "-DELAYLOAD:nvcuda.dll;delayimp.lib")
-    else()
-      set(DELAY_LOAD_FLAGS "")
+      target_link_libraries(caffe2_nvrtc "-DELAYLOAD:nvcuda.dll;delayimp.lib")
     endif()
-    target_link_libraries(caffe2_nvrtc ${CUDA_NVRTC} ${CUDA_CUDA_LIB} ${CUDA_NVRTC_LIB} ${DELAY_LOAD_FLAGS})
     target_include_directories(caffe2_nvrtc PRIVATE ${CUDA_INCLUDE_DIRS})
     install(TARGETS caffe2_nvrtc DESTINATION "${TORCH_INSTALL_LIB_DIR}")
     if(USE_NCCL)
diff --git a/cmake/LinkCudaLibraries.cmake b/cmake/LinkCudaLibraries.cmake
new file mode 100644
index 0000000000..a24583bff4
--- /dev/null
+++ b/cmake/LinkCudaLibraries.cmake
@@ -0,0 +1,33 @@
+# Link CUDA libraries to the given target, i.e.: `target_link_libraries(target <args>)`
+#
+# Additionally makes sure CUDA stub libs don't end up being in RPath
+#
+# Example: link_cuda_libraries(mytarget PRIVATE ${CUDA_LIBRARIES})
+function(link_cuda_libraries target)
+  set(libs ${ARGN})
+  set(install_rpath "")
+  set(filtered FALSE)
+  foreach(lib IN LISTS libs)
+    # CUDA stub libs are in form /prefix/lib/stubs/libcuda.so
+    # So extract the name of the parent folder, to check against "stubs"
+    # And the parent path which we need to add to the INSTALL_RPATH for non-stubs
+    get_filename_component(parent_path "${lib}" DIRECTORY)
+    get_filename_component(parent_name "${parent_path}" NAME)
+    if(parent_name STREQUAL "stubs")
+      message(STATUS "Filtering ${lib} from being set in ${target}'s RPATH, "
+                     "because it appears to point to the CUDA stubs directory.")
+      set(filtered TRUE)
+    elseif(parent_path)
+      list(APPEND install_rpath ${parent_path})
+    endif()
+  endforeach()
+
+  # Regular link command
+  target_link_libraries(${target} ${scope} ${libs})
+  # Manually set INSTALL_RPATH when there were any stub libs
+  if(filtered)
+    list(REMOVE_DUPLICATES install_rpath)
+    set_target_properties(${target} PROPERTIES INSTALL_RPATH_USE_LINK_PATH FALSE)
+    set_target_properties(${target} PROPERTIES INSTALL_RPATH "${install_rpath}")
+  endif()
+endfunction()
diff --git a/test/cpp/api/CMakeLists.txt b/test/cpp/api/CMakeLists.txt
index 373895a0ce..19868221cb 100644
--- a/test/cpp/api/CMakeLists.txt
+++ b/test/cpp/api/CMakeLists.txt
@@ -58,7 +58,8 @@ if(NOT MSVC)
 endif()
 
 if(USE_CUDA)
-  target_link_libraries(test_api PRIVATE
+  include(${Torch_SOURCE_DIR}/cmake/LinkCudaLibraries.cmake)
+  link_cuda_libraries(test_api PRIVATE
     ${CUDA_LIBRARIES}
     ${CUDA_NVRTC_LIB}
     ${CUDA_CUDA_LIB}
diff --git a/test/cpp/dist_autograd/CMakeLists.txt b/test/cpp/dist_autograd/CMakeLists.txt
index 9969c63e16..356ba5be55 100644
--- a/test/cpp/dist_autograd/CMakeLists.txt
+++ b/test/cpp/dist_autograd/CMakeLists.txt
@@ -10,7 +10,8 @@ if(USE_DISTRIBUTED AND NOT WIN32)
   target_link_libraries(test_dist_autograd PRIVATE torch gtest)
 
   if(USE_CUDA)
-    target_link_libraries(test_dist_autograd PRIVATE
+    include(${Torch_SOURCE_DIR}/cmake/LinkCudaLibraries.cmake)
+    link_cuda_libraries(test_dist_autograd PRIVATE
       ${CUDA_LIBRARIES}
       ${CUDA_NVRTC_LIB}
       ${CUDA_CUDA_LIB}
diff --git a/test/cpp/jit/CMakeLists.txt b/test/cpp/jit/CMakeLists.txt
index 60b43b81fc..57cd4422f8 100644
--- a/test/cpp/jit/CMakeLists.txt
+++ b/test/cpp/jit/CMakeLists.txt
@@ -136,7 +137,8 @@ if(LINUX)
 endif()
 
 if(USE_CUDA)
-  target_link_libraries(test_jit PRIVATE
+  include(${Torch_SOURCE_DIR}/cmake/LinkCudaLibraries.cmake)
+  link_cuda_libraries(test_jit PRIVATE
     ${CUDA_LIBRARIES}
     ${CUDA_NVRTC_LIB}
     ${CUDA_CUDA_LIB}
diff --git a/test/cpp/rpc/CMakeLists.txt b/test/cpp/rpc/CMakeLists.txt
index 3997f8753e..21fddbc645 100644
--- a/test/cpp/rpc/CMakeLists.txt
+++ b/test/cpp/rpc/CMakeLists.txt
@@ -33,7 +33,8 @@ target_include_directories(
 target_link_libraries(test_cpp_rpc PRIVATE ${TORCH_RPC_TEST_DEPENDENCY_LIBS})
 
 if(USE_CUDA)
-  target_link_libraries(test_cpp_rpc PRIVATE
+  include(${Torch_SOURCE_DIR}/cmake/LinkCudaLibraries.cmake)
+  link_cuda_libraries(test_cpp_rpc PRIVATE
     ${CUDA_LIBRARIES}
     ${CUDA_NVRTC_LIB}
     ${CUDA_CUDA_LIB}
diff --git a/test/cpp/tensorexpr/CMakeLists.txt b/test/cpp/tensorexpr/CMakeLists.txt
index 7dff70630d..ecb8300549 100644
--- a/test/cpp/tensorexpr/CMakeLists.txt
+++ b/test/cpp/tensorexpr/CMakeLists.txt
@@ -57,14 +57,15 @@ if(USE_PTHREADPOOL)
   target_link_libraries(test_tensorexpr PRIVATE pthreadpool_interface)
 endif()
 if(USE_CUDA)
-  target_link_libraries(test_tensorexpr PRIVATE
+  include(${Torch_SOURCE_DIR}/cmake/LinkCudaLibraries.cmake)
+  link_cuda_libraries(test_tensorexpr PRIVATE
     ${CUDA_LIBRARIES}
     ${CUDA_NVRTC_LIB}
     ${CUDA_CUDA_LIB}
     ${TORCH_CUDA_LIBRARIES})
   target_compile_definitions(test_tensorexpr PRIVATE USE_CUDA)
 
-  target_link_libraries(tutorial_tensorexpr PRIVATE
+  link_cuda_libraries(tutorial_tensorexpr PRIVATE
     ${CUDA_LIBRARIES}
     ${CUDA_NVRTC_LIB}
     ${CUDA_CUDA_LIB}
