Increase tolerance for two failing tests.  Other similar tests have similar tolerances.

Author: Jakob Schiotz, Tech. Univ. Denmark
Email: schiotz@fysik.dtu.dk
Date: 8. November 2023

Stacktrace:

==================================================================== FAILURES =====================================================================
____________________________________________________ TestOperatorsCPU.test_jvp_pow_cpu_float32 ____________________________________________________
Traceback (most recent call last):
  File "/home/modules/software/Python/3.11.3-GCCcore-12.3.0/lib/python3.11/unittest/case.py", line 57, in testPartExecutor
    yield
  File "/home/modules/software/Python/3.11.3-GCCcore-12.3.0/lib/python3.11/unittest/case.py", line 623, in run
    self._callTestMethod(testMethod)
  File "/home/modules/software/Python/3.11.3-GCCcore-12.3.0/lib/python3.11/unittest/case.py", line 579, in _callTestMethod
    if method() is not None:
       ^^^^^^^^
  File "/tmp/eb-19tah_22/tmplupwseoe/lib/python3.11/site-packages/torch/testing/_internal/common_utils.py", line 2388, in wrapper
    method(*args, **kwargs)
  File "/tmp/eb-19tah_22/tmplupwseoe/lib/python3.11/site-packages/torch/testing/_internal/common_device_type.py", line 415, in instantiated_test
    result = test(self, **param_kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/tmp/eb-19tah_22/tmplupwseoe/lib/python3.11/site-packages/torch/testing/_internal/common_device_type.py", line 908, in test_wrapper
    return test(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/scratch/schiotz/eb_build/PyTorch/2.1.0/foss-2023a/pytorch-v2.1.0/test/functorch/test_ops.py", line 542, in test_jvp
    self.jvp_opinfo_test(outplace_variant, sample,
  File "/scratch/schiotz/eb_build/PyTorch/2.1.0/foss-2023a/pytorch-v2.1.0/test/functorch/test_ops.py", line 594, in jvp_opinfo_test
    self.assertEqual(noncontig_tangent_outs, expected_tangent_outs)
  File "/tmp/eb-19tah_22/tmplupwseoe/lib/python3.11/site-packages/torch/testing/_internal/common_utils.py", line 3285, in assertEqual
    raise error_metas.pop()[0].to_error(
AssertionError: Tensor-likes are not close!

Mismatched elements: 1 / 50 (2.0%)
Greatest absolute difference: 0.00048828125 at index (0, 4) (up to 1e-05 allowed)
Greatest relative difference: 2.396081981714815e-06 at index (0, 4) (up to 1.3e-06 allowed)

To execute this test, run the following from the base repo dir:
     python test/functorch/test_ops.py -k test_jvp_pow_cpu_float32

This message can be suppressed by setting PYTORCH_PRINT_REPRO_ON_FAILURE=0
_________________________________________ TestOperatorsCPU.test_vmapvjpvjp_linalg_tensorsolve_cpu_float32 _________________________________________
Traceback (most recent call last):
  File "/home/modules/software/Python/3.11.3-GCCcore-12.3.0/lib/python3.11/unittest/case.py", line 57, in testPartExecutor
    yield
  File "/home/modules/software/Python/3.11.3-GCCcore-12.3.0/lib/python3.11/unittest/case.py", line 623, in run
    self._callTestMethod(testMethod)
  File "/home/modules/software/Python/3.11.3-GCCcore-12.3.0/lib/python3.11/unittest/case.py", line 579, in _callTestMethod
    if method() is not None:
       ^^^^^^^^
  File "/tmp/eb-19tah_22/tmplupwseoe/lib/python3.11/site-packages/torch/testing/_internal/common_utils.py", line 2388, in wrapper
    method(*args, **kwargs)
  File "/tmp/eb-19tah_22/tmplupwseoe/lib/python3.11/site-packages/torch/testing/_internal/common_device_type.py", line 415, in instantiated_test
    result = test(self, **param_kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/tmp/eb-19tah_22/tmplupwseoe/lib/python3.11/site-packages/torch/testing/_internal/common_device_type.py", line 945, in dep_fn
    return fn(slf, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/tmp/eb-19tah_22/tmplupwseoe/lib/python3.11/site-packages/torch/testing/_internal/common_device_type.py", line 908, in test_wrapper
    return test(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/tmp/eb-19tah_22/tmplupwseoe/lib/python3.11/site-packages/torch/testing/_internal/common_cuda.py", line 161, in wrapped
    return f(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "/scratch/schiotz/eb_build/PyTorch/2.1.0/foss-2023a/pytorch-v2.1.0/test/functorch/test_ops.py", line 878, in test_vmapvjpvjp
    self.assertEqual(loop_out, batched_out)
  File "/tmp/eb-19tah_22/tmplupwseoe/lib/python3.11/site-packages/torch/testing/_internal/common_utils.py", line 3285, in assertEqual
    raise error_metas.pop()[0].to_error(
AssertionError: Tensor-likes are not close!

Mismatched elements: 6 / 288 (2.1%)
Greatest absolute difference: 0.0005550384521484375 at index (0, 2, 1, 0, 2) (up to 0.0001 allowed)
Greatest relative difference: 0.0002498962276149541 at index (0, 1, 0, 0, 2) (up to 0.0001 allowed)

The failure occurred for item [2]

To execute this test, run the following from the base repo dir:
     python test/functorch/test_ops.py -k test_vmapvjpvjp_linalg_tensorsolve_cpu_float32

This message can be suppressed by setting PYTORCH_PRINT_REPRO_ON_FAILURE=0
============================================================= short test summary info =============================================================
FAILED [0.0062s] functorch/test_ops.py::TestOperatorsCPU::test_jvp_pow_cpu_float32 - AssertionError: Tensor-likes are not close!
FAILED [0.2492s] functorch/test_ops.py::TestOperatorsCPU::test_vmapvjpvjp_linalg_tensorsolve_cpu_float32 - AssertionError: Tensor-likes are not ...
================================= 2 failed, 7137 passed, 2274 skipped, 359 xfailed, 4 rerun in 2409.28s (0:40:09) =================================


diff --git a/test/functorch/test_ops.py b/test/functorch/test_ops.py
index 923d75d..f8cbd01 100644
--- a/test/functorch/test_ops.py
+++ b/test/functorch/test_ops.py
@@ -515,6 +515,8 @@ class TestOperators(TestCase):
              {torch.float32: tol(atol=5e-05, rtol=5e-05)}),
         tol1('nn.functional.multi_head_attention_forward',
              {torch.float32: tol(atol=6e-05, rtol=2e-05)}),
+        tol1('pow',
+             {torch.float32: tol(atol=6e-05, rtol=3e-06)}), 
     ))
     def test_jvp(self, device, dtype, op):
         # TODO: get rid of vjp_decomp when we add decomposition support to
@@ -831,6 +833,8 @@ class TestOperators(TestCase):
              {torch.float32: tol(atol=1e-03, rtol=5e-04)}),
         tol1('matrix_exp',
              {torch.float32: tol(atol=1e-03, rtol=5e-04)}),
+        tol1('linalg.tensorsolve',
+             {torch.float32: tol(atol=1e-03, rtol=3e-04)}),
     ))
     @skipOps('TestOperators', 'test_vmapvjpvjp', {
         xfail('as_strided', 'partial_views'),
