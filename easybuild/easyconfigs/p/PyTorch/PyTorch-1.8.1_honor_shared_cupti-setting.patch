PyTorch always uses the statically built CUPTI when found which completely breaks C++ exception handling
Change this to prefer the shared CUPTI

See https://github.com/pytorch/pytorch/issues/57744

Author: Alexander Grund (TU Dresden)

diff --git a/cmake/Dependencies.cmake b/cmake/Dependencies.cmake
index 06464e799a..4bea90c0b4 100644
--- a/cmake/Dependencies.cmake
+++ b/cmake/Dependencies.cmake
@@ -1816,16 +1816,16 @@ if(USE_KINETO)
   message(STATUS "  KINETO_LIBRARY_TYPE = ${KINETO_LIBRARY_TYPE}")
   message(STATUS "  CUDA_SOURCE_DIR = ${CUDA_SOURCE_DIR}")
 
-  if(EXISTS ${CUDA_SOURCE_DIR}/extras/CUPTI/lib64/libcupti_static.a)
-    set(CUDA_cupti_LIBRARY "${CUDA_SOURCE_DIR}/extras/CUPTI/lib64/libcupti_static.a")
-  elseif(EXISTS ${CUDA_SOURCE_DIR}/lib64/libcupti_static.a)
-    set(CUDA_cupti_LIBRARY "${CUDA_SOURCE_DIR}/lib64/libcupti_static.a")
-  elseif(USE_CUPTI_SO)
+  if(USE_CUPTI_SO)
     if(EXISTS ${CUDA_SOURCE_DIR}/extras/CUPTI/lib64/libcupti.so)
       set(CUDA_cupti_LIBRARY "${CUDA_SOURCE_DIR}/extras/CUPTI/lib64/libcupti.so")
     elseif(EXISTS ${CUDA_SOURCE_DIR}/lib64/libcupti.so)
       set(CUDA_cupti_LIBRARY "${CUDA_SOURCE_DIR}/lib64/libcupti.so")
     endif()
+  elseif(EXISTS ${CUDA_SOURCE_DIR}/extras/CUPTI/lib64/libcupti_static.a)
+    set(CUDA_cupti_LIBRARY "${CUDA_SOURCE_DIR}/extras/CUPTI/lib64/libcupti_static.a")
+  elseif(EXISTS ${CUDA_SOURCE_DIR}/lib64/libcupti_static.a)
+    set(CUDA_cupti_LIBRARY "${CUDA_SOURCE_DIR}/lib64/libcupti_static.a")
   endif()
 
   if(EXISTS ${CUDA_SOURCE_DIR}/extras/CUPTI/include)
