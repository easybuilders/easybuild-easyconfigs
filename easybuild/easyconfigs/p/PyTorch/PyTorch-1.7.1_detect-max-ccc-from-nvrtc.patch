

PyTorch missed one place where it needs to check the NVRTC version to determine the maximum
supported CUDA compute capability.

Author: Alexander Grund (TU Dresden)

diff --git a/torch/csrc/jit/codegen/cuda/executor_utils.cpp b/torch/csrc/jit/codegen/cuda/executor_utils.cpp
index 9670968b8f..411fd53739 100644
--- a/torch/csrc/jit/codegen/cuda/executor_utils.cpp
+++ b/torch/csrc/jit/codegen/cuda/executor_utils.cpp
@@ -31,6 +31,38 @@ std::string kernelPreamble() {
 
 namespace {
 
+static void getMajorMinor(
+    const cudaDeviceProp* const prop,
+    int& major,
+    int& minor) {
+  using CudaVersion = std::pair<int, int>;
+  CudaVersion nvrtc_version;
+  AT_CUDA_NVRTC_CHECK(
+      at::globalContext().getNVRTC().nvrtcVersion(&nvrtc_version.first, &nvrtc_version.second));
+
+  AT_ASSERT(nvrtc_version.first >= 6);
+
+  CudaVersion dev_version = CudaVersion(prop->major, prop->minor);
+  CudaVersion max_dev_version(dev_version);
+  if (nvrtc_version.first <= 7) { // 7 supports 2-5.x
+    max_dev_version = CudaVersion(5, 0);
+  } else if (nvrtc_version.first <= 8) { // 8 supports 2-6.x
+    max_dev_version = CudaVersion(6, 0);
+  } else if (nvrtc_version.first <= 9) { // 9 supports 3-7.2
+    max_dev_version = CudaVersion(7, 2);
+  } else if (nvrtc_version.first <= 10) { // 10 supports 3-7.5
+    max_dev_version = CudaVersion(7, 5);
+  } else if (nvrtc_version.first == 11 && nvrtc_version.second == 0) {
+    // 11.0 supports 3-8.0
+    max_dev_version = CudaVersion(8, 0);
+  }
+  if (dev_version > max_dev_version) {
+    dev_version = max_dev_version;
+  }
+  major = dev_version.first;
+  minor = dev_version.second;
+}
+
 // return false if arg's type, number of dimensions, and device, doesn't match
 // param and provided c10:device
 bool validateKernelArgTensor(
@@ -255,8 +287,8 @@ NvrtcFunction nvrtcCompile(
   // Major and minor is determined by device properties and
   // possibly "downcompiled" to a lower (compatible) compute architecture
   // based on the NVRTC version
-  const int major = prop->major;
-  const int minor = prop->minor;
+  int major, minor;
+  getMajorMinor(prop, major, minor);
   nvrtcProgram program;
 
   {
