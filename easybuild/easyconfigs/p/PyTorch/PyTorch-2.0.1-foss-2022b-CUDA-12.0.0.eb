name = 'PyTorch'
version = '2.0.1'
versionsuffix = '-CUDA-%(cudaver)s'

homepage = 'https://pytorch.org/'
description = """Tensors and Dynamic neural networks in Python with strong GPU acceleration.
PyTorch is a deep learning framework that puts Python first."""

toolchain = {'name': 'foss', 'version': '2022b'}

source_urls = [GITHUB_RELEASE]
sources = ['%(namelower)s-v%(version)s.tar.gz']
patches = [
    'PyTorch-1.7.0_disable-dev-shm-test.patch',
    'PyTorch-1.11.1_skip-test_init_from_local_shards.patch',
    'PyTorch-1.12.1_add-hypothesis-suppression.patch',
    'PyTorch-1.12.1_fix-test_cpp_extensions_jit.patch',
    'PyTorch-1.12.1_fix-TestTorch.test_to.patch',
    'PyTorch-1.12.1_skip-test_round_robin.patch',
    'PyTorch-1.13.1_fix-fsdp-tp-integration-test.patch',
    'PyTorch-1.13.1_fix-gcc-12-warning-in-fbgemm.patch',
    'PyTorch-1.13.1_fix-protobuf-dependency.patch',
    'PyTorch-1.13.1_fix-warning-in-test-cpp-api.patch',
    'PyTorch-1.13.1_increase-tolerance-test_jit.patch',
    'PyTorch-1.13.1_increase-tolerance-test_optim.patch',
    'PyTorch-1.13.1_skip-failing-singular-grad-test.patch',
    'PyTorch-1.13.1_skip-tests-without-fbgemm.patch',
    'PyTorch-2.0.1-add-missing-vsx-vector-shift.patch',
    'PyTorch-2.0.1_disable-test-sharding.patch',
    'PyTorch-2.0.1_fix-skip-decorators.patch',
    'PyTorch-2.0.1_fix-test-ops-conf.patch',
    'PyTorch-2.0.1_fix-vsx-loadu.patch',
    'PyTorch-2.0.1_no-cuda-stubs-rpath.patch',
    'PyTorch-2.0.1_remove-test-requiring-online-access.patch',
    #'PyTorch-1.13.1_remove-flaky-test-in-testnn.patch',
    #'PyTorch-1.13.1_skip-failing-grad-test.patch',
]
checksums = [
    {'pytorch-v2.0.1.tar.gz': '9c564ca440265c69400ef5fdd48bf15e28af5aa4bed84c95efaad960a6699998'},
    {'PyTorch-1.7.0_disable-dev-shm-test.patch': '622cb1eaeadc06e13128a862d9946bcc1f1edd3d02b259c56a9aecc4d5406b8a'},
    {'PyTorch-1.11.1_skip-test_init_from_local_shards.patch':
     '4aeb1b0bc863d4801b0095cbce69f8794066748f0df27c6aaaf729c5ecba04b7'},
    {'PyTorch-1.12.1_add-hypothesis-suppression.patch':
     'e71ffb94ebe69f580fa70e0de84017058325fdff944866d6bd03463626edc32c'},
    {'PyTorch-1.12.1_fix-test_cpp_extensions_jit.patch':
     '1efc9850c431d702e9117d4766277d3f88c5c8b3870997c9974971bce7f2ab83'},
    {'PyTorch-1.12.1_fix-TestTorch.test_to.patch': '75f27987c3f25c501e719bd2b1c70a029ae0ee28514a97fe447516aee02b1535'},
    {'PyTorch-1.12.1_skip-test_round_robin.patch': '63d4849b78605aa088fdff695637d9473ea60dee603a3ff7f788690d70c55349'},
    {'PyTorch-1.13.1_fix-fsdp-tp-integration-test.patch':
     '31e2d63b54ae1a8c554575f46db79bf8bbda851b6ca0ffe623c4911207a3c2bc'},
    {'PyTorch-1.13.1_fix-gcc-12-warning-in-fbgemm.patch':
     '5c7be91a6096083a0b1315efe0001537499c600f1f569953c6a2c7f4cc1d0910'},
    {'PyTorch-1.13.1_fix-protobuf-dependency.patch':
     '8bd755a0cab7233a243bc65ca57c9630dfccdc9bf8c9792f0de4e07a644fcb00'},
    {'PyTorch-1.13.1_fix-warning-in-test-cpp-api.patch':
     'bdde0f2105215c95a54de64ec4b1a4520528510663174fef6d5b900eb1db3937'},
    {'PyTorch-1.13.1_increase-tolerance-test_jit.patch':
     'b97913754a0ae0887b8137db0b0d57caff8c3d7bd96fe555ea27ea01ff14527a'},
    {'PyTorch-1.13.1_increase-tolerance-test_optim.patch':
     'a079d824085eab89794f5ecfc67792f735ed8cfd3fe7db52e4dea62e583cfe06'},
    {'PyTorch-1.13.1_skip-failing-singular-grad-test.patch':
     '72688a57b2bb617665ad1a1d5e362c5111ae912c10936bb38a089c0204729f48'},
    {'PyTorch-1.13.1_skip-tests-without-fbgemm.patch':
     '481e595f673baf8ae58b41697a6792b83048b0264aa79b422f48cd8c22948bb7'},
    {'PyTorch-2.0.1-add-missing-vsx-vector-shift.patch':
     '46819fdc3094111dc7adef8ff1c67252d46088aaefdd3096180d7958018dc39f'},
    {'PyTorch-2.0.1_disable-test-sharding.patch': 'a1ed7f21c9a269ea039a07a3d6574f885787b30ca5687143c96e096d31066cca'},
    {'PyTorch-2.0.1_fix-skip-decorators.patch': '2039012cef45446065e1a2097839fe20bb29fe3c1dcc926c3695ebf29832e920'},
    {'PyTorch-2.0.1_fix-test-ops-conf.patch': '0f995e4f89baf3cbeb8666cbfe694666a2ef2bc53d97d6301f768b3ff9001fa4'},
    {'PyTorch-2.0.1_fix-vsx-loadu.patch': 'a0ffa61da2d47c6acd09aaf6d4791e527d8919a6f4f1aa7ed38454cdcadb1f72'},
    {'PyTorch-2.0.1_no-cuda-stubs-rpath.patch': '8902e58a762240f24cdbf0182e99ccdfc2a93492869352fcb4ca0ec7e407f83a'},
    {'PyTorch-2.0.1_remove-test-requiring-online-access.patch':
     '721ab0d35ed0ff8a46cb84ced5a98c0fb8ce6143cf6cea80b1360d3d7f64f584'},
]

osdependencies = [OS_PKG_IBVERBS_DEV]

builddependencies = [
    ('CMake', '3.24.3'),
    ('hypothesis', '6.68.2'),
    # For tests
    ('pytest-rerunfailures', '12.0'),
    ('pytest-shard', '0.1.2'),
]

dependencies = [
    ('CUDA', '12.0.0', '', SYSTEM),
    ('Ninja', '1.11.1'),  # Required for JIT compilation of C++ extensions
    ('Python', '3.10.8'),
    ('protobuf', '23.0'),
    ('protobuf-python', '4.23.0'),
    ('pybind11', '2.10.3'),
    ('SciPy-bundle', '2023.02'),
    ('PyYAML', '6.0'),
    ('MPFR', '4.2.0'),
    ('GMP', '6.2.1'),
    ('numactl', '2.0.16'),
    ('FFmpeg', '5.1.2'),
    ('Pillow', '9.4.0'),
    ('cuDNN', '8.8.0.121', '-CUDA-%(cudaver)s', SYSTEM),
    ('magma', '2.7.1', '-CUDA-%(cudaver)s'),
    ('NCCL', '2.16.2', '-CUDA-%(cudaver)s'),
    ('expecttest', '0.1.3'),
    ('networkx', '3.0'),
    ('sympy', '1.12'),
]

excluded_tests = {
    '': [
        # This test seems to take too long on NVIDIA Ampere at least.
        'distributed/test_distributed_spawn',
        # Broken on CUDA 11.6/11.7: https://github.com/pytorch/pytorch/issues/75375
        'distributions/test_constraints',
        # no xdoctest
        'doctests',
        # failing on broadwell
        # See https://github.com/easybuilders/easybuild-easyconfigs/issues/17712
        'test_native_mha',
        # intermittent failures on various systems
        # See https://github.com/easybuilders/easybuild-easyconfigs/issues/17712
        'distributed/rpc/test_tensorpipe_agent',
    ]
}

runtest = 'cd test && PYTHONUNBUFFERED=1 %(python)s run_test.py --continue-through-error  --verbose %(excluded_tests)s'

# The readelf sanity check command can be taken out once the TestRPATH test from
# https://github.com/pytorch/pytorch/pull/87593 is accepted, since it is then checked as part of the PyTorch test suite
local_libcaffe2 = "$EBROOTPYTORCH/lib/python%%(pyshortver)s/site-packages/torch/lib/libcaffe2_nvrtc.%s" % SHLIB_EXT
sanity_check_commands = [
    "readelf -d %s | egrep 'RPATH|RUNPATH' | grep -v stubs" % local_libcaffe2,
]

# Especially test_quantization has a few corner cases that are triggered by the random input values,
# those cannot be easily avoided, see https://github.com/pytorch/pytorch/issues/107030
# So allow a low number of tests to fail as the tests "usually" succeed
max_failed_tests = 2

tests = ['PyTorch-check-cpp-extension.py']

moduleclass = 'ai'
