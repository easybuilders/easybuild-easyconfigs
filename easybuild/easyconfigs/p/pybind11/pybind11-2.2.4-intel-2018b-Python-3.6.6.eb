easyblock = 'CMakeMake'

name = 'pybind11'
version = '2.2.4'
versionsuffix = '-Python-%(pyver)s'

homepage = 'https://pybind11.readthedocs.io'
description = """pybind11 is a lightweight header-only library that exposes C++ types in Python and vice versa,
 mainly to create Python bindings of existing C++ code."""

toolchain = {'name': 'intel', 'version': '2018b'}

source_urls = ['https://github.com/pybind/pybind11/archive/']
sources = ['v%(version)s.tar.gz']
checksums = ['b69e83658513215b8d1443544d0549b7d231b9f201f6fc787a2b2218b408181e']

builddependencies = [
    ('CMake', '3.12.1'),
    ('Eigen', '3.3.4', '', SYSTEM),
    ('pytest', '3.8.2', versionsuffix),
]
dependencies = [('Python', '3.6.6')]

installopts = " && PYBIND11_USE_CMAKE=1 pip install --prefix %(installdir)s %(builddir)s/%(name)s-%(version)s "

sanity_check_paths = {
    'files': [],
    'dirs': ['include/pybind11', 'lib/python%(pyshortver)s/site-packages/pybind11', 'share/cmake/pybind11'],
}

sanity_check_commands = ["python -c 'import pybind11'"]

modextrapaths = {'PYTHONPATH': 'lib/python%(pyshortver)s/site-packages'}

moduleclass = 'lib'
