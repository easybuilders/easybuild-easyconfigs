##
# Author:    Robert Mijakovic <robert.mijakovic@lxp.lu>
# Updated:   Alexander Grund <alexander.grund@tu-dresden.de>
##

easyblock = 'ConfigureMake'

name = 'PAPI'
version = '7.2.0'
versionsuffix = '-CUDA-%(cudaver)s'

homepage = 'https://icl.cs.utk.edu/projects/papi/'
description = """
 PAPI provides the tool designer and application engineer with a consistent
 interface and methodology for use of the performance counter hardware found
 in most major microprocessors. PAPI enables software engineers to see, in near
 real time, the relation between software performance and processor events.
 In addition Component PAPI provides access to a collection of components
 that expose performance measurement opportunites across the hardware and
 software stack.
"""

toolchain = {'name': 'GCCcore', 'version': '14.2.0'}

source_urls = [
    'https://icl.utk.edu/projects/papi/downloads',  # PAPI website
    'https://github.com/icl-utk-edu/papi/releases/download/papi-7-2-0-t/',  # PAPI GitHub repository
]
sources = [SOURCELOWER_TAR_GZ]
checksums = ['a9bff89ccf39915d729e08ae0a0c6a71ce0ebbe98411e9a2eb3c83c8db0af39c']

builddependencies = [
    ('binutils', '2.42'),
]

dependencies = [
    ('CUDA', '12.8.0', '', SYSTEM),
]

start_dir = 'src'

# Tests require the CUDA path, which is not automatically determined
preconfigopts = 'export PAPI_CUDA_ROOT=$EBROOTCUDA && '
prebuildopts = preconfigopts

# rapl: Energy measurements
# cuda: CUPTI interfaces
# nvml: NVIDIA monitoring interface
configopts = '--with-components="rapl cuda nvml" '

# There is also "fulltest" that is a superset of "test" but hangs on some processors
# indefinitely with a defunct `make` process. So use only "test".
runtest = 'test'

sanity_check_paths = {
    'files': ["bin/papi_%s" % x
              for x in ["avail", "clockres", "command_line", "component_avail",
                        "cost", "decode", "error_codes", "event_chooser",
                        "mem_info", "multiplex_cost", "native_avail",
                        "version", "xml_event_info"]],
    'dirs': [],
}

modextravars = {
    'PAPI_CUDA_ROOT': '$EBROOTCUDA',
}

moduleclass = 'perf'
