# icc and ifort accept -fopenmp flag instead of -openmp..
#
# - 1.3.2019, J. Dvoracek (Institute of Physics | Czech Academy of Sciences, www.fzu.cz
#
--- plc-2.0/waf_tools/try_ifort.py.orig  2015-06-03 14:38:03.000000000 +0200
+++ plc-2.0/waf_tools/try_ifort.py       2019-02-27 13:45:29.215437000 +0100
@@ -53,7 +53,7 @@
     ctx.env.LINKFLAGS_fcshlib = ['-dynamiclib']
   ctx.env.append_value('FCFLAGS',ctx.env.mopt)
   ctx.env["FCFLAGS_fc_omp"]=[]
-  ctx.env.append_value("FCFLAGS_fc_omp","-openmp")
+  ctx.env.append_value("FCFLAGS_fc_omp","-fopenmp")
   ctx.env.FCSHLIB_MARKER = [""]
   ctx.env.FCSTLIB_MARKER = [""]
   ctx.start_msg("Check ifort version") 
@@ -104,7 +104,7 @@
   if sys.platform.lower()=="darwin":
     ctx.env.LINKFLAGS_fcshlib = ['-dynamiclib']
   ctx.env.append_value('FCFLAGS',ctx.env.mopt)
-  ctx.env.append_value("FCFLAGS_fc_omp","-openmp")
+  ctx.env.append_value("FCFLAGS_fc_omp","-fopenmp")
   ctx.env.FCSHLIB_MARKER = [""]
   ctx.env.FCSTLIB_MARKER = [""]


--- plc-2.0/waf_tools/try_icc.py.orig 2015-04-27 17:53:39.000000000 +0200
+++ plc-2.0/waf_tools/try_icc.py      2019-02-27 12:42:00.162259000 +0100
@@ -23,13 +23,16 @@
 def do_icc(ctx):
   ctx.env.CC=[]  
   ctx.env.LINK_CC=[]
+  #patch JD:
+  ctx.env.append_value("LIB_cc_runtime","curl")
+  #end of patch
   ctx.load('icc')
   ctx.check_cc(
       errmsg="failed",msg="Compile a test code with icc",
       mandatory=1,fragment = "#include <stdio.h>\nmain() {fprintf(stderr,\"hello world\");}\n",compile_filename='test.c',features='c cprogram')
   ctx.start_msg("retrieve icc link line")
   ctx.env["CCFLAGS_cc_omp"]=[]
-  ctx.env.append_value("CCFLAGS_cc_omp","-openmp")
+  ctx.env.append_value("CCFLAGS_cc_omp","-fopenmp")
   try:
     #print "%s %s -dryrun -dynamiclib -shared-intel -no-cxxlib dummy.f90"%(ctx.env.FC," ".join(ctx.env.FCFLAGS))
     llgo,llge = ctx.cmd_and_log("%s %s -dryrun -dynamiclib -shared-intel -no-cxxlib dummy.f90"%(ctx.env.CC[0]," ".join(ctx.env.CCFLAGS+ctx.env.CCFLAGS_cc_omp)), output=waflib.Context.BOTH)

