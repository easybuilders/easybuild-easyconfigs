# Thomas Hoffmann, EMBL Heidelberg, structures-it@embl.de, 2025/01
# replace assertEquals by assertEqual
# https://docs.python.org/3/whatsnew/3.12.html#id3
diff -ru bazel-6.5.0/examples/py_native/fail.py bazel-6.5.0_pytest_assertEqual/examples/py_native/fail.py
--- bazel-6.5.0/examples/py_native/fail.py	1980-01-01 00:00:00.000000000 +0100
+++ bazel-6.5.0_pytest_assertEqual/examples/py_native/fail.py	2025-01-24 14:27:22.973336188 +0100
@@ -6,7 +6,7 @@
 class TestGetNumber(unittest.TestCase):
 
   def test_fail(self):
-    self.assertEquals(GetNumber(), 0)
+    self.assertEqual(GetNumber(), 0)
 
 
 if __name__ == '__main__':
diff -ru bazel-6.5.0/examples/py_native/test.py bazel-6.5.0_pytest_assertEqual/examples/py_native/test.py
--- bazel-6.5.0/examples/py_native/test.py	1980-01-01 00:00:00.000000000 +0100
+++ bazel-6.5.0_pytest_assertEqual/examples/py_native/test.py	2025-01-24 14:27:22.973336188 +0100
@@ -8,10 +8,10 @@
 class TestGetNumber(unittest.TestCase):
 
   def test_ok(self):
-    self.assertEquals(GetNumber(), 42)
+    self.assertEqual(GetNumber(), 42)
 
   def test_fib(self):
-    self.assertEquals(Fib(5), 8)
+    self.assertEqual(Fib(5), 8)
 
 if __name__ == '__main__':
   unittest.main()
