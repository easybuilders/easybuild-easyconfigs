easyblock = 'ConfigureMake'

name = 'BerkeleyGW'
version = '2.0.0'

homepage = 'http://www.berkeleygw.org'
description = """The BerkeleyGW Package is a set of computer codes that calculates the quasiparticle
 properties and the optical responses of a large variety of materials from bulk periodic crystals to
 nanostructures such as slabs, wires and molecules."""

toolchain = {'name': 'foss', 'version': '2017b'}
toolchainopts = {'usempi': True, 'openmp': True}

source_urls = ['https://berkeley.box.com/shared/static/']
sources = [{'download_filename': 'wkqu37wu77tll53r8t1soe6ozqja67yy.gz', 'filename': SOURCE_TAR_GZ}]
patches = [
    'BerkeleyGW-2.0.0_fix_path.patch',
]
checksums = [
    '887146cc6598a509a6d2a7b5044d12ebc5a4a2c7b028513f247fe62cf0861563',  # BerkeleyGW-2.0.0.tar.gz
    '132c02d41a3269e00a69b5e5cfc5d6b7954ad4ce142e34f8e57b7c475033cce4',  # BerkeleyGW-2.0.0_fix_path.patch
]

dependencies = [
    ('zlib', '1.2.11'),
    ('HDF5', '1.10.1')
]

skipsteps = ['configure']

prebuildopts = 'cp config/generic.mpi.linux.mk arch.mk && '

buildopts = 'all-flavors COMPFLAG=-DGNU PARAFLAG="-DMPI -DOMP" DEBUGFLAG="" '
buildopts += 'F90free="$MPIF90 -ffree-form -ffree-line-length-none" LINK="$MPIF90" '
buildopts += 'FOPTS="$FFLAGS" MOD_OPT="-J" C_PARAFLAG="-DPARA" CC_COMP="$MPICXX -std=c++0x" C_COMP="$MPICC -std=c99" '
buildopts += 'FCPP="cpp -C -nostdinc " C_LINK="$MPICXX" C_OPTS="$CFLAGS" '
buildopts += 'MATHFLAG="-DUSESCALAPACK -DUNPACKED -DUSEFFTW3 -DHDF5" '
buildopts += 'LAPACKLIB="$LIBLAPACK" BLACSDIR="$BLACS_LIB_DIR" BLACS="$LIBBLACS" SCALAPACKLIB="$LIBSCALAPACK" '
buildopts += 'FFTWINCLUDE="$FFTW_INC_DIR" FFTWLIB="-lfftw3_omp -lfftw3" '
buildopts += 'HDF5INCLUDE="$EBROOTHDF5/include" HDF5LIB="-lhdf5hl_fortran -lhdf5_hl -lhdf5_fortran -lhdf5 -lz" '

# "all-flavors" cleans and compiles everything again
preinstallopts = 'sed -i "s/install: all-flavors/install: all/" Makefile && '

installopts = 'INSTDIR=%(installdir)s'

sanity_check_paths = {
    'files': ['bin/' + p + '.' + f + '.x'
              for p in ['epsilon', 'sigma', 'kernel', 'absorption', 'nonlinearoptics', 'parabands']
              for f in ['real', 'cplx']],
    'dirs': []
}

moduleclass = 'phys'
