easyblock = 'CMakeNinja'

name = 'RStudio-Server'
version = "2023.12.1+402"
versionsuffix = '-Java-%(javaver)s-R-%(rver)s'
local_git_rev = '4da58325ffcff29d157d9264087d4b1ab27f7204'

homepage = 'https://www.rstudio.com/'
description = """This is the RStudio Server version.
RStudio is a set of integrated tools designed to help you be more productive with R.

The server can be started with:
  rserver --server-daemonize=0 --www-port=8787

If you need a database config one can be created with:
  MYTMP=`mktemp -d` && echo -e "provider=sqlite\\ndirectory=${MYTMP}/sqlite" > "${MYTMP}/db.conf"
and then used with:
  rserver ... --database-config-file="${MYTMP}/db.conf"
"""

toolchain = {'name': 'gfbf', 'version': '2023b'}

source_urls = ['https://github.com/rstudio/rstudio/archive']
sources = ['v%(version)s.tar.gz']
checksums = ['196d31094d580a74737fbf689d2d0b302da5fec13694aa1d63f8875d3e45e4dd']

builddependencies = [
    ('ant', '1.10.14', '-Java-%(javaver)s', SYSTEM),
    ('CMake', '3.27.6'),
    ('Ninja', '1.11.1'),
    ('pkgconf', '2.0.3'),
    ('nodejs', '20.9.0'),
]

dependencies = [
    ('Boost', '1.83.0'),
    ('Java', '11', '', SYSTEM),
    ('R', '4.3.3'),
    ('SOCI', '4.0.3'),
    ('yaml-cpp', '0.8.0'),
]

osdependencies = [
    ('pam-devel', 'libpam0g-dev')
]

preconfigopts = " && ".join([
    # Install dependencies via scripts. Done in subshell to preserve PWD
    "(export RSTUDIO_TOOLS_ROOT='%(builddir)s'",
    "cd '%(start_dir)s/dependencies/common'",
    "./install-cef",
    "./install-dictionaries",
    "./install-mathjax",
    "./install-pandoc",
    "./install-packages",
    "./install-panmirror",
    "./install-npm-dependencies)",
    ""
])

configopts = " ".join([
    "-DRSTUDIO_TOOLS_ROOT='%(builddir)s'",
    "-DRSTUDIO_TARGET=Server",
    "-DRSTUDIO_USE_SYSTEM_BOOST=ON",
    "-DRSTUDIO_USE_SYSTEM_SOCI=ON",
    "-DRSTUDIO_USE_SYSTEM_YAML_CPP=ON",
    "-DQUARTO_ENABLED=OFF",  # Not available on all archs, use pandoc fallback
    "-DRSTUDIO_GIT_REVISION_HASH=" + local_git_rev
])

sanity_check_commands = [
    # RSession requires environment variables R_HOME and R_DOC_DIR
    'R_HOME="$EBROOTR/lib64/R" R_DOC_DIR="$R_HOME/doc" rsession --verify-installation=1',
    # RServer requires a db conf (this may also be needed for live use)
    # Also create and set a soem dirs so it doesn't try to use $HOME
    ' '.join([
        'MYTMP=`mktemp -d`',
        '&& export RSTUDIO_CONFIG_DIR="$MYTMP"',
        '&& export XDG_DATA_HOME="$MYTMP/.data"',
        '&& export XDG_CACHE_HOME="$MYTMP/.cache"',
        '&& mkdir "$XDG_DATA_HOME" "$XDG_CACHE_HOME"',
        '&& export RS_LOG_DIR="$MYTMP/log"',
        '&& echo -e "provider=sqlite\\ndirectory=$MYTMP/db" >> "$MYTMP/db.conf"',
        '&& rserver',
        '--verify-installation=1',
        '--server-user="$USER"',
        '--database-config-file="$MYTMP/db.conf"',
        '--server-data-dir="$MYTMP/sdd"',
        '--secure-cookie-key-file="$MYTMP/secure-cookie-key"',
    ]),
]

sanity_check_paths = {
    'files': ['bin/rstudio-server'],
    'dirs': ['bin', 'extras', 'resources', 'www', 'www-symbolmaps', 'R'],
}

moduleclass = 'lang'
