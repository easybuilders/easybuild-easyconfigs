easyblock = 'CMakeMake'

name = 'RStudio-Server'
version = '2022.02.2+485'

homepage = 'https://www.rstudio.com/'
description = """RStudio Server enables you to provide a browser
based interface to a version of R running on a remote Linux
server, bringing the power and productivity of the
RStudio IDE to server-based deployments of R."""

toolchain = {'name': 'foss', 'version': '2021b'}

source_urls = ['https://github.com/rstudio/rstudio/archive/']
sources = ['v%(version)s.tar.gz']
patches = ['%(name)s-1.2.1335-fix_env.patch']
checksums = [
    'a9351fcd3bb4ab1f7d526b289dad06f02800d5b883655d9a49fa4b7c1ce6b299',  # v2022.02.2+485.tar.gz
    'a7b6edab4f5605f5695b5a987f2f1b229e90dbcfcb7a85cc2ea9341e8766941b',  # RStudio-Server-1.2.1335-fix_env.patch
]

builddependencies = [
    ('CMake', '3.22.1'),
    ('pkg-config', '0.29.2'),
    ('nodejs', '14.17.6'),
    ('yaml-cpp', '0.7.0'),
    ('ant', '1.10.11', '-Java-11', True),
    # Only a build dep as the install takes a copy of the binary
    ('Pandoc', '2.18', '', True),
]
dependencies = [
    ('SOCI', '4.0.3'),
    ('Boost', '1.77.0'),
    ('Java', '11', '', True),
    ('R', '4.1.2'),
    ('renv', '0.15.4', '-R-4.1.2'),
]

preconfigopts = "unset JAVA_TOOLS_OPTIONS && "
preconfigopts += "export RSTUDIO_TOOLS_ROOT=%(builddir)s && "

# Fake installation of pandoc which is already a binary install
# (same approach can be taken with quarto once it supports aarch64)
preconfigopts += "mkdir -p %(builddir)s/pandoc && "
preconfigopts += "ln -s $EBROOTPANDOC $RSTUDIO_TOOLS_ROOT/pandoc/2.16.2 && "

# Now do the rest (which unfortunately do downloads)
preconfigopts += "cd %(builddir)s/rstudio-*/dependencies/common && "
# yarn abuses $HOME so let's change it temporarily
preconfigopts += "env HOME=$RSTUDIO_TOOLS_ROOT ./install-cef && "
preconfigopts += "env HOME=$RSTUDIO_TOOLS_ROOT ./install-dictionaries && "
preconfigopts += "env HOME=$RSTUDIO_TOOLS_ROOT ./install-mathjax && "
preconfigopts += "env HOME=$RSTUDIO_TOOLS_ROOT ./install-npm-dependencies && "
preconfigopts += "cd %(builddir)s/rstudio-*/ && "
# Now the main config command
preconfigopts += "env HOME=$RSTUDIO_TOOLS_ROOT "
configopts = "-DCMAKE_BUILD_TYPE=RELEASE "
configopts += "-DRSTUDIO_UNINSTALL_PREVIOUS=On "
configopts += "-DRSTUDIO_USE_SYSTEM_YAML_CPP=On "
configopts += "-DRSTUDIO_TARGET=Server "
configopts += "-DRSTUDIO_BOOST_SIGNALS_VERSION=2 "
# No ARM support for Quarto (yet) so stick to Pandoc
configopts += "-DQUARTO_ENABLED=FALSE "
configopts += "-DSOCI_CORE_LIB=$EBROOTSOCI/lib/libsoci_core.so "
configopts += "-DSOCI_POSTGRESQL_LIB=$EBROOTSOCI/lib/libsoci_postgresql.so "
configopts += "-DSOCI_SQLITE_LIB=$EBROOTSOCI/lib/libsoci_sqlite3.so "

separate_build_dir = False

sanity_check_paths = {
    'files': ['bin/%(namelower)s', 'bin/rsession', 'bin/rserver', 'bin/rserver-pam', 'bin/rpostback'],
    'dirs': ['R', 'resources', 'www', 'www-symbolmaps'],
}

sanity_check_commands = [
    # This command requires environment variables R_HOME and R_DOC_DIR
    "R_HOME=$EBROOTR/lib64/R R_DOC_DIR=$R_HOME/doc rsession --verify-installation=1",
    """MYTMP=$(mktemp -d) && \
    echo -e "provider=sqlite \ndirectory=$MYTMP/db" >> $MYTMP/db.conf && \
    rserver --verify-installation=1 --database-config-file=$MYTMP/db.conf --server-data-dir=$MYTMP/sdd \
    --server-user=$USER""",
]

moduleclass = 'devel'
