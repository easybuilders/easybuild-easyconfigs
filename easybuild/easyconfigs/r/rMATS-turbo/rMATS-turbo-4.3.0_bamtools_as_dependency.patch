# author: Denis Kristak
# this patch makes rMATS take bamtools from official dependencies, not from the downloaded folder
# updated for new version by Samuel Moors (Vrije Universiteit Brussel)
diff -ur rmats-turbo-4.2.0.orig/rMATS_pipeline/setup.py rmats-turbo-4.2.0/rMATS_pipeline/setup.py
--- rmats-turbo-4.2.0.orig/rMATS_pipeline/setup.py	2023-10-18 18:33:06.000000000 +0200
+++ rmats-turbo-4.2.0/rMATS_pipeline/setup.py	2024-01-16 10:59:40.272152202 +0100
@@ -5,15 +5,16 @@
 from Cython.Build import cythonize
 from Cython.Distutils import build_ext
 
-bamtools_include = [os.path.abspath('../bamtools/include'),]
-bamtools_lib = [os.path.abspath('../bamtools/lib'),]
+bamtools_root = os.environ['EBROOTBAMTOOLS']
+bamtools_include = bamtools_root + '/include/bamtools'
+bamtools_lib = bamtools_root + '/lib'
 source_pattern = 'rmatspipeline/%s.pyx'
 
 asevent_ext = [
-    Extension('rmats.rmatspipeline', sources=[source_pattern % "rmatspipeline"],
-              include_dirs=bamtools_include,
+    Extension('rmatspipeline', sources=[source_pattern % "rmatspipeline"],
+              include_dirs=[bamtools_include,],
               libraries=['m','stdc++','bamtools','z'],
-              library_dirs=bamtools_lib,
+              library_dirs=[bamtools_lib,],
               extra_compile_args = ['-O3', '-funroll-loops',
                                     '-std=c++11', '-fopenmp',
                                     '-D__STDC_CONSTANT_MACROS',
@@ -31,7 +32,7 @@
     compiler_directives['legacy_implicit_noexcept'] = True
 
 setup(
-    name = 'rmats.rmatspipeline',
+    name = 'rmatspipeline',
     ext_modules = cythonize(asevent_ext, compiler_directives=compiler_directives),
     cmdclass = {'build_ext': build_ext},
 )
