commit 9f32876aa17f5fe0d08d3866f6d3b7d6414e5cb8
Author: Ake Sandgren <ake.sandgren@hpc2n.umu.se>
Date:   Wed Nov 2 12:36:32 2022 +0100

    Don't use "which" to find the path to the program, it's either in that PATH or not.

diff --git a/src/pipeline_jobs.cpp b/src/pipeline_jobs.cpp
index 280dd271..97434ee7 100644
--- a/src/pipeline_jobs.cpp
+++ b/src/pipeline_jobs.cpp
@@ -624,7 +624,7 @@ bool RelionJob::saveJobSubmissionScript(std::string newfilename, std::string out
 				{
 					// For multiple relion mpi commands: add multiple lines from the XXXcommandXXX template
 					if ((commands[icom]).find("relion_") != std::string::npos &&
-							((commands[icom]).find("_mpi`") != std::string::npos || nmpi==1) ) // if there are no MPI programs, then still use XXXcommandXXX once
+							((commands[icom]).find("_mpi") != std::string::npos || nmpi==1) ) // if there are no MPI programs, then still use XXXcommandXXX once
 					{
 						std::string from = "XXXcommandXXX";
 						std::string to = commands[icom];
@@ -707,7 +707,7 @@ bool RelionJob::prepareFinalCommand(std::string &outputname, std::vector<std::st
 	else
 	{
 		// If there are multiple commands, then join them all on a single line (final_command)
-		// Also add mpirun in front of those commands that have relion_ and _mpi` in it (if no submission via the queue is done)
+		// Also add mpirun in front of those commands that have relion_ and _mpi in it (if no submission via the queue is done)
 		std::string one_command;
 		final_command = "";
 		for (size_t icom = 0; icom < commands.size(); icom++)
@@ -717,7 +717,7 @@ bool RelionJob::prepareFinalCommand(std::string &outputname, std::vector<std::st
 			if (error_message != "") return false;
 
 			if (nr_mpi > 1 &&
-					(commands[icom]).find("_mpi`") != std::string::npos &&
+					(commands[icom]).find("_mpi") != std::string::npos &&
 					(commands[icom]).find("relion_") != std::string::npos)
 			{
 
@@ -1410,9 +1410,9 @@ bool RelionJob::getCommandsMotioncorrJob(std::string &outputname, std::vector<st
 
 	std::string command;
 	if (joboptions["nr_mpi"].getNumber(error_message) > 1)
-		command="`which relion_run_motioncorr_mpi`";
+		command="relion_run_motioncorr_mpi";
 	else
-		command="`which relion_run_motioncorr`";
+		command="relion_run_motioncorr";
 	if (error_message != "") return false;
 
 	// I/O
@@ -1649,9 +1649,9 @@ bool RelionJob::getCommandsCtffindJob(std::string &outputname, std::vector<std::
 	inputNodes.push_back(node2);
 
 	if (joboptions["nr_mpi"].getNumber(error_message) > 1)
-		command="`which relion_run_ctffind_mpi`";
+		command="relion_run_ctffind_mpi";
 	else
-		command="`which relion_run_ctffind`";
+		command="relion_run_ctffind";
 	if (error_message != "") return false;
 
 	command += " --i " + joboptions["input_star_mics"].getString();
@@ -1779,7 +1779,7 @@ bool RelionJob::getCommandsManualpickJob(std::string &outputname, std::vector<st
 	initialisePipeline(outputname, job_counter);
 	std::string command;
 
-	command="`which relion_manualpick`";
+	command="relion_manualpick";
 
 	if (joboptions["fn_in"].getString() == "")
 	{
@@ -1962,7 +1962,7 @@ bool RelionJob::getCommandsAutopickJob(std::string &outputname, std::vector<std:
 
 		label += ".continuemanual";
 
-		command="`which relion_manualpick`";
+		command="relion_manualpick";
 
 		command += " --i " + joboptions["fn_input_autopick"].getString();
 		command += " --odir " + outputname;
@@ -2048,9 +2048,9 @@ bool RelionJob::getCommandsAutopickJob(std::string &outputname, std::vector<std:
 	{
 		// Run autopicking
 		if (joboptions["nr_mpi"].getNumber(error_message) > 1)
-			command="`which relion_autopick_mpi`";
+			command="relion_autopick_mpi";
 		else
-			command="`which relion_autopick`";
+			command="relion_autopick";
 		if (error_message != "") return false;
 
 		// Input
@@ -2364,9 +2364,9 @@ bool RelionJob::getCommandsExtractJob(std::string &outputname, std::vector<std::
 	initialisePipeline(outputname, job_counter);
 	std::string command;
 	if (joboptions["nr_mpi"].getNumber(error_message) > 1)
-		command="`which relion_preprocess_mpi`";
+		command="relion_preprocess_mpi";
 	else
-		command="`which relion_preprocess`";
+		command="relion_preprocess";
 	if (error_message != "") return false;
 
 	// Input
@@ -2628,7 +2628,7 @@ bool RelionJob::getCommandsSelectJob(std::string &outputname, std::vector<std::s
 		label += ".removeduplicates";
 
 		// Remove duplicates
-		command="`which relion_star_handler`";
+		command="relion_star_handler";
 
 		if (joboptions["fn_mic"].getString() != "" || joboptions["fn_model"].getString() != "")
 		{
@@ -2660,7 +2660,7 @@ bool RelionJob::getCommandsSelectJob(std::string &outputname, std::vector<std::s
 	else if (joboptions["do_select_values"].getBoolean() || joboptions["do_discard"].getBoolean() || joboptions["do_split"].getBoolean())
 	{
 		// Value-based selection
-		command="`which relion_star_handler`";
+		command="relion_star_handler";
 
 		if (joboptions["fn_model"].getString() != "")
 		{
@@ -2775,7 +2775,7 @@ bool RelionJob::getCommandsSelectJob(std::string &outputname, std::vector<std::s
 				return false;
 			}
 
-			command = "`which relion_class_ranker`";
+			command = "relion_class_ranker";
 
 			// input
 			command += " --opt " + joboptions["fn_model"].getString();
@@ -2823,7 +2823,7 @@ bool RelionJob::getCommandsSelectJob(std::string &outputname, std::vector<std::s
 			// Interactive selection
 			label += ".interactive";
 
-			command="`which relion_display`";
+			command="relion_display";
 
 			// I/O
 			if (joboptions["fn_model"].getString() != "")
@@ -3016,9 +3016,9 @@ bool RelionJob::getCommandsClass2DJob(std::string &outputname, std::vector<std::
 	std::string command;
 
 	if (joboptions["nr_mpi"].getNumber(error_message) > 1)
-		command="`which relion_refine_mpi`";
+		command="relion_refine_mpi";
 	else
-		command="`which relion_refine`";
+		command="relion_refine";
 	if (error_message != "") return false;
 
 	FileName fn_run = "run";
@@ -3299,7 +3299,7 @@ bool RelionJob::getCommandsInimodelJob(std::string &outputname, std::vector<std:
 	if (error_message != "") return false;
 
 	std::string command;
-	command="`which relion_refine`";
+	command="relion_refine";
 
 	FileName fn_sym = joboptions["sym_name"].getString();
 
@@ -3407,7 +3407,7 @@ bool RelionJob::getCommandsInimodelJob(std::string &outputname, std::vector<std:
 	fn_model+="_model.star";
 
 	// Align with symmetry axes and apply symmetry
-	std::string command2 = "`which relion_align_symmetry`";
+	std::string command2 = "relion_align_symmetry";
 	command2 += " --i " + fn_model;
 	command2 += " --o " + outputname + "initial_model.mrc";
 
@@ -3654,9 +3654,9 @@ bool RelionJob::getCommandsClass3DJob(std::string &outputname, std::vector<std::
 	std::string command;
 
 	if (joboptions["nr_mpi"].getNumber(error_message) > 1)
-		command="`which relion_refine_mpi`";
+		command="relion_refine_mpi";
 	else
-		command="`which relion_refine`";
+		command="relion_refine";
 	if (error_message != "") return false;
 
 	FileName fn_run = "run";
@@ -4105,9 +4105,9 @@ bool RelionJob::getCommandsAutorefineJob(std::string &outputname, std::vector<st
 	std::string command;
 
 	if (joboptions["nr_mpi"].getNumber(error_message) > 1)
-		command="`which relion_refine_mpi`";
+		command="relion_refine_mpi";
 	else
-		command="`which relion_refine`";
+		command="relion_refine";
 	if (error_message != "") return false;
 
 	FileName fn_run = "run";
@@ -4496,9 +4496,9 @@ bool RelionJob::getCommandsMultiBodyJob(std::string &outputname, std::vector<std
 	{
 
 		if (joboptions["nr_mpi"].getNumber(error_message) > 1)
-			command="`which relion_refine_mpi`";
+			command="relion_refine_mpi";
 		else
-			command="`which relion_refine`";
+			command="relion_refine";
 		if (error_message != "") return false;
 
 		MetaDataTable MD;
@@ -4585,7 +4585,7 @@ bool RelionJob::getCommandsMultiBodyJob(std::string &outputname, std::vector<std
 
 	if (joboptions["do_analyse"].getBoolean())
 	{
-		command = "`which relion_flex_analyse`";
+		command = "relion_flex_analyse";
 
 		// If we had performed relion_refine command, then fn_run would be set now
 		// Otherwise, we have to search for _model.star files that do NOT have a _it??? specifier
@@ -4705,7 +4705,7 @@ bool RelionJob::getCommandsMaskcreateJob(std::string &outputname, std::vector<st
 	initialisePipeline(outputname, job_counter);
 	std::string command;
 
-	command="`which relion_mask_create`";
+	command="relion_mask_create";
 
 	// I/O
 	if (joboptions["fn_in"].getString() == "")
@@ -4783,7 +4783,7 @@ bool RelionJob::getCommandsJoinstarJob(std::string &outputname, std::vector<std:
 	commands.clear();
 	initialisePipeline(outputname, job_counter);
 	std::string command;
-	command="`which relion_star_handler`";
+	command="relion_star_handler";
 
 	int ii = 0;
 	if (joboptions["do_part"].getBoolean())
@@ -4971,15 +4971,15 @@ bool RelionJob::getCommandsSubtractJob(std::string &outputname, std::vector<std:
 
 		label += ".revert";
 
-		command = "`which relion_particle_subtract`";
+		command = "relion_particle_subtract";
 		command += " --revert " + joboptions["fn_fliplabel"].getString() + " --o " + outputname;
 	}
 	else
 	{
 		if (joboptions["nr_mpi"].getNumber(error_message) > 1)
-			command="`which relion_particle_subtract_mpi`";
+			command="relion_particle_subtract_mpi";
 		else
-			command="`which relion_particle_subtract`";
+			command="relion_particle_subtract";
 		if (error_message != "") return false;
 
 		// I/O
@@ -5083,7 +5083,7 @@ bool RelionJob::getCommandsPostprocessJob(std::string &outputname, std::vector<s
 	initialisePipeline(outputname, job_counter);
 	std::string command;
 
-	command="`which relion_postprocess`";
+	command="relion_postprocess";
 
 	// Input mask
 	if (joboptions["fn_mask"].getString() == "")
@@ -5292,9 +5292,9 @@ bool RelionJob::getCommandsLocalresJob(std::string &outputname, std::vector<std:
 		label += ".own";
 
 		if (joboptions["nr_mpi"].getNumber(error_message) > 1)
-			command="`which relion_postprocess_mpi`";
+			command="relion_postprocess_mpi";
 		else
-			command="`which relion_postprocess`";
+			command="relion_postprocess";
 		if (error_message != "") return false;
 
 		command += " --locres --i " + joboptions["fn_in"].getString();
@@ -5370,9 +5370,9 @@ bool RelionJob::getCommandsMotionrefineJob(std::string &outputname, std::vector<
 	std::string command;
 
 	if (joboptions["nr_mpi"].getNumber(error_message) > 1)
-		command="`which relion_motion_refine_mpi`";
+		command="relion_motion_refine_mpi";
 	else
-		command="`which relion_motion_refine`";
+		command="relion_motion_refine";
 	if (error_message != "") return false;
 
 	if (joboptions["fn_data"].getString() == "")
@@ -5573,9 +5573,9 @@ bool RelionJob::getCommandsCtfrefineJob(std::string &outputname, std::vector<std
 
 
 	if (joboptions["nr_mpi"].getNumber(error_message) > 1)
-		command="`which relion_ctf_refine_mpi`";
+		command="relion_ctf_refine_mpi";
 	else
-		command="`which relion_ctf_refine`";
+		command="relion_ctf_refine";
 	if (error_message != "") return false;
 
 	if (joboptions["fn_data"].getString() == "")
@@ -5971,7 +5971,7 @@ std::string RelionJob::setTomoOutputCommand(std::string &command, std::string op
 	std::string error_message = "";
 
 	// Create output optimisation set
-	command = "`which relion_tomo_make_optimisation_set`";
+	command = "relion_tomo_make_optimisation_set";
 	command += " --o " + optimisationSetOut;
 
 	if (optimisationSet != "") command += " --i " + optimisationSet;
@@ -6250,9 +6250,9 @@ bool RelionJob::getCommandsTomoSubtomoJob(std::string &outputname, std::vector<s
 	std::string command;
 
 	if (joboptions["nr_mpi"].getNumber(error_message) > 1)
-		command="`which relion_tomo_subtomo_mpi`";
+		command="relion_tomo_subtomo_mpi";
 	else
-		command="`which relion_tomo_subtomo`";
+		command="relion_tomo_subtomo";
 	if (error_message != "") return false;
 
 	// I/O
@@ -6343,9 +6343,9 @@ bool RelionJob::getCommandsTomoCtfRefineJob(std::string &outputname, std::vector
     std::string command;
 
     if (joboptions["nr_mpi"].getNumber(error_message) > 1)
-            command="`which relion_tomo_refine_ctf_mpi`";
+            command="relion_tomo_refine_ctf_mpi";
     else
-            command="`which relion_tomo_refine_ctf`";
+            command="relion_tomo_refine_ctf";
     if (error_message != "") return false;
 
     // I/O
@@ -6450,9 +6450,9 @@ bool RelionJob::getCommandsTomoAlignJob(std::string &outputname, std::vector<std
     std::string command;
 
 	if (joboptions["nr_mpi"].getNumber(error_message) > 1)
-		command="`which relion_tomo_align_mpi`";
+		command="relion_tomo_align_mpi";
 	else
-		command="`which relion_tomo_align`";
+		command="relion_tomo_align";
 	if (error_message != "") return false;
 
 	// I/O
@@ -6575,9 +6575,9 @@ bool RelionJob::getCommandsTomoReconPartJob(std::string &outputname, std::vector
     if (joboptions["do_from2d"].getBoolean())
     {
 		if (joboptions["nr_mpi"].getNumber(error_message) > 1)
-			command="`which relion_tomo_reconstruct_particle_mpi`";
+			command="relion_tomo_reconstruct_particle_mpi";
 		else
-			command="`which relion_tomo_reconstruct_particle`";
+			command="relion_tomo_reconstruct_particle";
 		if (error_message != "") return false;
 
 		// I/O
@@ -6620,7 +6620,7 @@ bool RelionJob::getCommandsTomoReconPartJob(std::string &outputname, std::vector
 		// Estimate FSC
 		if (joboptions["fn_mask"].getString() != "")
 		{
-			command2 = "`which relion_tomo_make_reference`";
+			command2 = "relion_tomo_make_reference";
 			command2 += " --rec "+ outputname;
 			command2 += " --o "+ outputname;
 			command2 += " --mask "+ joboptions["fn_mask"].getString();
@@ -6642,9 +6642,9 @@ bool RelionJob::getCommandsTomoReconPartJob(std::string &outputname, std::vector
 		}
 
 		if (joboptions["nr_mpi"].getNumber(error_message) > 1)
-			command="`which relion_reconstruct_mpi`";
+			command="relion_reconstruct_mpi";
 		else
-			command="`which relion_reconstruct`";
+			command="relion_reconstruct";
 		if (error_message != "") return false;
 
 		Node node(joboptions["in_particles"].getString(), joboptions["in_particles"].node_type);
