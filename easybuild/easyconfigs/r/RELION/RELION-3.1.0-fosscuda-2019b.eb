easyblock = 'CMakeMake'

name = 'RELION'
version = '3.1.0'

homepage = 'http://www2.mrc-lmb.cam.ac.uk/relion/index.php/Main_Page'
description = """RELION (for REgularised LIkelihood OptimisatioN, pronounce rely-on) is a stand-alone computer
 program that employs an empirical Bayesian approach to refinement of (multiple) 3D reconstructions or 2D class
 averages in electron cryo-microscopy (cryo-EM)."""

toolchain = {'name': 'fosscuda', 'version': '2019b'}
toolchainopts = {'openmp': True, 'usempi': True, 'opt': True}

github_account = '3dem'
source_urls = [GITHUB_SOURCE]
sources = ['%(version)s.tar.gz']
patches = ['RELION-3.0.4_drop_usage_of_mpi_include_path.patch']

# Add additional job script templates
# Provided templates are generic examples that should be adapted to each site
local_jobtmpl = ['qsub_torque_gpu.bash', 'sbatch_slurm_gpu.bash']
patches += [(s, '.') for s in local_jobtmpl]

checksums = [
    'fa5ebef27a15f1df856a64dc8960e7c381ff646818f778fe746249d0b7682ba2',  # 3.1.0.tar.gz
    # RELION-3.0.4_drop_usage_of_mpi_include_path.patch
    'c135b72ff8d4c3015a3b293fa07a2283396bfb3fd0658d5e938ec33fca4dcebc',
    '21109648441e477cb08d22108d4d4e0cb76bc02c1e49104b8939156aaae77b3c',  # qsub_torque_gpu.bash
    'ed3621a0e00dc1ed5111db96ee919dbc5fd6de934333e819f0e0159066a156cf',  # sbatch_slurm_gpu.bash
]

builddependencies = [('CMake', '3.15.3')]

dependencies = [
    ('X11', '20190717'),
    ('FLTK', '1.3.5'),
    ('libpng', '1.6.37'),
    ('LibTIFF', '4.0.10'),
    ('tbb', '2019_U9'),
    ('zlib', '1.2.11'),
    ('ctffind', '4.1.14'),       # optional, RELION provides wrapper
    ('MotionCor2', '1.3.2'),     # optional, RELION provides wrapper
    ('Gctf', '1.06', '', True),  # optional, RELION provides wrapper
    ('gnuplot', '5.2.8'),        # optional, RELION provides wrapper
    ('tcsh', '6.22.02'),         # optional, needed by RELION shell
]

# Lowest supported CUDA capability is 3.5
local_cuda_compute_capabilities = ['3.5', '3.7', '5.0', '5.2', '5.3', '6.0', '6.1', '6.2', '7.0']
local_caps = [''.join(x.split('.')) for x in local_cuda_compute_capabilities]
local_cuda_arch = ';'.join(['-gencode arch=compute_%s,code=sm_%s' % (x, x) for x in local_caps])
local_cuda_arch = "%s %s" % (local_caps[0], local_cuda_arch)

configopts = "-DCMAKE_SHARED_LINKER_FLAGS='-lpthread' "
configopts += "-DCUDA=ON -DCudaTexture=ON "
configopts += "-DCUDA_ARCH='" + local_cuda_arch + "'"

local_jobtmpl_path = ['%%(builddir)s/%%(namelower)s-%%(version)s/%s' % s for s in local_jobtmpl]
postinstallcmds = ['cp %s %%(installdir)s/bin/' % s for s in local_jobtmpl_path]

sanity_check_paths = {
    'files': ['bin/relion'] + ['bin/%s' % s for s in local_jobtmpl],
    'dirs': []
}

sanity_check_commands = ["relion --version"]

modextravars = {
    # Common settings
    'RELION_CTFFIND_EXECUTABLE': 'ctffind',
    'RELION_GCTF_EXECUTABLE': 'Gctf',
    'RELION_MOTIONCOR2_EXECUTABLE': 'motioncor2',
    'RELION_SHELL': 'csh',              # Shell used to launch CTFFIND/GCTF in CtfFind jobs

    # Site specific settings
    # 'RELION_QSUB_NRMPI': '4',           # Default for 'Number of MPI procs'
    # 'RELION_MPI_MAX': '20',             # Maximum number of MPI processes available from the GUI
    # 'RELION_ERROR_LOCAL_MPI': '1',      # Maximum number of MPI tasks allowed in an interactive session
    # 'RELION_QSUB_NRTHREADS': '4',       # Default for 'Number of threads'
    # 'RELION_THREAD_MAX': '20',          # Maximum number of threads per MPI process available from the GUI
    # 'RELION_MINIMUM_DEDICATED': '1',    # Default for 'Minimum dedicated cores per node'
    # 'RELION_ALLOW_CHANGE_MINIMUM_DEDICATED': '0',  # Allow user to change the 'Minimum dedicated cores per node'
    # 'RELION_SCRATCH_DIR': '/tmp',       # Default scratch directory in the GUI

    # CHOOSE ONE OF THE FOLLOWING SECTIONS AND ADAPT IT TO YOUR SITE
    # Default scheduler integration
    'RELION_QUEUE_NAME': 'batch',       # Default for 'Queue Name"
    'RELION_QSUB_COMMAND': 'qsub',      # Default for 'Queue submit command'
    'RELION_QSUB_TEMPLATE': '%(installdir)s/bin/qsub.csh',  # Job script template

    # Integration with TORQUE
    # 'RELION_QUEUE_NAME': 'batch',       # Default for 'Queue Name"
    # 'RELION_QSUB_COMMAND': 'qsub',      # Default for 'Queue submit command'
    # 'RELION_QSUB_TEMPLATE': '%(installdir)s/bin/qsub_torque_gpu.bash',  # Job script template
    # 'RELION_QSUB_EXTRA_COUNT': '2',     # Number of extra variables for the job script template
    # 'RELION_QSUB_EXTRA1': "Hours of walltime",
    # 'RELION_QSUB_EXTRA1_DEFAULT': '72',
    # 'RELION_QSUB_EXTRA2': "Number of GPUs",
    # 'RELION_QSUB_EXTRA2_DEFAULT': '1',

    # Integration with SLURM
    # 'RELION_QUEUE_NAME': 'batch',       # Default for 'Queue Name"
    # 'RELION_QSUB_COMMAND': 'sbatch',    # Default for 'Queue submit command'
    # 'RELION_QSUB_TEMPLATE': '%(installdir)s/bin/sbatch_slurm_gpu.bash',  # Job script template
    # 'RELION_QSUB_EXTRA_COUNT': '4',     # Number of extra variables for the job script template
    # 'RELION_QSUB_EXTRA1': "Hours of walltime",
    # 'RELION_QSUB_EXTRA1_DEFAULT': '72',
    # 'RELION_QSUB_EXTRA2': "Account",
    # 'RELION_QSUB_EXTRA2_DEFAULT': '',
    # 'RELION_QSUB_EXTRA3': "Extra batch parameters",
    # 'RELION_QSUB_EXTRA3_DEFAULT': '',
    # 'RELION_QSUB_EXTRA4': "Number of GPUs",
    # 'RELION_QSUB_EXTRA4_DEFAULT': '1',
}

moduleclass = 'bio'
