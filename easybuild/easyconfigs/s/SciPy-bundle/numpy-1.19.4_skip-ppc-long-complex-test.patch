Include a PPC detection for the inaccurate trig functions
See https://github.com/numpy/numpy/issues/15763

Author: Alexander Grund (TU Dresden)

diff --git a/numpy/core/tests/test_umath.py b/numpy/core/tests/test_umath.py
index 7caa4c7f9..68a954898 100644
--- a/numpy/core/tests/test_umath.py
+++ b/numpy/core/tests/test_umath.py
@@ -22,20 +22,25 @@ def on_powerpc():
 
 
 def bad_arcsinh():
-    """The blacklisted trig functions are not accurate on aarch64 for
+    """The blacklisted trig functions are not accurate on aarch64/PPC for
     complex256. Rather than dig through the actual problem skip the
     test. This should be fixed when we can move past glibc2.17
     which is the version in manylinux2014
     """
-    x = 1.78e-10
+    if platform.machine() == 'aarch64':
+        x = 1.78e-10
+    elif on_powerpc():
+        x = 2.16e-10
+    else:
+        return False
     v1 = np.arcsinh(np.float128(x))
     v2 = np.arcsinh(np.complex256(x)).real
     # The eps for float128 is 1-e33, so this is way bigger
     return abs((v1 / v2) - 1.0) > 1e-23
 
-if platform.machine() == 'aarch64' and bad_arcsinh():
+if bad_arcsinh():
     skip_longcomplex_msg = ('Trig functions of np.longcomplex values known to be '
-                            'inaccurate on aarch64 for some compilation '
+                            'inaccurate on aarch64 and PPC for some compilation '
                             'configurations, should be fixed by building on a '
                             'platform using glibc>2.17')
 else:
