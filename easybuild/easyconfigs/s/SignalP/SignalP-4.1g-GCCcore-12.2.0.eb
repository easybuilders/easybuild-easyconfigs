# Original author: Pablo Escobar Lopez
# sciCORE - University of Basel
# SIB Swiss Institute of Bioinformatics 

easyblock = 'Tarball'

name = 'SignalP'
version = '4.1g'

homepage = 'https://services.healthtech.dtu.dk/software.php'
description = """SignalP predicts the presence and location of signal peptide
    cleavage sites in amino acid sequences from different organisms"""

toolchain = {'name': 'GCCcore', 'version': '12.2.0'}

download_instructions = """1.  Open https://services.healthtech.dtu.dk/software.php in your browser.
2.  Follow the link: Protein Sorting > SignalP > Version 4.1g > Linux.  This
    will open a page containing a form to complete.
3.  Complete the form and submit it.  One piece of information you will have to
    supply will be your e-mail address.
4.  You will then receive an e-mail containing a link to a download page.
    Follow this within 4 hours, to open a personal download page in your
    browser.
5.  The download page will contain two links, one for a .txt licence file and
    one for a .tar.gz installation file.  Download the latter.
6.  Move the downloaded file to the EasyBuild sources directory hierarchy,
    typically to .../eb/sources/s/SignalP/.  You may need to create this
    directory first.
7.  Ensure that the downloaded file will be readable to the user who will run
    the build, and that its parent directory is accessible to that user."""
sources = ['%(namelower)s-%(version)s.Linux.tar.gz']
checksums = ['d72d9fcf3c74e92267bb570b02f4a32a0286826eaf165eed046ad70796db9dc1']

dependencies = [('Perl', '5.36.0')]

# We increase the limit on the number of sequences per run
# ($MAX_ALLOWED_ENTRIES) from 20k to 250k; increase it further below if that
# will be insufficient for you.
local_config_cmd_1 = 'mkdir -p %(installdir)s/man1 && mv %(installdir)s/%(namelower)s.1 %(installdir)s/man1'
local_config_cmd_2 = r'''sed -i -e "s|^\(#!/usr/bin/\)\(perl\)$|\1env \2|" '''
local_config_cmd_2 += r'''-e "s|^\(    \$ENV{SIGNALP} = '\).*\(';\)$|\1%(installdir)s\2|" '''
local_config_cmd_2 += r'''-e "s|^\(my \$outputDir = \).*\(;\)$|\1\$ENV{SIGNALP_OUTPUT_DIR} \|\| '/tmp'\2|" '''
local_config_cmd_2 += r'-e "s|^\(my \$MAX_ALLOWED_ENTRIES=\).*\(000;\)$|\1250\2|" %(installdir)s/%(namelower)s'
postinstallcmds = [
    local_config_cmd_1,
    local_config_cmd_2,
]

modextrapaths = {
    'MANPATH': '',
    'PATH': '',
}

sanity_check_paths = {
    'files': ['%(namelower)s'],
    'dirs': ['bin', 'lib'],
}

# These are taken from the file %(installdir)s/signalp-4.1.readme.
# A couple of the sanity checks need to be massaged.
local_check_cmd_1 = 'diff -b <(%(namelower)s -t euk -f short %(installdir)s/test/euk10.fsa) '
local_check_cmd_1 += '%(installdir)s/test/euk10.fsa.short_out'
local_check_cmd_2 = 'diff -b <(%(namelower)s -t euk -f long %(installdir)s/test/euk10.fsa | '
local_check_cmd_2 += r'sed "s|^\(\s*48\s\+D\s\+\)0\.101|\10.100|") '
local_check_cmd_2 += '%(installdir)s/test/euk10.fsa.long_out'
local_check_cmd_3 = 'diff -b <(%(namelower)s -t euk -f all %(installdir)s/test/euk10.fsa | '
local_check_cmd_3 += r'sed "s|^\(\s*48\s\+D\s\+\)0\.101|\10.100|") '
local_check_cmd_3 += '%(installdir)s/test/euk10.fsa.all_out'
local_check_cmd_4 = 'diff -b <(%(namelower)s -t euk -f summary %(installdir)s/test/euk10.fsa) '
local_check_cmd_4 += '%(installdir)s/test/euk10.fsa.summary_out'
sanity_check_commands = [
    local_check_cmd_1,
    local_check_cmd_2,
    local_check_cmd_3,
    local_check_cmd_4,
]

modloadmsg = """
This SignalP build will use an output directory of /tmp by default.  You can
change this by setting the environment variable SIGNALP_OUTPUT_DIR to a
different full directory path."""

moduleclass = 'bio'
