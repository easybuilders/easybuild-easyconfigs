easyblock = 'CMakeMake'

name = 'Siesta'
version = '5.2.2'

homepage = 'https://siesta-project.org/siesta/About/overview.html'

description = """SIESTA is both a method and its computer program implementation, to perform efficient electronic
structure calculations and ab initio molecular dynamics simulations of molecules and solids."""

toolchain = {'name': 'foss', 'version': '2023a'}
toolchainopts = {'usempi': True, 'openmp': True}

source_urls = [
    'https://gitlab.com/siesta-project/siesta/-/releases/%(version)s/downloads/',
    'https://github.com/wannier-developers/wannier90/archive/refs/tags/',
]

sources = [
    'siesta-%(version)s.tar.gz',
    {'download_filename': 'v3.1.0.tar.gz', 'filename': 'wannier90-3.1.0.tar.gz', 'extract_cmd': "cp %s %(builddir)s"},
    {'git_config': {'url': 'https://gitlab.com/siesta-project/ecosystem/',
                    'repo_name': 'elsi_interface',
                    'commit': '512532a42c5e'},
     'filename': 'elsi_interface_512532a42c5e.tar.gz',
     'extract_cmd': "tar xzf %s -C %(builddir)s/siesta-%(version)s/External/ELSI-project"},
]

checksums = [
    '4efc58fd5adb9b8f55234f47d11f89d268524b0d4c003d145d89d803da94a58c',  # siesta-5.2.2.tar.gz
    '40651a9832eb93dec20a8360dd535262c261c34e13c41b6755fa6915c936b254',  # wannier90-3.1.0.tar.gz
    None,  # elsi_interface_512532a42c5e.tar.gz
]

builddependencies = [
    ('Bison', '3.8.2'),
    ('CMake', '3.26.3'),
    ('Doxygen', '1.9.7'),
    ('flex', '2.6.4'),
    ('ruamel.yaml', '0.17.32'),  # for the tests
    ('test-drive', '0.5.0'),
]

dependencies = [
    ('PnetCDF', '1.12.3'),
    ('Simple-DFTD3', '1.2.1'),
    ('flook', '0.8.4'),
    ('libreadline', '8.2'),
    ('libxc', '6.2.2'),
    ('libfdf', '0.5.1'),
    ('libGridXC', '2.0.2'),
    ('libPSML', '2.1.0'),
    ('netCDF-Fortran', '4.6.1'),
]

# tests to skip (out of ~300) because of small differences, Siesta developers say it's ok
local_failing_tests = [
    'newcomm_mpi_np_1',
    'pi3_Runs_Singleton',
    'SpinPolarization-fe_noncol_gga',
    'SpinOrbit-FePt-X-X',
    'SpinOrbit-FePt-offsite',
    'Bands-ge_bands_so',
    'Bands-ge_bands_so_bpoints',
    'Bands-ge_bands_so_fatbands',
    'DensityOfStates-pdos_kp_soc',
    'Functionals-dftu_soc',
    'MiscOptions-bulk_bias',
    'MiscOptions-bulk_bias',
    # openmp
    'SpinPolarization-fe_spin_mpi4_omp',
    'SpinPolarization-fe_spin_directphi_mpi4_omp1',
    'SpinPolarization-fe_noncol_kp_mpi4_omp1',
    'SpinPolarization-fe_noncol_sp_mpi4_omp1',
    'SCFMixing-chargemix_mpi4_omp1',
    'TDDFT-TDDFT_h2o1_omp1',
]

# enable OpenMP
configopts = "-DSIESTA_WITH_OPENMP=ON "

# enable Flook
configopts += "-DSIESTA_WITH_FLOOK=ON -DFLOOK_ROOT=$EBROOTFLOOK -DFLOOK_INCLUDE_DIRS=$EBROOTFLOOK/include "

# enable ELSE and PEXSI
configopts += "-DSIESTA_WITH_ELSI=ON -DSIESTA_WITH_ELSI_PEXSI=ON "

# enable Wannier90 (Siesta patches and builds it itself)
preconfigopts = "export WANNIER90_PACKAGE=%(builddir)s/wannier90-3.1.0.tar.gz && "
configopts += "-DSIESTA_WITH_WANNIER90=ON "

# tests
buildopts = " && export OMP_NUM_THREADS=2 && "
buildopts += "SIESTA_TESTS_VERIFY=1 ctest --output-on-failure -E '%s'" % '|'.join(local_failing_tests)

sanity_check_paths = {
    'files': ['bin/siesta', 'lib/libsiesta.a'],
    'dirs': ['include', 'share'],
}

moduleclass = 'phys'
