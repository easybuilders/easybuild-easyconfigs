Turning off some features that we either don't need or are somewhat complicated to handle the dependencies for.

Ã…ke Sandgren, 20190418
Updated by Samuel Moors, Vrije Universiteit Brussel (VUB)
diff -ur webkitgtk-2.27.4.orig/Source/cmake/GStreamerDefinitions.cmake webkitgtk-2.27.4/Source/cmake/GStreamerDefinitions.cmake
--- webkitgtk-2.27.4.orig/Source/cmake/GStreamerDefinitions.cmake	2019-01-15 11:04:28.000000000 +0100
+++ webkitgtk-2.27.4/Source/cmake/GStreamerDefinitions.cmake	2020-06-05 09:52:30.530479000 +0200
@@ -1,5 +1,5 @@
-WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_VIDEO PUBLIC ON)
-WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_WEB_AUDIO PUBLIC ON)
+WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_VIDEO PUBLIC OFF)
+WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_WEB_AUDIO PUBLIC OFF)
 
 WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_MEDIA_SOURCE PUBLIC ON)
 
diff -ur webkitgtk-2.27.4.orig/Source/cmake/OptionsGTK.cmake webkitgtk-2.27.4/Source/cmake/OptionsGTK.cmake
--- webkitgtk-2.27.4.orig/Source/cmake/OptionsGTK.cmake	2020-01-10 12:39:59.000000000 +0100
+++ webkitgtk-2.27.4/Source/cmake/OptionsGTK.cmake	2020-06-05 10:01:33.412984767 +0200
@@ -81,11 +81,11 @@
 WEBKIT_OPTION_DEFINE(ENABLE_QUARTZ_TARGET "Whether to enable support for the Quartz windowing target." PUBLIC ${GTK3_SUPPORTS_QUARTZ})
 WEBKIT_OPTION_DEFINE(ENABLE_X11_TARGET "Whether to enable support for the X11 windowing target." PUBLIC ${GTK3_SUPPORTS_X11})
 WEBKIT_OPTION_DEFINE(ENABLE_WAYLAND_TARGET "Whether to enable support for the Wayland windowing target." PUBLIC ${GTK3_SUPPORTS_WAYLAND})
-WEBKIT_OPTION_DEFINE(USE_LIBNOTIFY "Whether to enable the default web notification implementation." PUBLIC ON)
-WEBKIT_OPTION_DEFINE(USE_LIBHYPHEN "Whether to enable the default automatic hyphenation implementation." PUBLIC ON)
-WEBKIT_OPTION_DEFINE(USE_LIBSECRET "Whether to enable the persistent credential storage using libsecret." PUBLIC ON)
+WEBKIT_OPTION_DEFINE(USE_LIBNOTIFY "Whether to enable the default web notification implementation." PUBLIC OFF)
+WEBKIT_OPTION_DEFINE(USE_LIBHYPHEN "Whether to enable the default automatic hyphenation implementation." PUBLIC OFF)
+WEBKIT_OPTION_DEFINE(USE_LIBSECRET "Whether to enable the persistent credential storage using libsecret." PUBLIC OFF)
 WEBKIT_OPTION_DEFINE(USE_OPENJPEG "Whether to enable support for JPEG2000 images." PUBLIC ON)
-WEBKIT_OPTION_DEFINE(USE_WOFF2 "Whether to enable support for WOFF2 Web Fonts." PUBLIC ON)
+WEBKIT_OPTION_DEFINE(USE_WOFF2 "Whether to enable support for WOFF2 Web Fonts." PUBLIC OFF)
 WEBKIT_OPTION_DEFINE(USE_WPE_RENDERER "Whether to enable WPE rendering" PUBLIC ON)
 
 # Private options specific to the GTK port. Changing these options is
@@ -123,7 +123,7 @@
 endif ()
 
 if (CMAKE_SYSTEM_NAME MATCHES "Linux" AND NOT EXISTS "/.flatpak-info")
-    WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_BUBBLEWRAP_SANDBOX PUBLIC ON)
+    WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_BUBBLEWRAP_SANDBOX PUBLIC OFF)
 else ()
     WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_BUBBLEWRAP_SANDBOX PUBLIC OFF)
 endif ()
@@ -142,7 +142,7 @@
 WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_ACCELERATED_2D_CANVAS PUBLIC OFF)
 WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_ASYNC_SCROLLING PRIVATE ON)
 WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_DRAG_SUPPORT PUBLIC ON)
-WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_SPELLCHECK PUBLIC ON)
+WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_SPELLCHECK PUBLIC OFF)
 WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_TOUCH_EVENTS PUBLIC ON)
 WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_WEB_CRYPTO PUBLIC ON)
 WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_WEBDRIVER PUBLIC ON)
diff -ur webkitgtk-2.27.4.orig/Source/cmake/WebKitFeatures.cmake webkitgtk-2.27.4/Source/cmake/WebKitFeatures.cmake
--- webkitgtk-2.27.4.orig/Source/cmake/WebKitFeatures.cmake	2020-01-07 12:00:27.000000000 +0100
+++ webkitgtk-2.27.4/Source/cmake/WebKitFeatures.cmake	2020-06-05 10:02:20.060164846 +0200
@@ -137,7 +137,7 @@
     WEBKIT_OPTION_DEFINE(ENABLE_FTPDIR "Toggle FTP Directory support" PRIVATE ON)
     WEBKIT_OPTION_DEFINE(ENABLE_FULLSCREEN_API "Toggle Fullscreen API support" PRIVATE ON)
     WEBKIT_OPTION_DEFINE(ENABLE_GAMEPAD "Toggle Gamepad support" PRIVATE OFF)
-    WEBKIT_OPTION_DEFINE(ENABLE_GEOLOCATION "Toggle Geolocation support" PRIVATE ON)
+    WEBKIT_OPTION_DEFINE(ENABLE_GEOLOCATION "Toggle Geolocation support" PRIVATE OFF)
     WEBKIT_OPTION_DEFINE(ENABLE_INDEXED_DATABASE "Toggle Indexed Database support" PRIVATE ON)
     WEBKIT_OPTION_DEFINE(ENABLE_INDEXED_DATABASE_IN_WORKERS "Toggle support for Indexed Database in workers" PRIVATE ON)
     WEBKIT_OPTION_DEFINE(ENABLE_INPUT_TYPE_COLOR "Toggle Input Type Color support" PRIVATE OFF)
@@ -172,7 +172,7 @@
     WEBKIT_OPTION_DEFINE(ENABLE_MHTML "Toggle MHTML support" PRIVATE OFF)
     WEBKIT_OPTION_DEFINE(ENABLE_MINIBROWSER "Whether to enable MiniBrowser compilation." PRIVATE OFF)
     WEBKIT_OPTION_DEFINE(ENABLE_MOUSE_CURSOR_SCALE "Toggle Scaled mouse cursor support" PRIVATE OFF)
-    WEBKIT_OPTION_DEFINE(ENABLE_NETSCAPE_PLUGIN_API "Toggle Netscape Plugin API support" PRIVATE ON)
+    WEBKIT_OPTION_DEFINE(ENABLE_NETSCAPE_PLUGIN_API "Toggle Netscape Plugin API support" PRIVATE OFF)
     WEBKIT_OPTION_DEFINE(ENABLE_NETWORK_CACHE_SPECULATIVE_REVALIDATION "Toogle network cache speculative revalidation support" PRIVATE OFF)
     WEBKIT_OPTION_DEFINE(ENABLE_NOTIFICATIONS "Toggle Notifications support" PRIVATE ON)
     WEBKIT_OPTION_DEFINE(ENABLE_OFFSCREEN_CANVAS "Toggle OffscreenCanvas support" PRIVATE OFF)
@@ -218,7 +218,7 @@
     WEBKIT_OPTION_DEFINE(ENABLE_WEBGL "Toggle WebGL support" PRIVATE ON)
     WEBKIT_OPTION_DEFINE(ENABLE_WEBGL2 "Toggle WebGL2 support" PRIVATE OFF)
     WEBKIT_OPTION_DEFINE(ENABLE_WEBGPU "Toggle WebGPU support" PRIVATE OFF)
-    WEBKIT_OPTION_DEFINE(ENABLE_WEB_AUDIO "Toggle Web Audio support" PRIVATE ON)
+    WEBKIT_OPTION_DEFINE(ENABLE_WEB_AUDIO "Toggle Web Audio support" PRIVATE OFF)
     WEBKIT_OPTION_DEFINE(ENABLE_WEB_AUTHN "Toggle Web AuthN support" PRIVATE OFF)
     WEBKIT_OPTION_DEFINE(ENABLE_WEB_CRYPTO "Toggle WebCrypto Subtle-Crypto support" PRIVATE ON)
     WEBKIT_OPTION_DEFINE(ENABLE_WEB_PROCESS_SANDBOX "Toggle web process sandbox support" PRIVATE OFF)
diff -ur webkitgtk-2.27.4.orig/Source/WebCore/page/Page.cpp webkitgtk-2.27.4/Source/WebCore/page/Page.cpp
--- webkitgtk-2.27.4.orig/Source/WebCore/page/Page.cpp	2020-01-10 09:39:43.000000000 +0100
+++ webkitgtk-2.27.4/Source/WebCore/page/Page.cpp	2020-06-05 11:39:29.605085135 +0200
@@ -2860,9 +2860,11 @@
 
 void Page::forEachMediaElement(const Function<void(HTMLMediaElement&)>& functor)
 {
+#if ENABLE(VIDEO)
     forEachDocument([&] (Document& document) {
         document.forEachMediaElement(functor);
     });
+#endif
 }
 
 void Page::applicationWillResignActive()
diff -ur webkitgtk-2.27.4.orig/Source/WebKit/UIProcess/API/glib/WebKitProtocolHandler.cpp webkitgtk-2.27.4/Source/WebKit/UIProcess/API/glib/WebKitProtocolHandler.cpp
--- webkitgtk-2.27.4.orig/Source/WebKit/UIProcess/API/glib/WebKitProtocolHandler.cpp	2019-12-23 11:54:11.000000000 +0100
+++ webkitgtk-2.27.4/Source/WebKit/UIProcess/API/glib/WebKitProtocolHandler.cpp	2020-06-05 14:09:18.006058162 +0200
@@ -287,7 +287,14 @@
         "  <td><div class=\"titlename\">Type</div></td>"
         "  <td>%s</td>"
         " </tbody></tr>",
-        PlatformDisplay::sharedDisplay().type() == PlatformDisplay::Type::Wayland ? "Wayland" : "X11");
+#if PLATFORM(WAYLAND)
+        PlatformDisplay::sharedDisplay().type() == PlatformDisplay::Type::Wayland ? "Wayland" :
+#endif
+#if PLATFORM(X11)
+        PlatformDisplay::sharedDisplay().type() == PlatformDisplay::Type::X11 ? "X11" :
+#endif
+        "Unknown"
+    );
 #endif
 
     auto rect = IntRect(screenRect(nullptr));
diff -ur webkitgtk-2.27.4.orig/Source/WebKit/UIProcess/API/glib/WebKitUIClient.cpp webkitgtk-2.27.4/Source/WebKit/UIProcess/API/glib/WebKitUIClient.cpp
--- webkitgtk-2.27.4.orig/Source/WebKit/UIProcess/API/glib/WebKitUIClient.cpp	2020-01-08 14:34:26.000000000 +0100
+++ webkitgtk-2.27.4/Source/WebKit/UIProcess/API/glib/WebKitUIClient.cpp	2020-06-05 15:20:43.720933288 +0200
@@ -144,7 +144,10 @@
     {
         GdkRectangle geometry = { 0, 0, 0, 0 };
         // Position a toplevel window is not supported under wayland.
-        if (WebCore::PlatformDisplay::sharedDisplay().type() != WebCore::PlatformDisplay::Type::Wayland) {
+#if PLATFORM(WAYLAND)
+        if (WebCore::PlatformDisplay::sharedDisplay().type() != WebCore::PlatformDisplay::Type::Wayland)
+#endif
+        {
             gtk_window_get_position(window, &geometry.x, &geometry.y);
             if (geometry.x != targetGeometry->x || geometry.y != targetGeometry->y)
                 return FALSE;
@@ -157,12 +160,12 @@
         RunLoop::current().stop();
         return FALSE;
     }
+#endif
 
     void setWindowFrameTimerFired()
     {
         RunLoop::current().stop();
     }
-#endif
 
     void setWindowFrame(WebPageProxy&, const WebCore::FloatRect& frame) final
     {
@@ -172,7 +175,10 @@
         if (webkit_web_view_is_controlled_by_automation(m_webView) && WebCore::widgetIsOnscreenToplevelWindow(window) && gtk_widget_get_visible(window)) {
             bool needsMove = false;
             // Position a toplevel window is not supported under wayland.
-            if (WebCore::PlatformDisplay::sharedDisplay().type() != WebCore::PlatformDisplay::Type::Wayland) {
+#if PLATFORM(WAYLAND)
+            if (WebCore::PlatformDisplay::sharedDisplay().type() != WebCore::PlatformDisplay::Type::Wayland)
+#endif // PLATFORM(WAYLAND)
+            {
                 if (geometry.x >= 0 && geometry.y >= 0) {
                     int x, y;
                     gtk_window_get_position(GTK_WINDOW(window), &x, &y);
@@ -217,6 +223,17 @@
         if (WebCore::widgetIsOnscreenToplevelWindow(window) && gtk_widget_get_visible(window)) {
             gtk_window_get_position(GTK_WINDOW(window), &geometry.x, &geometry.y);
             gtk_window_get_size(GTK_WINDOW(window), &geometry.width, &geometry.height);
+        } else {
+            GdkRectangle defaultGeometry;
+            webkit_window_properties_get_geometry(webkit_web_view_get_window_properties(m_webView), &defaultGeometry);
+            if ((!defaultGeometry.width || !defaultGeometry.height) && WebCore::widgetIsOnscreenToplevelWindow(window)) {
+                int defaultWidth, defaultHeight;
+                gtk_window_get_default_size(GTK_WINDOW(window), &defaultWidth, &defaultHeight);
+                if (!defaultGeometry.width && defaultWidth != -1)
+                    geometry.width = defaultWidth;
+                if (!defaultGeometry.height && defaultHeight != -1)
+                    geometry.height = defaultHeight;
+            }
         }
         completionHandler(WebCore::FloatRect(geometry));
 #elif PLATFORM(WPE)
