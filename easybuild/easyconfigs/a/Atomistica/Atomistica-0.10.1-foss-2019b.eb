easyblock = 'MakeCp'

name = 'Atomistica'
version = '0.10.1'

homepage = 'http://www.atomistica.org/'
description = """Atomistica is a library of interatomic potentials, including empirical
potentials and non-orthogonal tight-binding.
This module provides the experimental standalone version of Atomistica with MDCORE"""

toolchain = {'name': 'foss', 'version': '2019b'}

github_account = 'Atomistica'
source_urls = [GITHUB_SOURCE]
sources = ['%(version)s.tar.gz']
patches = ['Atomistica-%(version)s_ebenv-makefiles-gnu.patch']
checksums = [
    '8eb32e7e920ab4db062e7a9d924cad598f7aca26b503dfe38b370e83baf8fdab',  # 0.10.1.tar.gz
    '250d1b9efd19a35e3d92a2b57b7bb3fa0e1ee419a17e23cbbc48c8b0439de915',  # Atomistica-0.10.1_ebenv-makefiles-gnu.patch
]

builddependencies = [
    ('libtool', '2.4.6'),
    ('Python', '3.7.4'),
]

dependencies = [
    ('dftd3-lib', '0.9'),
]

start_dir = 'build_standalone'

prebuildopts = "cp Makefile.gnu Makefile &&"

local_defines = "HAVE_FFTW3=1 HAVE_DFTD3=1"
buildopts = "factories %s && make mdcore %s" % (local_defines, local_defines)

files_to_copy = [
    (['mdcore*'], 'bin'),
    (['AUTHORS.md', 'ChangeLog.md', 'README.md', 'LICENSE'], 'share'),
    (['doc/*'], 'share/doc'),
    (['examples/STANDALONE/*'], 'share/examples'),
]

postinstallcmds = ["mv %(installdir)s/bin/mdcore* %(installdir)s/bin/mdcore"]

sanity_check_paths = {
    'files': ['bin/mdcore'],
    'dirs': ['share', 'share/doc', 'share/examples'],
}

moduleclass = 'chem'
