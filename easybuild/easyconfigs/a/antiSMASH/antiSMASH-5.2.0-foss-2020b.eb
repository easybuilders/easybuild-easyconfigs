easyblock = 'PythonBundle'

name = 'antiSMASH'
version = '5.2.0'

homepage = 'https://github.com/antismash/antismash'
description = """antiSMASH allows the rapid genome-wide identification, annotation and analysis of secondary
 metabolite biosynthesis gene clusters in bacterial and fungal genomes."""

docurls = ['https://docs.antismash.secondarymetabolites.org']

toolchain = {'name': 'foss', 'version': '2020b'}

dependencies = [
    ('libxml2', '2.9.10'),
    ('libxslt', '1.1.34'),
    ('zlib', '1.2.11'),
    ('Python', '3.8.6'),
    ('SciPy-bundle', '2020.11'),
    ('DIAMOND', '2.0.7'),
    ('FastTree', '2.1.11'),
    ('GlimmerHMM', '3.0.4c'),
    ('HMMER2', '2.3.2'),
    ('HMMER', '3.3.2'),
    ('MUSCLE', '3.8.31'),
    ('BLAST+', '2.11.0'),
    ('prodigal', '2.6.3'),
    ('Biopython', '1.78'),
    ('matplotlib', '3.3.3'),
    ('scikit-learn', '0.23.2'),
]

# install MEME as a component in this installation,
# since antiSMASH requires very specific old version
# see https://docs.antismash.secondarymetabolites.org/install/#full-manual-install
components = [
    ('MEME', '4.11.2', {
        'source_urls': ['http://meme-suite.org/meme-software/%(version)s/'],
        'sources': ['meme_%(version)s_2.tar.gz'],
        'checksums': ['377238c2a9dda64e01ffae8ecdbc1492c100df9b0f84132d50c1cf2f68921b22'],
        'easyblock': 'ConfigureMake',
        'start_dir': 'meme_%(version)s',
        'buildopts': 'CFLAGS="$CFLAGS -std=gnu89 -DUNIX -D__USE_FIXED_PROTOTYPES__ -fcommon"',
    }),
]

use_pip = True

exts_list = [
    ('helperlibs', '0.2.1', {
        'checksums': ['4ec2a0c17fdb75c42c692c5ec582580c14490c31235af5858ec12ad308265732'],
    }),
    ('pysvg-py3', '0.2.2.post3', {
        'modulename': 'pysvg',
        'checksums': ['a1183aa5d89871298c11f25d28640edc3798b6ed1e2b2a95c30d35985d6431d0'],
    }),
    ('bcbio-gff', '0.6.6', {
        'modulename': 'BCBio.GFF',
        'checksums': ['74c6920c91ca18ed9cb872e9471c0be442dad143d8176345917eb1fefc86bc37'],
    }),
    ('pyScss', '1.3.7', {
        'modulename': 'scss',
        'checksums': ['f1df571569021a23941a538eb154405dde80bed35dc1ea7c5f3e18e0144746bf'],
    }),
    (name, version, {
        'source_urls': ['https://github.com/antismash/antismash/archive/'],
        'source_tmpl': '%s.tar.gz' % '-'.join(version.split('.')),
        'patches': ['antiSMASH-%(version)s_Biopython-1.78.patch'],
        'checksums': [
            'a6fae892e46fd945701dda4640d07467e2d0ab37913d29da403127833bc77291',  # 5-2-0.tar.gz
            '4ca5d671085761c5f86719603fa3bbd0e82b7b52deefe8cac6eb4a3973825f16',  # antiSMASH-5.2.0_Biopython-1.78.patch
        ],
        # use http mirrors for ftp URLs
        'preinstallopts': "sed -i 's/ftp:/http:/g' antismash/download_databases.py && ",
        # run additional commands to download databases and check prerequisites,
        # which creates some missing .pkl files (which requires the databases);
        # this is not done by default because the resulting installation is pretty big (~18GB)
        # 'postinstallcmds': [
        #     "download-antismash-databases",
        #     # check prerequisites, which also creates some missing .pkl files in the installation...
        #     "antismash --check-prereqs",
        # ],
    }),
]

sanity_check_paths = {
    'files': ['bin/antismash', 'bin/meme'],
    'dirs': [
        # antismash/databases subdirectory is only populated when postinstallcmds above are commented out
        # 'lib/python%(pyshortver)s/site-packages/antismash/databases',
    ],
}

sanity_check_commands = [
    # 'meme -h' exits with non-zero exit status, so use 'grep' to check for pattern
    "meme -h 2>&1 | grep 'Usage:[ \t]*meme'",
    "antismash --version",
]

sanity_pip_check = True

moduleclass = 'bio'
