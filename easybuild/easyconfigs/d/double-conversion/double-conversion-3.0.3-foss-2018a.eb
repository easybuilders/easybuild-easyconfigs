# NOTE:
#    This does use the system compiler if any and WILL fail if no system compiler exists.
#    Dependents may or may not be able to find this, e.g. Qt will silently fallback to a version included in Qt
#    For future ECs use the CMake based build
easyblock = 'SCons'

name = 'double-conversion'
version = '3.0.3'

homepage = 'https://github.com/google/double-conversion'
description = "Efficient binary-decimal and decimal-binary conversion routines for IEEE doubles."

toolchain = {'name': 'foss', 'version': '2018a'}

source_urls = ['https://github.com/google/%(name)s/archive']
sources = ['v%(version)s.tar.gz']
checksums = ['ac84e00c19fdb5ee20c01feb18b0fa2e938bf4b8cf71d43bab62502c8b65420a']

builddependencies = [
    ('SCons', '3.0.1', '-Python-3.6.4'),
]

installopts = "DESTDIR=%(installdir)s prefix='' && "
installopts += "mkdir %(installdir)s/include && cp double-conversion/*.h %(installdir)s/include"

sanity_check_paths = {
    'files': ['include/double-conversion.h', 'include/utils.h', 'lib/libdouble-conversion.a',
              'lib/libdouble-conversion.%s' % SHLIB_EXT, 'lib/libdouble-conversion_pic.a'],
    'dirs': [],
}

moduleclass = 'lib'
