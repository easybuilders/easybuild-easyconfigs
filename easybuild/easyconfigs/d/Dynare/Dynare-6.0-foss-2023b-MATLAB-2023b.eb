# This EC is only for Dynare with neither Octave nor Matlab in it. 
# Changing the local_mlver string will load a different MATLAB version
# Author: J. Sassmannshausen (Imperial College London/UK)

easyblock = 'MesonNinja'

name = 'Dynare'
version = '6.0'
local_mlver = '2023b'
versionsuffix = '-MATLAB-%s' % local_mlver

homepage = 'https://www.dynare.org'
description = """Dynare is a software platform for handling a wide class of economic models, 
in particular dynamic stochastic general equilibrium (DSGE) and overlapping generations (OLG) 
models. The models solved by Dynare include those relying on the rational expectations 
hypothesis, wherein agents form their expectations about the future in a way consistent 
with the model. But Dynare is also able to handle models where expectations are formed 
differently: on one extreme, models where agents perfectly anticipate the future; on the 
other extreme, models where agents have limited rationality or imperfect knowledge of the 
state of the economy and, hence, form their expectations through a learning process."""

toolchain = {'name': 'foss', 'version': '2023b'}

source_urls = ['https://www.dynare.org/release/source']
sources = ['%(namelower)s-%(version)s.tar.xz']
patches = ['%(name)s-%(version)s-pthread.patch']
checksums = [
    {'dynare-6.0.tar.xz': '52460046d44776d936986f52649f9e48966b07e414a864d83531d43e568ab682'},
    {'Dynare-6.0-pthread.patch': '20d8537456d1febea1dbefc7edc2ed36fc63d7ce4cdfcd865b52453b870d6116'},
]

builddependencies = [
    ('gawk', '5.3.0'),
    ('Bison', '3.8.2'),
    ('flex', '2.6.4'),
    ('Boost', '1.83.0'),
    ('Meson', '1.2.3'),
    ('Ninja', '1.11.1'),
    ('pkgconf', '2.0.3'),
    ('MATLAB', local_mlver, '', SYSTEM),
]

dependencies = [
    ('x13as', '1-1-b60'),
    ('MATIO', '1.5.26'),
    ('GSL', '2.7'),
    ('Szip', '2.1.1'),
    ('SLICOT', '5.9'),
]

preconfigopts = 'export MATLABROOT=${EBROOTMATLAB} && module del MATLAB && ml; '
configopts = "-Dprefer_static=true -Dmatlab_path=${MATLABROOT} -Dbuildtype=release "

# this still takes quite too long:
# runtest = 'meson test --num-processes 3'
# This take around 40 mins or so: 
runtest = 'meson test --num-processes 3 --suite deterministic_simulations '

sanity_check_paths = {
    'files': ['bin/dynare-preprocessor'],
    'dirs': ['lib/dynare'],
}

moduleclass = 'math'
