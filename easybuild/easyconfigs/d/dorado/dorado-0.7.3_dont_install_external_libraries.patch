Don't install external libraries in Dorado's lib directory.

Ã…ke Sandgren, 2024-09-02
diff --git a/CMakeLists.txt b/CMakeLists.txt
index a84c7524..0791dda8 100755
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -431,7 +431,7 @@ if(CMAKE_SYSTEM_NAME STREQUAL "Linux")
         else()
             # bundle the libraries from the cuda toolkit
             file(GLOB NATIVE_CUDA_LIBS "${CUDAToolkit_TARGET_DIR}/targets/${CMAKE_SYSTEM_PROCESSOR}-linux/lib/${LIB}")
-            install(FILES ${NATIVE_CUDA_LIBS} DESTINATION lib COMPONENT redist_libs)
+            #install(FILES ${NATIVE_CUDA_LIBS} DESTINATION lib COMPONENT redist_libs)
         endif()
     endforeach()
 
@@ -444,14 +444,14 @@ if(CMAKE_SYSTEM_NAME STREQUAL "Linux")
         RESOLVE_SYMLINKS("${DEBUG_LIBRARIES}" NEW_HDF_DEBUG_LIBRARIES)
         foreach(HDF_LIB IN LISTS NEW_HDF_DEBUG_LIBRARIES)
 	    if(${HDF_LIB} MATCHES "hdf5")
-                install(FILES ${HDF_LIB} DESTINATION lib COMPONENT redist_libs CONFIGURATIONS Debug)
+                #install(FILES ${HDF_LIB} DESTINATION lib COMPONENT redist_libs CONFIGURATIONS Debug)
             endif()
         endforeach()
         FILTER_LIST("${HDF5_C_LIBRARIES}" RELEASE_LIBRARIES optimized debug ${SHARED_LIB_EXT})
         RESOLVE_SYMLINKS("${RELEASE_LIBRARIES}" NEW_HDF_RELEASE_LIBRARIES)
         foreach(HDF_LIB IN LISTS NEW_HDF_RELEASE_LIBRARIES)
 	    if(${HDF_LIB} MATCHES "hdf5")
-                install(FILES ${HDF_LIB} DESTINATION lib COMPONENT redist_libs CONFIGURATIONS Release ReleaseWithDebInfo)
+                #install(FILES ${HDF_LIB} DESTINATION lib COMPONENT redist_libs CONFIGURATIONS Release ReleaseWithDebInfo)
             endif()
         endforeach()
     endif()
@@ -459,17 +459,17 @@ if(CMAKE_SYSTEM_NAME STREQUAL "Linux")
     find_library(SZ_DLL sz REQUIRED)
     get_filename_component(SZ_DLL_PATH ${SZ_DLL} DIRECTORY)
     file(GLOB SZ_DLLS "${SZ_DLL_PATH}/libsz.so*")
-    install(FILES ${SZ_DLLS} DESTINATION lib COMPONENT redist_libs)
+    #install(FILES ${SZ_DLLS} DESTINATION lib COMPONENT redist_libs)
 
     find_library(AEC_DLL aec REQUIRED)
     get_filename_component(AEC_DLL_PATH ${AEC_DLL} DIRECTORY)
     file(GLOB AEC_DLLS "${AEC_DLL_PATH}/libaec.so*")
-    install(FILES ${AEC_DLLS} DESTINATION lib COMPONENT redist_libs)
+    #install(FILES ${AEC_DLLS} DESTINATION lib COMPONENT redist_libs)
 
     # If zstd has been dynamically linked, add the .so to the package
     get_filename_component(ZSTD_LIBRARY_PATH ${ZSTD_LIBRARY_RELEASE} DIRECTORY)
     file(GLOB ZSTD_DLLS "${ZSTD_LIBRARY_PATH}/*zstd.so*")
-    install(FILES ${ZSTD_DLLS} DESTINATION lib COMPONENT redist_libs)
+    #install(FILES ${ZSTD_DLLS} DESTINATION lib COMPONENT redist_libs)
 
 elseif(WIN32)
     file(GLOB TORCH_DLLS "${TORCH_LIB}/lib/*.dll")
