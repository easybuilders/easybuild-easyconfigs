# This file is an EasyBuild reciPY as per https://github.com/easybuilders/easybuild
# Author: Pablo Escobar Lopez
# sciCORE - University of Basel
# SIB Swiss Institute of Bioinformatics
# Update to 7.5.1
# J. Sassmannshausen / GSTT

easyblock = 'CMakeMake'

name = 'OpenMM'
version = '8.0.0'
versionsuffix = '-CUDA-%(cudaver)s'

homepage = 'https://openmm.org'
description = "OpenMM is a toolkit for molecular simulation."

toolchain = {'name': 'foss', 'version': '2022a'}
toolchainopts = {'opt': True}

source_urls = ['https://github.com/openmm/openmm/archive/']
sources = ['%(version)s.tar.gz']
patches = ['OpenMM-8.0.0_add_no_tree_vectorize.patch']
checksums = [
    'dc63d7b47c8bb7b169c409cfd63d909ed0ce1ae114d37c627bf7a4231acf488e',  # 8.0.0.tar.gz
    '4bacf45443a2472e59798743f27d07481e065d784cbbea7be22aa6427af0d2bd',  # OpenMM-8.0.0_add_no_tree_vectorize.patch
]

builddependencies = [
    ('CMake', '3.23.1'),
    ('Doxygen', '1.9.4'),
]

dependencies = [
    ('Python', '3.10.4'),
    ('SciPy-bundle', '2022.05'),
    ('SWIG', '4.0.2'),
    ('CUDA', '11.7.0', '', SYSTEM),
]

# Set the OPENMM_CUDA_COMPILER variable to make sure that all tests use the right nvcc,
# Otherwise they will use the wrong path: `/usr/local/cuda/bin/nvcc`
pretestopts = ' export OPENMM_CUDA_COMPILER=${EBROOTCUDA}/bin/nvcc && '
pretestopts += " CTEST_OUTPUT_ON_FAILURE=1"
# Skip CudaCompiler test as it doesn't work when the OPENMM_CUDA_COMPILER variable is set
local_ignore_pattern = "(Integrator)|(Thermostat)|(Barostat)|(Rpmd)|(Amoeba)|(CudaCompiler)"
runtest = """test -e ARGS="-E \'%s\'" """ % local_ignore_pattern

preinstallopts = ' export OPENMM_INCLUDE_PATH=%(installdir)s/include && '
preinstallopts += ' export OPENMM_LIB_PATH=%(installdir)s/lib && '

# required to install the python API
installopts = ' && cd python && python setup.py build && python setup.py install --prefix=%(installdir)s'

sanity_check_paths = {
    'files': ['lib/libOpenMM.%s' % SHLIB_EXT],
    'dirs': ['lib/python%(pyshortver)s/site-packages']
}

sanity_check_commands = [
    "python -c 'import simtk.openmm'",
    "python -m openmm.testInstallation",
]

modextrapaths = {
    'PYTHONPATH': 'lib/python%(pyshortver)s/site-packages/OpenMM-%(version)s-py%(pyshortver)s-linux-%(arch)s.egg',
    'OPENMM_INCLUDE_PATH': 'include',
    'OPENMM_LIB_PATH': 'lib',
}

moduleclass = 'bio'
