easyblock = 'CMakeMake'

name = 'OpenMM'
version = '7.5.1'
versionsuffix = '-CUDA-%(cudaver)s-DeepMind-patch'

homepage = 'https://openmm.org'
description = "OpenMM is a toolkit for molecular simulation."

toolchain = {'name': 'foss', 'version': '2021b'}
toolchainopts = {'opt': True}

source_urls = ['https://github.com/openmm/openmm/archive/']
sources = ['%(version)s.tar.gz']
patches = [
    ('OpenMM-%(version)s_DeepMind.patch', 'wrappers/python'),
    'OpenMM-7.5.0_fix_path_to_nvcc.patch',
    'OpenMM-8.0.0_add_no_tree_vectorize.patch',
]
checksums = [
    {'7.5.1.tar.gz': 'c88d6946468a2bde2619acb834f57b859b5e114a93093cf562165612e10f4ff7'},
    {'OpenMM-7.5.1_DeepMind.patch': '1b109dfff3af5c6aa70690bca14618612953c68840a7e64f679db7ca33c1aff6'},
    {'OpenMM-7.5.0_fix_path_to_nvcc.patch': '050d5b81e70b34d06ef87eafc6d540b2cf716a61f53b1d2a3786504da3ec2e3c'},
    {'OpenMM-8.0.0_add_no_tree_vectorize.patch': '4bacf45443a2472e59798743f27d07481e065d784cbbea7be22aa6427af0d2bd'},
]

builddependencies = [
    ('CMake', '3.22.1'),
    ('Doxygen', '1.9.1'),
]

dependencies = [
    ('Python', '3.9.6'),
    ('SciPy-bundle', '2021.10'),
    ('CUDA', '11.4.1', '', SYSTEM),
    ('SWIG', '4.0.2'),
]

# Flags for CUDA-enabled build
configopts = "-DOPENMM_BUILD_CUDA_LIB=ON"

# defining OPENMM_CUDA_COMPILER=nvcc on pretestops causes 1 test to fail: https://github.com/openmm/openmm/issues/3373
pretestopts = " CTEST_OUTPUT_ON_FAILURE=1"
local_ignore_pattern = "(Integrator)|(Thermostat)|(Barostat)|(Rpmd)|(Amoeba)"
runtest = """test -e ARGS="-E \'%s\'" """ % local_ignore_pattern

preinstallopts = ' export OPENMM_INCLUDE_PATH=%(installdir)s/include && '
preinstallopts += ' export OPENMM_LIB_PATH=%(installdir)s/lib && '

# required to install the python API
installopts = ' && cd python && python setup.py build && python setup.py install --prefix=%(installdir)s'

sanity_check_paths = {
    'files': ['lib/libOpenMM.%s' % SHLIB_EXT, 'lib/python%(pyshortver)s/site-packages/simtk/openmm/openmm.py'],
    'dirs': []
}

sanity_check_commands = ["python -m simtk.testInstallation"]

modextrapaths = {
    'PYTHONPATH': 'lib/python%(pyshortver)s/site-packages',
    'OPENMM_INCLUDE_PATH': 'include',
    'OPENMM_LIB_PATH': 'lib',
}

moduleclass = 'bio'
