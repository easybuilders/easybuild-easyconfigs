easyblock = 'ConfigureMake'

name = 'OpenMPI'
version = '2.0.0'

homepage = 'http://www.open-mpi.org/'
description = """The Open MPI Project is an open source MPI-2 implementation."""

versionsuffix  = '-CUDA-7.5.18'

toolchain = {'name': 'GCC', 'version': '5.2.0'}

sources = [SOURCELOWER_TAR_GZ]

source_urls = ['http://www.open-mpi.org/software/ompi/v%(version_major_minor)s/downloads',]

dependencies = [
	('hwloc', '1.11.3'),
  	('CUDA', '7.5.18','',True)
]


configopts = '--with-threads=posix --enable-shared --enable-mpi-thread-multiple '
configopts += '--enable-mpirun-prefix-by-default '  # suppress failure modes in relation to mpirun path
configopts += '--with-hwloc=$EBROOTHWLOC '  # hwloc support
configopts += '--disable-dlopen '  # statically link component, don't do dynamic loading
configopts += '--with-x ' # enabling X support
configopts += '--with-lsf=/hpc/grid/lsfhpc1p/9.1 --with-lsf-libdir=/hpc/grid/lsfhpc1p/9.1/linux2.6-glibc2.3-x86_64/lib/ ' # build with LSF support
configopts += '--enable-mpi-fortran ' # enable MPI Fortran bindings
configopts += '--enable-mpi-cxx ' # enable C++ MPI bindings
configopts += '--with-cma ' # cross memory attach support
configopts += '--enable-memory-linux-malloc-alignment ' # memory malloc alignment
configopts += ' --enable-memchecker ' # enable memory and buffer check
configopts += '--with-valgrind ' # enable valgrind support
configopts += '--with-cuda=$EBROOTCUDA --enable-dlopen' # with CUDA support, enable dl support, this is needed with CUDA


osdependencies = [('valgrind', 'valgrind-devel')]
# needed for --with-verbs

# VampirTrace is no longer used : https://www.open-mpi.org/community/lists/announce/2016/07/0085.php
libs = ["mpi_mpifh", "mpi", "ompitrace", "open-pal", "open-rte"]
sanity_check_paths = {
    'files': ["bin/%s" % binfile for binfile in ["ompi_info", "opal_wrapper", "orterun"]] +
             ["lib/lib%s.%s" % (libfile, SHLIB_EXT) for libfile in libs] +
             ["include/%s.h" % x for x in ["mpi-ext", "mpif-config", "mpif", "mpi", "mpi_portable_platform"]],
    'dirs': ["include/openmpi"],
}

moduleclass = 'mpi'
