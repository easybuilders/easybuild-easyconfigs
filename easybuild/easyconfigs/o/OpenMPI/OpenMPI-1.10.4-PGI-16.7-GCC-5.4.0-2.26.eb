easyblock = 'ConfigureMake'

name = 'OpenMPI'
version = '1.10.4'

homepage = 'http://www.open-mpi.org/'
description = """The Open MPI Project is an open source MPI-2 implementation."""

toolchain = {'name': 'PGI', 'version': '16.7-GCC-5.4.0-2.26'}

sources = [SOURCELOWER_TAR_GZ]
source_urls = ['http://www.open-mpi.org/software/ompi/v%(version_major_minor)s/downloads']

checksums = ['fb2fdb6a5b65c80d7dfa4bc9a0caf665']

configopts = '--with-threads=posix --enable-shared --enable-mpi-thread-multiple --with-verbs '
configopts += '--enable-mpirun-prefix-by-default '  # suppress failure modes in relation to mpirun path
configopts += '--with-hwloc=$EBROOTHWLOC '  # hwloc support
configopts += '--with-cxxrtlib="-lgcc_s -lstdc++"'  # for vt-mpi-unify

dependencies = [('hwloc', '1.11.4')]

# needed for --with-verbs
osdependencies = [('libibverbs-dev', 'libibverbs-devel', 'rdma-core-devel')]

libs = ["mpi_cxx", "mpi_mpifh", "mpi", "ompitrace", "open-pal", "open-rte", "vt", "vt-hyb", "vt-mpi", "vt-mpi-unify"]
sanity_check_paths = {
    'files': ["bin/%s" % binfile for binfile in ["ompi_info", "opal_wrapper", "orterun"]] +
             ["lib/lib%s.%s" % (libfile, SHLIB_EXT) for libfile in libs] +
             ["include/%s.h" % x for x in ["mpi-ext", "mpif-config", "mpif", "mpi", "mpi_portable_platform"]],
    'dirs': ["include/openmpi/ompi/mpi/cxx"],
}

sanity_check_commands = [
    ('mpicc --version | grep pgcc', ''),
    ('mpicxx --version | grep pgc++', ''),
    ('mpifort --version | grep pgfortran', ''),
]

moduleclass = 'mpi'
