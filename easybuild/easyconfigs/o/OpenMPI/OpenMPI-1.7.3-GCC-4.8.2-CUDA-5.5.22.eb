name = 'OpenMPI'
version = "1.7.3"
versionsuffix = '-CUDA-5.5.22'

homepage = 'http://www.open-mpi.org/'
description = """The Open MPI Project is an open source MPI-2 implementation."""

toolchain = {'name': 'GCC', 'version': '4.8.2'}

sources = [SOURCELOWER_TAR_GZ]
source_urls = ['http://www.open-mpi.org/software/ompi/v%s/downloads' % '.'.join(version.split('.')[0:2])]

builddependencies = [
    ('Automake', '1.14'),
    ('Autoconf', '2.69')
]

dependencies = [
    ('hwloc', '1.7.2'),
    ('CUDA', '5.5.22', '', True),
]

configopts = '--with-threads=posix --enable-shared --enable-mpi-thread-multiple --with-openib '
configopts += '--enable-mpirun-prefix-by-default '  # suppress failure modes in relation to mpirun path
configopts += '--with-hwloc=$EBROOTHWLOC '          # hwloc support
configopts += '--disable-dlopen '                   # statically link component, don't do dynamic loading
configopts += '--with-cuda=$CUDA_HOME '             # CUDA-aware build

sanity_check_paths  =  {
                        'files': ["bin/%s" % binfile for binfile in ["ompi_info", "opal_wrapper", "orterun"]] +
                                 ["lib/lib%s.%s" % (libfile, shared_lib_ext) for libfile in ["mpi_cxx",
#"mpi_f77" ,
#"mpi_f90",
                                                                                             "mpi", "ompitrace", "open-pal",
                                                                                             "open-rte", "vt", "vt-hyb",
                                                                                             "vt-mpi", "vt-mpi-unify"]] +
                                 ["include/%s.h" % x for x in ["mpi-ext",
#mpif-common", "mpif-config", "mpif",
                                                               "mpi", "mpi_portable_platform"]],
                        'dirs': ["include/openmpi/ompi/mpi/cxx"]
                       }

moduleclass = 'mpi'

patches = ['openmpi-mca-params.conf-1.6.4-local.patch', 'pax_disable.patch']
