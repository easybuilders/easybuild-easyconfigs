easyblock = 'ConfigureMake'

name = 'Octopus'
version = '11.2'

homepage = 'https://octopus-code.org'
description = """Octopus is a scientific program aimed at the ab initio virtual experimentation 
on a hopefully ever-increasing range of system types. Electrons are described quantum-mechanically 
within density-functional theory (DFT), in its time-dependent form (TDDFT) when doing simulations 
in time. Nuclei are described classically as point particles. 
Electron-nucleus interaction is described within the pseudopotential approximation."""

toolchain = {'name': 'foss', 'version': '2020b'}
toolchainopts = {'usempi': True, 'opt': True, 'openmp': True}

source_urls = ['http://www.octopus-code.org/down.php?file=%(version)s/']
sources = [SOURCELOWER_TAR_GZ]
patches = ['Octopus-11.2-mpi_test.patch']
checksums = [
    'eca1d8b51fd77f42ecf43de73d78cc80798f9a4a948647e79102d090fbd76ade',  # octopus-11.2.tar.gz
    'ba567d280b5e46ee582a806dc85a311b68c1b88815864aa9e182594bae7ac8f7',  # Octopus-11.2-mpi_test.patch
]

builddependencies = [
    ('Perl', '5.32.0'),
]

dependencies = [
    ('PFFT', '1.0.8-alpha'),
    ('NFFT', '3.1.3'),
    ('libxc', '4.3.4'),
    ('libvdwxc', '0.4.0'),
    ('GSL', '2.6'),
    ('netCDF-Fortran', '4.5.3'),
    ('NLopt', '2.6.2'),
    ('PSolver', '1.8.3'),
    ('ParMETIS', '4.0.3'),
]

configopts = 'FCFLAGS="$FCFLAGS -fallow-argument-mismatch" '
configopts += '--enable-mpi --enable-openmp --with-max-dim=4 '
configopts += '--with-blas="-L$BLAS_LIB_DIR $LIBBLAS_MT" --with-blacs="-L$SCALAPACK_LIB_DIR $LIBSCALAPACK_MT" '
configopts += '--with-fftw-prefix=$EBROOTFFTW '
configopts += '--with-pfft-prefix=$EBROOTPFFT '
configopts += '--with-libxc-prefix=$EBROOTLIBXC '
configopts += '--with-libvdwxc-prefix=$EBROOTLIBVDWXC '
configopts += '--with-netcdf-prefix=$EBROOTNETCDFMINFORTRAN '
configopts += '--with-nlopt-prefix=$EBROOTNLOPT '
configopts += '--with-futile-prefix=$EBROOTFUTILE '
configopts += '--with-psolver-prefix=$EBROOTPSOLVER '

# Run only the short tests, as the full testsuite can take a lot of time.
# Use only two threads as the tests are not large enough to exploit OpenMP parallelism efficiently.
runtest = 'OMP_NUM_THREADS=2 MPIEXEC="mpiexec --bind-to none" check-short'

sanity_check_paths = {
    'files': ['bin/octopus'],
    'dirs': ['share/octopus']
}

moduleclass = 'phys'
