Disable tests that do textual compare of numerical values.
Some of these values may vary on the last one or two digits.

Ã…ke Sandgren, 2024-03-27
diff -ru openbabel-openbabel-3-1-1.orig/test/testobconv_writers.py openbabel-openbabel-3-1-1/test/testobconv_writers.py
--- openbabel-openbabel-3-1-1.orig/test/testobconv_writers.py	2020-05-08 17:38:02.000000000 +0200
+++ openbabel-openbabel-3-1-1/test/testobconv_writers.py	2024-03-27 08:19:01.012651395 +0100
@@ -669,81 +669,82 @@
 """)
 
 # cdjson -- ChemDoodle JSON
-class TestCDJSON(unittest.TestCase, WriteMixin):
-    fmt = "cdjson"
-    maxDiff = None
-    def test_default(self):
-        self.assertWriters(self.fmt, """\
-{
-  "m": [
-    {
-      "a": [
-        {
-          "x": 31.692,
-          "y": -0.498
-        },
-        {
-          "x": 31.406,
-          "y": 19.51
-        },
-        {
-          "x": 48.59,
-          "y": 29.764
-        },
-        {
-          "x": 66.062,
-          "y": 20.008
-        },
-        {
-          "x": 66.35,
-          "y": -0.0
-        },
-        {
-          "x": 0.0,
-          "y": 0.0
-        },
-        {
-          "x": -20.009999999999999,
-          "y": 0.10200000000000001,
-          "l": 8
-        }
-      ],
-      "b": [
-        {
-          "b": 0,
-          "e": 5,
-          "o": 2
-        },
-        {
-          "b": 0,
-          "e": 1
-        },
-        {
-          "b": 1,
-          "e": 2,
-          "o": 2
-        },
-        {
-          "b": 2,
-          "e": 3
-        },
-        {
-          "b": 3,
-          "e": 4,
-          "o": 2
-        },
-        {
-          "b": 4,
-          "e": 5
-        },
-        {
-          "b": 5,
-          "e": 6
-        }
-      ]
-    }
-  ]
-}""")
+## Should never do pure textual compare of numerical values.
+## class TestCDJSON(unittest.TestCase, WriteMixin):
+##     fmt = "cdjson"
+##     maxDiff = None
+##     def test_default(self):
+##         self.assertWriters(self.fmt, """\
+## {
+##   "m": [
+##     {
+##       "a": [
+##         {
+##           "x": 31.692,
+##           "y": -0.498
+##         },
+##         {
+##           "x": 31.406,
+##           "y": 19.51
+##         },
+##         {
+##           "x": 48.59,
+##           "y": 29.764
+##         },
+##         {
+##           "x": 66.062,
+##           "y": 20.008
+##         },
+##         {
+##           "x": 66.35,
+##           "y": -0.0
+##         },
+##         {
+##           "x": 0.0,
+##           "y": 0.0
+##         },
+##         {
+##           "x": -20.009999999999999,
+##           "y": 0.10200000000000001,
+##           "l": 8
+##         }
+##       ],
+##       "b": [
+##         {
+##           "b": 0,
+##           "e": 5,
+##           "o": 2
+##         },
+##         {
+##           "b": 0,
+##           "e": 1
+##         },
+##         {
+##           "b": 1,
+##           "e": 2,
+##           "o": 2
+##         },
+##         {
+##           "b": 2,
+##           "e": 3
+##         },
+##         {
+##           "b": 3,
+##           "e": 4,
+##           "o": 2
+##         },
+##         {
+##           "b": 4,
+##           "e": 5
+##         },
+##         {
+##           "b": 5,
+##           "e": 6
+##         }
+##       ]
+##     }
+##   ]
+## }""")
 
 ## # cdxml -- ChemDraw CDXML format
 ## XXX fails on an unpatched system
@@ -2754,179 +2755,180 @@
 """)
 
 # pcjson -- PubChem JSON
-class TestPCJSON(unittest.TestCase, WriteMixin):
-    fmt = "pcjson"
-    maxDiff = None
-    def test_default(self):
-        self.assertWriters(self.fmt, """\
-{
-  "PC_Compounds": [
-    {
-      "atoms": {
-        "aids": [
-          1,
-          2,
-          3,
-          4,
-          5,
-          6,
-          7,
-          8,
-          9,
-          10,
-          11,
-          12,
-          13
-        ],
-        "element": [
-          6,
-          6,
-          6,
-          6,
-          6,
-          6,
-          8,
-          1,
-          1,
-          1,
-          1,
-          1,
-          1
-        ]
-      },
-      "bonds": {
-        "aid1": [
-          1,
-          1,
-          2,
-          3,
-          4,
-          5,
-          6,
-          1,
-          2,
-          3,
-          4,
-          5,
-          7
-        ],
-        "aid2": [
-          6,
-          2,
-          3,
-          4,
-          5,
-          6,
-          7,
-          8,
-          9,
-          10,
-          11,
-          12,
-          13
-        ],
-        "order": [
-          2,
-          1,
-          2,
-          1,
-          2,
-          1,
-          1,
-          1,
-          1,
-          1,
-          1,
-          1,
-          1
-        ]
-      },
-      "coords": [
-        {
-          "type": [
-            1
-          ],
-          "aids": [
-            1,
-            2,
-            3,
-            4,
-            5,
-            6,
-            7,
-            8,
-            9,
-            10,
-            11,
-            12,
-            13
-          ],
-          "conformers": [
-            {
-              "x": [
-                1.5846,
-                1.5703,
-                2.4295,
-                3.3031,
-                3.3175,
-                0.0,
-                -1.0005,
-                2.313816216007316,
-                0.669250157347277,
-                2.4146659588503769,
-                4.189331679349326,
-                4.052466878708012,
-                -1.4648575597102012
-              ],
-              "y": [
-                1.5846,
-                1.5703,
-                2.4295,
-                3.3031,
-                3.3175,
-                0.0,
-                -1.0005,
-                2.313816216007316,
-                0.669250157347277,
-                2.4146659588503769,
-                4.189331679349326,
-                4.052466878708012,
-                -1.4648575597102012
-              ],
-              "style": {
-                "annotation": [
-                  8,
-                  8,
-                  8,
-                  8,
-                  8,
-                  8
-                ],
-                "aid1": [
-                  1,
-                  1,
-                  2,
-                  3,
-                  4,
-                  5
-                ],
-                "aid2": [
-                  6,
-                  2,
-                  3,
-                  4,
-                  5,
-                  6
-                ]
-              }
-            }
-          ]
-        }
-      ],
-      "charge": 0
-    }
-  ]
-}""")
+## Should never do pure textual compare of numerical values.
+## class TestPCJSON(unittest.TestCase, WriteMixin):
+##     fmt = "pcjson"
+##     maxDiff = None
+##     def test_default(self):
+##         self.assertWriters(self.fmt, """\
+## {
+##   "PC_Compounds": [
+##     {
+##       "atoms": {
+##         "aids": [
+##           1,
+##           2,
+##           3,
+##           4,
+##           5,
+##           6,
+##           7,
+##           8,
+##           9,
+##           10,
+##           11,
+##           12,
+##           13
+##         ],
+##         "element": [
+##           6,
+##           6,
+##           6,
+##           6,
+##           6,
+##           6,
+##           8,
+##           1,
+##           1,
+##           1,
+##           1,
+##           1,
+##           1
+##         ]
+##       },
+##       "bonds": {
+##         "aid1": [
+##           1,
+##           1,
+##           2,
+##           3,
+##           4,
+##           5,
+##           6,
+##           1,
+##           2,
+##           3,
+##           4,
+##           5,
+##           7
+##         ],
+##         "aid2": [
+##           6,
+##           2,
+##           3,
+##           4,
+##           5,
+##           6,
+##           7,
+##           8,
+##           9,
+##           10,
+##           11,
+##           12,
+##           13
+##         ],
+##         "order": [
+##           2,
+##           1,
+##           2,
+##           1,
+##           2,
+##           1,
+##           1,
+##           1,
+##           1,
+##           1,
+##           1,
+##           1,
+##           1
+##         ]
+##       },
+##       "coords": [
+##         {
+##           "type": [
+##             1
+##           ],
+##           "aids": [
+##             1,
+##             2,
+##             3,
+##             4,
+##             5,
+##             6,
+##             7,
+##             8,
+##             9,
+##             10,
+##             11,
+##             12,
+##             13
+##           ],
+##           "conformers": [
+##             {
+##               "x": [
+##                 1.5846,
+##                 1.5703,
+##                 2.4295,
+##                 3.3031,
+##                 3.3175,
+##                 0.0,
+##                 -1.0005,
+##                 2.313816216007316,
+##                 0.669250157347277,
+##                 2.4146659588503769,
+##                 4.189331679349326,
+##                 4.052466878708012,
+##                 -1.4648575597102012
+##               ],
+##               "y": [
+##                 1.5846,
+##                 1.5703,
+##                 2.4295,
+##                 3.3031,
+##                 3.3175,
+##                 0.0,
+##                 -1.0005,
+##                 2.313816216007316,
+##                 0.669250157347277,
+##                 2.4146659588503769,
+##                 4.189331679349326,
+##                 4.052466878708012,
+##                 -1.4648575597102012
+##               ],
+##               "style": {
+##                 "annotation": [
+##                   8,
+##                   8,
+##                   8,
+##                   8,
+##                   8,
+##                   8
+##                 ],
+##                 "aid1": [
+##                   1,
+##                   1,
+##                   2,
+##                   3,
+##                   4,
+##                   5
+##                 ],
+##                 "aid2": [
+##                   6,
+##                   2,
+##                   3,
+##                   4,
+##                   5,
+##                   6
+##                 ]
+##               }
+##             }
+##           ]
+##         }
+##       ],
+##       "charge": 0
+##     }
+##   ]
+## }""")
 
 # pcm -- PCModel Format
 class TestPCM(unittest.TestCase, WriteMixin):
